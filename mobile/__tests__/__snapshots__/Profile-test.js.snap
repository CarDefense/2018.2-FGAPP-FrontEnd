// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Profile snapShot 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#00ACC1",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
    style={
      Object {
        "marginBottom": 5,
        "marginTop": 20,
      }
    }
  >
    <RCTRefreshControl />
    <View>
      <View
        style={
          Object {
            "alignItems": "center",
            "padding": 30,
          }
        }
      >
        <Image
          source={null}
          style={
            Object {
              "borderColor": "white",
              "borderRadius": 40,
              "borderWidth": 5,
              "height": 100,
              "marginBottom": 10,
              "width": 100,
            }
          }
        />
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "white",
              "fontSize": 22,
              "fontWeight": "800",
            }
          }
        >
          Olá, 
          
          ! Tudo bem?
        </Text>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "white",
              "fontSize": 15,
              "fontWeight": "800",
              "marginBottom": 15,
              "marginTop": 30,
            }
          }
        >
          Aqui estão os seus carros
        </Text>
      </View>
      <View>
        <RCTScrollView
          data={undefined}
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          invertStickyHeaders={undefined}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <View />
        </RCTScrollView>
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#B2EBF2",
              "borderRadius": 20,
              "height": 40,
              "justifyContent": "center",
              "opacity": 1,
              "width": 40,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "white",
                "fontSize": 30,
              }
            }
          >
            +
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
