// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PublicNotifications snapShot 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#00ACC1",
      "flex": 1,
    }
  }
>
  <View
    enabled={true}
    keyboardVerticalOffset={0}
    onLayout={[Function]}
    style={undefined}
  >
    <View
      style={
        Array [
          undefined,
          Object {
            "bottom": 0,
          },
        ]
      }
    >
      <RCTScrollView>
        <View>
          <View
            style={
              Object {
                "flex": 1,
                "paddingLeft": 16,
                "paddingRight": 16,
              }
            }
          >
            <View
              style={
                Object {
                  "marginTop": 25,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "padding": 30,
                  }
                }
              >
                <Image
                  source={1}
                  style={
                    Object {
                      "borderColor": "white",
                      "borderRadius": 40,
                      "borderWidth": 5,
                      "height": 100,
                      "marginBottom": 10,
                      "width": 100,
                    }
                  }
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "marginBottom": 20,
                  "paddingBottom": 20,
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#B2EBF2",
                    "borderColor": "white",
                    "borderRadius": 15,
                    "borderWidth": 5,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "white",
                      "color": "#26C6DA",
                    }
                  }
                >
                  <RCTPicker
                    items={
                      Array [
                        Object {
                          "label": "Alerta Geral",
                          "textColor": undefined,
                          "value": "Alerta Geral",
                        },
                        Object {
                          "label": "Roubo",
                          "textColor": undefined,
                          "value": "Roubo",
                        },
                        Object {
                          "label": "IncÃªndio",
                          "textColor": undefined,
                          "value": "Incendio",
                        },
                        Object {
                          "label": "Tempestade",
                          "textColor": undefined,
                          "value": "Tempestade",
                        },
                      ]
                    }
                    onChange={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    selectedIndex={0}
                    style={
                      Array [
                        Object {
                          "height": 216,
                        },
                        undefined,
                      ]
                    }
                  />
                </View>
                <View
                  onResponderRelease={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="auto"
                  style={undefined}
                >
                  <View
                    collapsable={undefined}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "borderBottomColor": "rgba(0, 0, 0, 0.38)",
                        "borderBottomWidth": 0.5,
                        "height": 64,
                        "marginHorizontal": 20,
                        "paddingBottom": 8,
                        "paddingTop": 32,
                      }
                    }
                  >
                    <View
                      collapsable={undefined}
                      style={
                        Object {
                          "position": "absolute",
                          "top": 36,
                        }
                      }
                    >
                      <Text
                        accessible={true}
                        allowFontScaling={true}
                        collapsable={undefined}
                        ellipsizeMode="tail"
                        numberOfLines={1}
                        style={
                          Object {
                            "color": "rgba(0, 0, 0, 0.38)",
                            "fontSize": 16,
                          }
                        }
                      >
                        Detalhes
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "flexDirection": "row",
                        }
                      }
                    >
                      <TextInput
                        allowFontScaling={true}
                        autoCapitalize="sentences"
                        autoCorrect={false}
                        disableFullscreenUI={true}
                        editable={true}
                        enablesReturnKeyAutomatically={true}
                        error={undefined}
                        maxLength={50}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onChangeText={[Function]}
                        onContentSizeChange={[Function]}
                        onFocus={[Function]}
                        placeholderTextColor="white"
                        returnKeyType="next"
                        selectionColor="white"
                        style={
                          Array [
                            Object {
                              "flex": 1,
                              "margin": 0,
                              "padding": 0,
                              "top": 2,
                            },
                            Object {
                              "color": "white",
                              "fontSize": 16,
                              "height": 24,
                              "textAlign": "left",
                            },
                            undefined,
                          ]
                        }
                        underlineColorAndroid="transparent"
                        value=""
                      />
                    </View>
                  </View>
                  <View
                    collapsable={undefined}
                    style={
                      Object {
                        "flexDirection": "row",
                        "height": 8,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "bottom": 0,
                            "left": 0,
                            "paddingVertical": 4,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      >
                        <Text
                          accessible={true}
                          allowFontScaling={true}
                          collapsable={undefined}
                          ellipsizeMode="tail"
                          numberOfLines={1}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "color": "rgb(213, 0, 0)",
                              "fontSize": 0,
                              "opacity": 0,
                            }
                          }
                        />
                      </View>
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "bottom": 0,
                            "left": 0,
                            "paddingVertical": 4,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      >
                        <Text
                          accessible={true}
                          allowFontScaling={true}
                          collapsable={undefined}
                          ellipsizeMode="tail"
                          numberOfLines={1}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "color": "rgba(0, 0, 0, .38)",
                              "fontSize": 12,
                              "opacity": 1,
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "justifyContent": "space-evenly",
                      "marginTop": 20,
                      "paddingRight": 1,
                      "paddingTop": 4,
                    }
                  }
                >
                  <View
                    accessibilityComponentType={undefined}
                    accessibilityLabel={undefined}
                    accessibilityTraits={undefined}
                    accessible={true}
                    collapsable={undefined}
                    hasTVPreferredFocus={undefined}
                    hitSlop={undefined}
                    isTVSelectable={true}
                    nativeID={undefined}
                    onLayout={undefined}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                    testID={undefined}
                    tvParallaxProperties={undefined}
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                    />
                  </View>
                  <View
                    accessibilityComponentType={undefined}
                    accessibilityLabel={undefined}
                    accessibilityTraits={undefined}
                    accessible={true}
                    collapsable={undefined}
                    hasTVPreferredFocus={undefined}
                    hitSlop={undefined}
                    isTVSelectable={true}
                    nativeID={undefined}
                    onLayout={undefined}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                    testID={undefined}
                    tvParallaxProperties={undefined}
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                    />
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "marginBottom": 40,
                      "paddingTop": 20,
                    }
                  }
                >
                  <View
                    accessibilityComponentType={undefined}
                    accessibilityLabel={undefined}
                    accessibilityTraits={undefined}
                    accessible={true}
                    collapsable={undefined}
                    hasTVPreferredFocus={undefined}
                    hitSlop={undefined}
                    isTVSelectable={true}
                    nativeID={undefined}
                    onLayout={undefined}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "white",
                        "borderRadius": 15,
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "center",
                        "opacity": 1,
                        "width": 120,
                      }
                    }
                    testID={undefined}
                    tvParallaxProperties={undefined}
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Object {
                          "color": "#26C6DA",
                          "fontWeight": "800",
                        }
                      }
                    >
                      Enviar
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;
