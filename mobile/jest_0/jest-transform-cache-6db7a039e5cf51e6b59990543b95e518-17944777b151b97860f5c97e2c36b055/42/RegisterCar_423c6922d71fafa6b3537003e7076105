2edbec4c47a1bd3771f197f34c7eca3f
Object.defineProperty(exports,"__esModule",{value:true});exports.default=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactNativeMaterialTextfield=require('react-native-material-textfield');var _reactNative=require('react-native');var _jwtDecode=require('jwt-decode');var _jwtDecode2=_interopRequireDefault(_jwtDecode);var _Const=require('../const/Const');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var RegisterCar=function(_Component){_inherits(RegisterCar,_Component);function RegisterCar(props){_classCallCheck(this,RegisterCar);var _this=_possibleConstructorReturn(this,(RegisterCar.__proto__||Object.getPrototypeOf(RegisterCar)).call(this,props));_this._onRefresh=function(){_this.setState({refreshing:true});_this.componentDidMount().then(function(){_this.setState({refreshing:false});});};_this.onPressButton=function(){var errors={};var errorPlate=false;['plate'].forEach(function(text){var value=_this[text].value();if(!value){errors[text]='Campo obrigatório.';errorPlate=true;}else{if('plate'===text&&value.length<8){errors[text]='Placa inválida. Ex.:AAA-0000';errorPlate=true;}}});['plate'].forEach(function(text){var value=_this[text].value();if(!value){errors[text]='Campo obrigatório.';errorPlate=true;}else{if('plate'===text&&value.length<8){errors[text]='Placa inválida. Ex.:AAA-0000';errorPlate=true;}}});['model'].forEach(function(text){var value=_this[text].value();});['color'].forEach(function(text){var value=_this[text].value();});if(errorPlate==false){var state=_this.props.navigation.state;var token=state.params?state.params.token:undefined;user=(0,_jwtDecode2.default)(token);var url='http://cardefense.eastus.cloudapp.azure.com:8003/'+'/validate_car/';var notification=JSON.stringify({id_token:user.user_id,plate:_this.state.plate,model:_this.state.model,color:_this.state.color});console.log(notification);fetch(url,{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:notification}).then(function(response){return response.json();}).then(function(jsonResponse){console.log(jsonResponse);_reactNative.Alert.alert('Veículo cadastrado!');}).catch(function(error){console.log(error);_reactNative.Alert.alert('Erro ao cadastrar!');});}_this.setState({errors:errors});};_this.plateRef=_this.updateRef.bind(_this,'plate');_this.modelRef=_this.updateRef.bind(_this,'model');_this.colorRef=_this.updateRef.bind(_this,'color');_this.onFocus=_this.onFocus.bind(_this);_this.state={plate:'',model:'',color:'',refreshing:false};return _this;}_createClass(RegisterCar,[{key:'onFocus',value:function onFocus(){var _state$errors=this.state.errors,errors=_state$errors===undefined?{}:_state$errors;for(var text in errors){var ref=this[text];if(ref&&ref.isFocused()){delete errors[text];}}this.setState({errors:errors});}},{key:'onChangeText',value:function onChangeText(words){var _this2=this;['plate'].map(function(text){return{text:text,ref:_this2[text]};}).forEach(function(_ref){var text=_ref.text,ref=_ref.ref;if(ref&&ref.isFocused()){_this2.setState(_defineProperty({},text,words));}});['model'].map(function(text){return{text:text,ref:_this2[text]};}).forEach(function(_ref2){var text=_ref2.text,ref=_ref2.ref;if(ref&&ref.isFocused()){_this2.setState(_defineProperty({},text,words));}});['color'].map(function(text){return{text:text,ref:_this2[text]};}).forEach(function(_ref3){var text=_ref3.text,ref=_ref3.ref;if(ref&&ref.isFocused()){_this2.setState(_defineProperty({},text,words));}});}},{key:'componentDidMount',value:function componentDidMount(){var _this3=this;var state,token,link;return regeneratorRuntime.async(function componentDidMount$(_context){while(1){switch(_context.prev=_context.next){case 0:this.setState({hasError:false,errorMessage:''});state=this.props.navigation.state;token=state.params?state.params.token:undefined;user=(0,_jwtDecode2.default)(token);link=_Const.CAR_API+'/car/?token='+user.user_id;return _context.abrupt('return',fetch(link).then(function(response){return response.json();}).then(function(responseJson){_this3.setState({isLoading:false,dataSource:responseJson},function(){});}).catch(function(error){console.error(error);}));case 6:case'end':return _context.stop();}}},null,this);}},{key:'updateRef',value:function updateRef(text,ref){this[text]=ref;}},{key:'render',value:function render(){var _this4=this;var _state=this.state,_state$errors2=_state.errors,errors=_state$errors2===undefined?{}:_state$errors2,data=_objectWithoutProperties(_state,['errors']);var _data$plate=data.plate,plate=_data$plate===undefined?'text':_data$plate;var _data$model=data.model,model=_data$model===undefined?'text':_data$model;var _data$color=data.color,color=_data$color===undefined?'text':_data$color;return _react2.default.createElement(_reactNative.ScrollView,{refreshControl:_react2.default.createElement(_reactNative.RefreshControl,{refreshing:this.state.refreshing,onRefresh:this._onRefresh})},_react2.default.createElement(_reactNative.View,{style:styles.container},_react2.default.createElement(_reactNative.Text,{style:styles.header},' Cadastro'),_react2.default.createElement(_reactNativeMaterialTextfield.TextField,{ref:this.plateRef,value:data.plate,autoCorrect:false,enablesReturnKeyAutomatically:true,onFocus:this.onFocus,onChangeText:function onChangeText(plate){return _this4.setState({plate:plate});},returnKeyType:'next',label:'Placa',tintColor:'#760f9f',underlineColorAndroid:'transparent',maxLength:8,autoCapitalize:'characters',error:errors.plate}),_react2.default.createElement(_reactNativeMaterialTextfield.TextField,{ref:this.modelRef,value:data.model,autoCorrect:false,enablesReturnKeyAutomatically:true,onFocus:this.onFocus,onChangeText:function onChangeText(model){return _this4.setState({model:model});},returnKeyType:'next',label:'Modelo',tintColor:'#760f9f'}),_react2.default.createElement(_reactNativeMaterialTextfield.TextField,{ref:this.colorRef,value:data.color,autoCorrect:false,enablesReturnKeyAutomatically:true,onFocus:this.onFocus,onChangeText:function onChangeText(color){return _this4.setState({color:color});},returnKeyType:'next',label:'Cor',tintColor:'#760f9f'})),_react2.default.createElement(_reactNative.View,{style:styles.container1},_react2.default.createElement(_reactNative.TouchableOpacity,{style:styles.button,color:'#5c68c3',onPress:this.onPressButton,containerViewStyle:{width:'40%'}},_react2.default.createElement(_reactNative.Text,{style:{color:'white'}},'Cadastrar'))),_react2.default.createElement(_reactNative.View,{style:styles.container1},_react2.default.createElement(_reactNative.FlatList,{data:this.state.dataSource,renderItem:function renderItem(_ref4){var item=_ref4.item;return _react2.default.createElement(_reactNative.View,{style:styles.item2},_react2.default.createElement(_reactNative.Text,{style:styles.text1},item.plate));},keyExtractor:function keyExtractor(_ref5,index){var id=_ref5.id;return id.toString();}})));}}]);return RegisterCar;}(_react.Component);exports.default=RegisterCar;var styles=_reactNative.StyleSheet.create({container:{paddingLeft:16,paddingRight:16},container1:{marginTop:80,flexDirection:'row',justifyContent:'center'},header:{color:'#760f9f',textAlign:'center',fontWeight:'200',fontSize:50,marginTop:25},header2:{color:'#760f9f',textAlign:'left',paddingLeft:20,paddingTop:35,fontWeight:'100',fontSize:30},button:{backgroundColor:"#760f9f",borderRadius:15,height:40,width:120,flexDirection:'row',justifyContent:'center',alignItems:'center'},item2:{alignItems:"center",backgroundColor:"#ffffff",flexGrow:1,margin:4,padding:20,shadowColor:"#000000",shadowOpacity:0.8,shadowRadius:2,shadowOffset:{height:1,width:1},elevation:4},text1:{color:"#760f9f",fontWeight:'200'}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,