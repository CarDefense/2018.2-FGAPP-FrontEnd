{"version":3,"sources":["RegisterCar.js"],"names":["RegisterCar","props","_onRefresh","setState","refreshing","componentDidMount","then","onPressButton","errors","errorPlate","forEach","text","value","length","state","navigation","token","params","undefined","user","url","notification","JSON","stringify","id_token","user_id","plate","model","color","console","log","fetch","method","headers","body","response","json","jsonResponse","Alert","alert","catch","error","plateRef","updateRef","bind","modelRef","colorRef","onFocus","ref","isFocused","words","map","hasError","errorMessage","link","CAR_API","responseJson","isLoading","dataSource","data","styles","container","header","container1","button","width","item","item2","text1","index","id","toString","Component","StyleSheet","create","paddingLeft","paddingRight","marginTop","flexDirection","justifyContent","textAlign","fontWeight","fontSize","header2","paddingTop","backgroundColor","borderRadius","height","alignItems","flexGrow","margin","padding","shadowColor","shadowOpacity","shadowRadius","shadowOffset","elevation"],"mappings":"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","file":"RegisterCar.js","sourcesContent":["import React, { Component } from \"react\";\nimport { TextField } from 'react-native-material-textfield';\nimport { View, Text, TouchableOpacity, ScrollView, StyleSheet, Alert, FlatList, RefreshControl } from 'react-native';\n// import Expo from 'expo'\n// import { Permissions, Notifications } from 'expo'\nimport jwt_decode from 'jwt-decode';\nimport { CAR_API } from '../const/Const'\n\n\n// var tk\n// async function register() {\n//   const { status } = await Expo.Permissions.askAsync(\n//     Expo.Permissions.NOTIFICATIONS\n//   );\n//   if (status != 'granted') {\n//     alert('You need to enable permissions in settings');\n//     return;\n//   }\n\n//   const value = await Expo.Notifications.getExpoPushTokenAsync();\n//   tk = value;\n//   console.log(status, value);\n// }\n\n// async function list() {\n//   const { status: existingStatus } = await Permissions.getAsync(\n//     Permissions.NOTIFICATIONS\n//   );\n//   let finalStatus = existingStatus;\n\n//   // only ask if permissions have not already been determined, because\n//   // iOS won't necessarily prompt the user a second time.\n//   if (existingStatus !== 'granted') {\n//     // Android remote notification permissions are granted during the app\n//     // install, so this will only ask on iOS\n//     const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\n//     finalStatus = status;\n//   }\n\n//   // Stop here if the user did not grant permissions\n//   if (finalStatus !== 'granted') {\n//     return;\n//   }\n//   var value\n//   var tk = await Promise\n//     .resolve(value = await Notifications.getExpoPushTokenAsync())\n//     .then(x => value);\n//   return tk;\n\n// }\n\n\nexport default class RegisterCar extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.plateRef = this.updateRef.bind(this, 'plate');\n    this.modelRef = this.updateRef.bind(this, 'model');\n    this.colorRef = this.updateRef.bind(this, 'color');\n    this.onFocus = this.onFocus.bind(this);\n\n    this.state = {\n      plate: '',\n      model: '',\n      color: '',\n      refreshing: false\n    };\n  }\n\n  onFocus() {\n    let { errors = {} } = this.state;\n\n    for (let text in errors) {\n      let ref = this[text];\n\n      if (ref && ref.isFocused()) {\n        delete errors[text];\n      }\n    }\n\n    this.setState({ errors });\n  }\n\n  onChangeText(words) {\n    ['plate']\n      .map((text) => ({ text, ref: this[text] }))\n      .forEach(({ text, ref }) => {\n        if (ref && ref.isFocused()) {\n          this.setState({ [text]: words });\n        }\n      });\n    ['model']\n      .map((text) => ({ text, ref: this[text] }))\n      .forEach(({ text, ref }) => {\n        if (ref && ref.isFocused()) {\n          this.setState({ [text]: words });\n        }\n      });\n    ['color']\n      .map((text) => ({ text, ref: this[text] }))\n      .forEach(({ text, ref }) => {\n        if (ref && ref.isFocused()) {\n          this.setState({ [text]: words });\n        }\n      });\n  }\n\n  async componentDidMount() {\n    this.setState({ hasError: false, errorMessage: '' })\n    const { state } = this.props.navigation;\n    var token = state.params ? state.params.token : undefined;\n    user = jwt_decode(token)\n    let link = CAR_API + '/car/?token=' + user.user_id\n\n    return fetch(link)\n      .then((response) => response.json())\n      .then((responseJson) => {\n\n        this.setState({\n          isLoading: false,\n          dataSource: responseJson,\n        }, function () {\n\n        });\n\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  _onRefresh = () => {\n    this.setState({ refreshing: true });\n    this.componentDidMount().then(() => {\n      this.setState({ refreshing: false });\n    });\n  }\n\n\n  onPressButton = () => {\n    let errors = {};\n    let errorPlate = false;\n\n    ['plate']\n      .forEach((text) => {\n        let value = this[text].value();\n\n        if (!value) {\n          errors[text] = 'Campo obrigatório.';\n          errorPlate = true;\n        } else {\n          if ('plate' === text && value.length < 8) {\n            errors[text] = 'Placa inválida. Ex.:AAA-0000';\n            errorPlate = true;\n          }\n        }\n      });\n\n    ['plate']\n      .forEach((text) => {\n        let value = this[text].value();\n\n        if (!value) {\n          errors[text] = 'Campo obrigatório.';\n          errorPlate = true;\n        } else {\n          if ('plate' === text && value.length < 8) {\n            errors[text] = 'Placa inválida. Ex.:AAA-0000';\n            errorPlate = true;\n          }\n        }\n      });\n\n    ['model']\n      .forEach((text) => {\n        let value = this[text].value();\n      });\n\n    ['color']\n      .forEach((text) => {\n        let value = this[text].value();\n      });\n\n\n    if (errorPlate == false) {\n\n      const { state } = this.props.navigation;\n      var token = state.params ? state.params.token : undefined;\n      user = jwt_decode(token)\n\n      const url = 'http://cardefense.eastus.cloudapp.azure.com:8003/' + '/validate_car/' //cars db models url\n\n      let notification = JSON.stringify({\n        id_token: user.user_id,\n        plate: this.state.plate,\n        model: this.state.model,\n        color: this.state.color\n      })\n\n      console.log(notification)\n\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: notification\n      }).then(response => { return response.json() }\n      ).then(jsonResponse => {\n        console.log(jsonResponse);\n        // this.setState({ registered: true, registerMessage: 'Veículo cadastrado!' })\n        Alert.alert('Veículo cadastrado!')\n      }\n      ).catch(error => {\n        console.log(error)\n        Alert.alert('Erro ao cadastrar!')\n      })\n    }\n    this.setState({ errors });\n  }\n\n  updateRef(text, ref) {\n    this[text] = ref;\n  }\n\n  render() {\n\n    let { errors = {}, ...data } = this.state;\n    let { plate = 'text' } = data;\n    let { model = 'text' } = data;\n    let { color = 'text' } = data;\n\n    return (\n      <ScrollView\n        refreshControl={\n          <RefreshControl\n            refreshing={this.state.refreshing}\n            onRefresh={this._onRefresh}\n          />\n        }\n      >\n        <View style={styles.container}>\n          <Text style={styles.header}> Cadastro</Text>\n          <TextField\n            ref={this.plateRef}\n            value={data.plate}\n            autoCorrect={false}\n            enablesReturnKeyAutomatically={true}\n            onFocus={this.onFocus}\n            onChangeText={(plate) => this.setState({ plate })}\n            // onChangeText={this.onChangeText}\n            // onSubmitEditing={this.onSubmitPLate}\n            returnKeyType='next'\n            label='Placa'\n            tintColor=\"#760f9f\"\n            underlineColorAndroid=\"transparent\"\n            maxLength={8}\n            autoCapitalize=\"characters\"\n            error={errors.plate}\n          />\n          <TextField\n            ref={this.modelRef}\n            value={data.model}\n            autoCorrect={false}\n            enablesReturnKeyAutomatically={true}\n            onFocus={this.onFocus}\n            onChangeText={(model) => this.setState({ model })}\n            // onChangeText={this.onChangeText}\n            // onSubmitEditing={this.onSubmitModel}\n            returnKeyType='next'\n            label='Modelo'\n            tintColor=\"#760f9f\"\n          />\n          <TextField\n            ref={this.colorRef}\n            value={data.color}\n            autoCorrect={false}\n            enablesReturnKeyAutomatically={true}\n            onFocus={this.onFocus}\n            onChangeText={(color) => this.setState({ color })}\n            // onChangeText={this.onChangeText}\n            // onSubmitEditing={this.onSubmitMessage}\n            returnKeyType='next'\n            label='Cor'\n            tintColor=\"#760f9f\"\n          />\n        </View>\n        <View style={styles.container1}>\n          <TouchableOpacity\n            style={styles.button}\n            color=\"#5c68c3\"\n            onPress={this.onPressButton}\n            containerViewStyle={{ width: '40%' }}\n          >\n            <Text style={{ color: 'white' }} >Cadastrar</Text>\n          </TouchableOpacity>\n          {/* {this.state.registered ? <Text style={{ flexDirection: 'row', justifyContent: 'center', color: '#5c68c3', marginTop: 20 }}>{this.state.registerMessage}</Text> : null } */}\n\n        </View>\n        <View style={styles.container1}>\n          <FlatList\n            data={this.state.dataSource}\n            renderItem={({ item }) => {\n              return (\n                <View style={styles.item2}>\n                  <Text style={styles.text1}>{item.plate}</Text>\n                </View>\n\n              );\n            }}\n            keyExtractor={({ id }, index) => id.toString()}\n          />\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingLeft: 16,\n    paddingRight: 16\n  },\n  container1: {\n    marginTop: 80,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  header: {\n    color: '#760f9f',\n    textAlign: 'center',\n    fontWeight: '200',\n    fontSize: 50,\n    marginTop: 25\n  },\n  header2: {\n    color: '#760f9f',\n    textAlign: 'left',\n    paddingLeft: 20,\n    paddingTop: 35,\n    fontWeight: '100',\n    fontSize: 30,\n  },\n  button: {\n    backgroundColor: \"#760f9f\",\n    borderRadius: 15,\n    height: 40,\n    width: 120,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  item2: {\n    alignItems: \"center\",\n    backgroundColor: \"#ffffff\",\n    flexGrow: 1,\n    margin: 4,\n    padding: 20,\n    shadowColor: \"#000000\",\n    shadowOpacity: 0.8,\n    shadowRadius: 2,\n    shadowOffset: {\n      height: 1,\n      width: 1\n    },\n    elevation: 4\n  },\n  text1: {\n    color: \"#760f9f\",\n    fontWeight: '200',\n  }\n});"]}