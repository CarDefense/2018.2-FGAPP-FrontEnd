fc325bd1b7f78b152ddd42af3f50780b
'use strict';var NativeModules=require('NativeModules');var invariant=require('fbjs/lib/invariant');var FrameRateLogger={setGlobalOptions:function setGlobalOptions(options){if(options.debug!==undefined){invariant(NativeModules.FrameRateLogger,'Trying to debug FrameRateLogger without the native module!');}NativeModules.FrameRateLogger&&NativeModules.FrameRateLogger.setGlobalOptions(options);},setContext:function setContext(context){NativeModules.FrameRateLogger&&NativeModules.FrameRateLogger.setContext(context);},beginScroll:function beginScroll(){NativeModules.FrameRateLogger&&NativeModules.FrameRateLogger.beginScroll();},endScroll:function endScroll(){NativeModules.FrameRateLogger&&NativeModules.FrameRateLogger.endScroll();}};module.exports=FrameRateLogger;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkZyYW1lUmF0ZUxvZ2dlci5qcyJdLCJuYW1lcyI6WyJOYXRpdmVNb2R1bGVzIiwicmVxdWlyZSIsImludmFyaWFudCIsIkZyYW1lUmF0ZUxvZ2dlciIsInNldEdsb2JhbE9wdGlvbnMiLCJvcHRpb25zIiwiZGVidWciLCJ1bmRlZmluZWQiLCJzZXRDb250ZXh0IiwiY29udGV4dCIsImJlZ2luU2Nyb2xsIiwiZW5kU2Nyb2xsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBU0EsYUFFQSxHQUFNQSxlQUFnQkMsT0FBaEIsaUJBQU4sQ0FFQSxHQUFNQyxXQUFZRCxPQUFaLHNCQUFOLENBa0JBLEdBQU1FLGlCQUFrQixDQUt0QkMsaUJBQWtCLDBCQUFTQyxPQUFULENBQWtFLENBQ2xGLEdBQUlBLFFBQVFDLEtBQVIsR0FBa0JDLFNBQXRCLENBQWlDLENBQy9CTCxVQUNFRixjQUFjRyxlQURoQixDQUVFLDREQUZGLEVBSUQsQ0FDREgsY0FBY0csZUFBZCxFQUFpQ0gsY0FBY0csZUFBZCxDQUE4QkMsZ0JBQTlCLENBQStDQyxPQUEvQyxDQUFqQyxDQUNELENBYnFCLENBbUJ0QkcsV0FBWSxvQkFBU0MsT0FBVCxDQUEwQixDQUNwQ1QsY0FBY0csZUFBZCxFQUFpQ0gsY0FBY0csZUFBZCxDQUE4QkssVUFBOUIsQ0FBeUNDLE9BQXpDLENBQWpDLENBQ0QsQ0FyQnFCLENBMkJ0QkMsV0EzQnNCLHVCQTJCUixDQUNaVixjQUFjRyxlQUFkLEVBQWlDSCxjQUFjRyxlQUFkLENBQThCTyxXQUE5QixFQUFqQyxDQUNELENBN0JxQixDQW1DdEJDLFNBbkNzQixxQkFtQ1YsQ0FDVlgsY0FBY0csZUFBZCxFQUFpQ0gsY0FBY0csZUFBZCxDQUE4QlEsU0FBOUIsRUFBakMsQ0FDRCxDQXJDcUIsQ0FBeEIsQ0F3Q0FDLE9BQU9DLE9BQVAsQ0FBaUJWLGVBQWpCIiwiZmlsZSI6IkZyYW1lUmF0ZUxvZ2dlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHByb3ZpZGVzTW9kdWxlIEZyYW1lUmF0ZUxvZ2dlclxuICogQGZsb3dcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBOYXRpdmVNb2R1bGVzID0gcmVxdWlyZSgnTmF0aXZlTW9kdWxlcycpO1xuXG5jb25zdCBpbnZhcmlhbnQgPSByZXF1aXJlKCdmYmpzL2xpYi9pbnZhcmlhbnQnKTtcblxuLyoqXG4gKiBGbG93IEFQSSBmb3IgbmF0aXZlIEZyYW1lUmF0ZUxvZ2dlciBtb2R1bGUuIElmIHRoZSBuYXRpdmUgbW9kdWxlIGlzIG5vdCBpbnN0YWxsZWQsIGZ1bmN0aW9uIGNhbGxzXG4gKiBhcmUganVzdCBuby1vcHMuXG4gKlxuICogVHlwaWNhbCBiZWhhdmlvciBpcyB0aGF0IGBzZXRDb250ZXh0YCBpcyBjYWxsZWQgd2hlbiBhIG5ldyBzY3JlZW4gaXMgbG9hZGVkIChlLmcuIHZpYSBhXG4gKiBuYXZpZ2F0aW9uIGludGVncmF0aW9uKSwgYW5kIHRoZW4gYGJlZ2luU2Nyb2xsYCBpcyBjYWxsZWQgYnkgYFNjcm9sbFJlc3BvbmRlcmAgYXQgd2hpY2ggcG9pbnQgdGhlXG4gKiBuYXRpdmUgbW9kdWxlIHRoZW4gYmVnaW5zIHRyYWNraW5nIGZyYW1lIGRyb3BzLiBXaGVuIGBTY3JvbGxSZXNwb25kZXJgIGNhbGxzIGBlbmRTY3JvbGxgLCB0aGVcbiAqIG5hdGl2ZSBtb2R1bGUgZ2F0aGVycyB1cCBhbGwgaXQncyBmcmFtZSBkcm9wIGRhdGEgYW5kIHJlcG9ydHMgaXQgdmlhIGFuIGFuYWx5dGljcyBwaXBlbGluZSBmb3JcbiAqIGFuYWx5c2lzLlxuICpcbiAqIE5vdGUgdGhhdCBgYmVnaW5TY3JvbGxgIG1heSBiZSBjYWxsZWQgbXVsdGlwbGUgdGltZXMgYnkgYFNjcm9sbFJlc3BvbmRlcmAgLSB1bmNsZWFyIGlmIHRoYXQncyBhXG4gKiBidWcsIGJ1dCB0aGUgbmF0aXZlIG1vZHVsZSBzaG91bGQgYmUgcm9idXN0IHRvIHRoYXQuXG4gKlxuICogSW4gdGhlIGZ1dHVyZSB3ZSBtYXkgYWRkIHN1cHBvcnQgZm9yIHRyYWNraW5nIGZyYW1lIGRyb3BzIGluIG90aGVyIHR5cGVzIG9mIGludGVyYWN0aW9ucyBiZXlvbmRcbiAqIHNjcm9sbGluZy5cbiAqL1xuY29uc3QgRnJhbWVSYXRlTG9nZ2VyID0ge1xuICAvKipcbiAgICogRW5hYmxlIGBkZWJ1Z2AgdG8gc2VlIGxvY2FsIGxvZ3Mgb2Ygd2hhdCdzIGdvaW5nIG9uLiBgcmVwb3J0U3RhY2tUcmFjZXNgIHdpbGwgZ3JhYiBzdGFjayB0cmFjZXNcbiAgICogZHVyaW5nIFVJIHRocmVhZCBzdGFsbHMgYW5kIHVwbG9hZCB0aGVtIGlmIHRoZSBuYXRpdmUgbW9kdWxlIHN1cHBvcnRzIGl0LlxuICAgKi9cbiAgc2V0R2xvYmFsT3B0aW9uczogZnVuY3Rpb24ob3B0aW9uczoge2RlYnVnPzogYm9vbGVhbiwgcmVwb3J0U3RhY2tUcmFjZXM/OiBib29sZWFufSkge1xuICAgIGlmIChvcHRpb25zLmRlYnVnICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGludmFyaWFudChcbiAgICAgICAgTmF0aXZlTW9kdWxlcy5GcmFtZVJhdGVMb2dnZXIsXG4gICAgICAgICdUcnlpbmcgdG8gZGVidWcgRnJhbWVSYXRlTG9nZ2VyIHdpdGhvdXQgdGhlIG5hdGl2ZSBtb2R1bGUhJyxcbiAgICAgICk7XG4gICAgfVxuICAgIE5hdGl2ZU1vZHVsZXMuRnJhbWVSYXRlTG9nZ2VyICYmIE5hdGl2ZU1vZHVsZXMuRnJhbWVSYXRlTG9nZ2VyLnNldEdsb2JhbE9wdGlvbnMob3B0aW9ucyk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIE11c3QgY2FsbCBgc2V0Q29udGV4dGAgYmVmb3JlIGFueSBldmVudHMgY2FuIGJlIHByb3Blcmx5IHRyYWNrZWQsIHdoaWNoIGlzIGRvbmUgYXV0b21hdGljYWxseVxuICAgKiBpbiBgQXBwUmVnaXN0cnlgLCBidXQgbmF2aWdhdGlvbiBpcyBhbHNvIGEgY29tbW9uIHBsYWNlIHRvIGhvb2sgaW4uXG4gICAqL1xuICBzZXRDb250ZXh0OiBmdW5jdGlvbihjb250ZXh0OiBzdHJpbmcpIHtcbiAgICBOYXRpdmVNb2R1bGVzLkZyYW1lUmF0ZUxvZ2dlciAmJiBOYXRpdmVNb2R1bGVzLkZyYW1lUmF0ZUxvZ2dlci5zZXRDb250ZXh0KGNvbnRleHQpO1xuICB9LFxuXG4gIC8qKlxuICAgKiBDYWxsZWQgaW4gYFNjcm9sbFJlc3BvbmRlcmAgc28gYW55IGNvbXBvbmVudCB0aGF0IHVzZXMgdGhhdCBtb2R1bGUgd2lsbCBoYW5kbGUgdGhpc1xuICAgKiBhdXRvbWF0aWNhbGx5LlxuICAgKi9cbiAgYmVnaW5TY3JvbGwoKSB7XG4gICAgTmF0aXZlTW9kdWxlcy5GcmFtZVJhdGVMb2dnZXIgJiYgTmF0aXZlTW9kdWxlcy5GcmFtZVJhdGVMb2dnZXIuYmVnaW5TY3JvbGwoKTtcbiAgfSxcblxuICAvKipcbiAgICogQ2FsbGVkIGluIGBTY3JvbGxSZXNwb25kZXJgIHNvIGFueSBjb21wb25lbnQgdGhhdCB1c2VzIHRoYXQgbW9kdWxlIHdpbGwgaGFuZGxlIHRoaXNcbiAgICogYXV0b21hdGljYWxseS5cbiAgICovXG4gIGVuZFNjcm9sbCgpIHtcbiAgICBOYXRpdmVNb2R1bGVzLkZyYW1lUmF0ZUxvZ2dlciAmJiBOYXRpdmVNb2R1bGVzLkZyYW1lUmF0ZUxvZ2dlci5lbmRTY3JvbGwoKTtcbiAgfSxcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRnJhbWVSYXRlTG9nZ2VyO1xuIl19