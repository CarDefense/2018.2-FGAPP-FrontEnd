{"version":3,"sources":["AnimatedWithChildren.js"],"names":["AnimatedNode","require","NativeAnimatedHelper","AnimatedWithChildren","_children","__isNative","child","__makeNative","API","connectAnimatedNodes","__getNativeTag","length","__attach","push","index","indexOf","console","warn","disconnectAnimatedNodes","splice","__detach","module","exports"],"mappings":"AAUA,a,4yCAEA,GAAMA,cAAeC,QAAQ,gBAAR,CAArB,CACA,GAAMC,sBAAuBD,QAAQ,yBAAR,CAA7B,C,GAEME,qB,uEAGJ,+BAAc,gLAEZ,MAAKC,SAAL,CAAiB,EAAjB,CAFY,aAGb,C,oFAEc,CACb,GAAI,CAAC,KAAKC,UAAV,CAAsB,CACpB,KAAKA,UAAL,CAAkB,IAAlB,CACA,kBAAoB,KAAKD,SAAzB,4IAAoC,uIAAzBE,MAAyB,MAClCA,MAAMC,YAAN,GACAL,qBAAqBM,GAArB,CAAyBC,oBAAzB,CACE,KAAKC,cAAL,EADF,CAEEJ,MAAMI,cAAN,EAFF,EAID,CACF,CACF,C,8CAEUJ,K,CAA2B,CACpC,GAAI,KAAKF,SAAL,CAAeO,MAAf,GAA0B,CAA9B,CAAiC,CAC/B,KAAKC,QAAL,GACD,CACD,KAAKR,SAAL,CAAeS,IAAf,CAAoBP,KAApB,EACA,GAAI,KAAKD,UAAT,CAAqB,CAEnBC,MAAMC,YAAN,GACAL,qBAAqBM,GAArB,CAAyBC,oBAAzB,CACE,KAAKC,cAAL,EADF,CAEEJ,MAAMI,cAAN,EAFF,EAID,CACF,C,oDAEaJ,K,CAA2B,CACvC,GAAMQ,OAAQ,KAAKV,SAAL,CAAeW,OAAf,CAAuBT,KAAvB,CAAd,CACA,GAAIQ,QAAU,CAAC,CAAf,CAAkB,CAChBE,QAAQC,IAAR,CAAa,6CAAb,EACA,OACD,CACD,GAAI,KAAKZ,UAAL,EAAmBC,MAAMD,UAA7B,CAAyC,CACvCH,qBAAqBM,GAArB,CAAyBU,uBAAzB,CACE,KAAKR,cAAL,EADF,CAEEJ,MAAMI,cAAN,EAFF,EAID,CACD,KAAKN,SAAL,CAAee,MAAf,CAAsBL,KAAtB,CAA6B,CAA7B,EACA,GAAI,KAAKV,SAAL,CAAeO,MAAf,GAA0B,CAA9B,CAAiC,CAC/B,KAAKS,QAAL,GACD,CACF,C,qDAEoC,CACnC,MAAO,MAAKhB,SAAZ,CACD,C,kCAxDgCJ,Y,EA2DnCqB,OAAOC,OAAP,CAAiBnB,oBAAjB","file":"AnimatedWithChildren.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule AnimatedWithChildren\n * @flow\n * @format\n */\n'use strict';\n\nconst AnimatedNode = require('./AnimatedNode');\nconst NativeAnimatedHelper = require('../NativeAnimatedHelper');\n\nclass AnimatedWithChildren extends AnimatedNode {\n  _children: Array<AnimatedNode>;\n\n  constructor() {\n    super();\n    this._children = [];\n  }\n\n  __makeNative() {\n    if (!this.__isNative) {\n      this.__isNative = true;\n      for (const child of this._children) {\n        child.__makeNative();\n        NativeAnimatedHelper.API.connectAnimatedNodes(\n          this.__getNativeTag(),\n          child.__getNativeTag(),\n        );\n      }\n    }\n  }\n\n  __addChild(child: AnimatedNode): void {\n    if (this._children.length === 0) {\n      this.__attach();\n    }\n    this._children.push(child);\n    if (this.__isNative) {\n      // Only accept \"native\" animated nodes as children\n      child.__makeNative();\n      NativeAnimatedHelper.API.connectAnimatedNodes(\n        this.__getNativeTag(),\n        child.__getNativeTag(),\n      );\n    }\n  }\n\n  __removeChild(child: AnimatedNode): void {\n    const index = this._children.indexOf(child);\n    if (index === -1) {\n      console.warn(\"Trying to remove a child that doesn't exist\");\n      return;\n    }\n    if (this.__isNative && child.__isNative) {\n      NativeAnimatedHelper.API.disconnectAnimatedNodes(\n        this.__getNativeTag(),\n        child.__getNativeTag(),\n      );\n    }\n    this._children.splice(index, 1);\n    if (this._children.length === 0) {\n      this.__detach();\n    }\n  }\n\n  __getChildren(): Array<AnimatedNode> {\n    return this._children;\n  }\n}\n\nmodule.exports = AnimatedWithChildren;\n"]}