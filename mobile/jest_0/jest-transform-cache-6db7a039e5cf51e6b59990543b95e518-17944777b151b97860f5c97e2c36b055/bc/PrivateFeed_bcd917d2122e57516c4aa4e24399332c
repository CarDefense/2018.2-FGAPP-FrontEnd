e6edb090fd3696fd902dcc1da7f4984b
Object.defineProperty(exports,"__esModule",{value:true});exports.default=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactNative=require('react-native');var _Const=require('../const/Const');var _expo=require('expo');var _expo2=_interopRequireDefault(_expo);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function registerForPushNotificationsAsync(){var _ref,existingStatus,finalStatus,_ref2,status,token,tk;return regeneratorRuntime.async(function registerForPushNotificationsAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return regeneratorRuntime.awrap(_expo2.default.Permissions.getAsync(_expo2.default.Permissions.NOTIFICATIONS));case 2:_ref=_context.sent;existingStatus=_ref.status;finalStatus=existingStatus;if(!(existingStatus!=='granted')){_context.next=11;break;}_context.next=8;return regeneratorRuntime.awrap(_expo2.default.Permissions.askAsync(_expo2.default.Permissions.NOTIFICATIONS));case 8:_ref2=_context.sent;status=_ref2.status;finalStatus=status;case 11:if(!(finalStatus!=='granted')){_context.next=13;break;}return _context.abrupt('return');case 13:_context.t0=regeneratorRuntime;_context.t1=Promise;_context.next=17;return regeneratorRuntime.awrap(_expo2.default.Notifications.getExpoPushTokenAsync());case 17:_context.t2=token=_context.sent;_context.t3=function(x){return token;};_context.t4=_context.t1.resolve.call(_context.t1,_context.t2).then(_context.t3);_context.next=22;return _context.t0.awrap.call(_context.t0,_context.t4);case 22:tk=_context.sent;return _context.abrupt('return',tk);case 24:case'end':return _context.stop();}}},null,this);}var Feed=function(_React$Component){_inherits(Feed,_React$Component);_createClass(Feed,[{key:'componentWillMount',value:function componentWillMount(){this.listener=_expo2.default.Notifications.addListener(this.listen);}},{key:'componentWillUnmount',value:function componentWillUnmount(){this.listener&&_expo2.default.Notifications.addListener(this.listen);}}]);function Feed(props){_classCallCheck(this,Feed);var _this=_possibleConstructorReturn(this,(Feed.__proto__||Object.getPrototypeOf(Feed)).call(this,props));_this.listen=function(_ref3){var origin=_ref3.origin,data=_ref3.data;console.log('cool data',origin,data);};_this.getPrivateFeedInfo=function(){var url=_Const.NOTIFICATIONS_API+'/notifications';return fetch(url).then(function(response){return response.json();}).then(function(responseJson){_this.setState({isLoading:false,dataSource:responseJson},function(){});}).catch(function(error){console.error(error);});};_this._onRefresh=function(){_this.setState({refreshing:true});_this.componentDidMount().then(function(){_this.setState({refreshing:false});});};_this.state={refreshing:false};return _this;}_createClass(Feed,[{key:'componentDidMount',value:function componentDidMount(){return regeneratorRuntime.async(function componentDidMount$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:this.getPrivateFeedInfo();case 1:case'end':return _context2.stop();}}},null,this);}},{key:'render',value:function render(){return _react2.default.createElement(_reactNative.ScrollView,{style:styles.item,refreshControl:_react2.default.createElement(_reactNative.RefreshControl,{refreshing:this.state.refreshing,onRefresh:this._onRefresh})},_react2.default.createElement(_reactNative.FlatList,{data:this.state.dataSource,renderItem:function renderItem(_ref4){var item=_ref4.item;return _react2.default.createElement(_reactNative.View,{style:styles.item2},_react2.default.createElement(_reactNative.Text,{style:styles.text1},item.title),_react2.default.createElement(_reactNative.Image,{source:{uri:item.image},style:{width:400,height:200}}),_react2.default.createElement(_reactNative.Text,{style:styles.text},item.message));},keyExtractor:function keyExtractor(_ref5,index){var id=_ref5.id;return id.toString();}}));}}]);return Feed;}(_react2.default.Component);exports.default=Feed;var styles=_reactNative.StyleSheet.create({item:{backgroundColor:"#ffffff",margin:4,shadowColor:"#000000",shadowOpacity:0.8,shadowRadius:2,shadowOffset:{height:1,width:1},elevation:4},item2:{alignItems:"center",justifyContent:'center',backgroundColor:"#ffffff",flexGrow:1,margin:4,padding:20,borderRadius:10,shadowColor:"#000000",shadowOpacity:0.8,shadowRadius:2,shadowOffset:{height:1,width:1},elevation:4},text:{color:"#540b71",fontWeight:'100'},text1:{color:"#540b71",fontWeight:'bold'}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,