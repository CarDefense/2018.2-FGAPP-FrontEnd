{"version":3,"sources":["SpringConfig.js"],"names":["stiffnessFromOrigamiValue","oValue","dampingFromOrigamiValue","fromOrigamiTensionAndFriction","tension","friction","stiffness","damping","fromBouncinessAndSpeed","bounciness","speed","normalize","value","startValue","endValue","projectNormal","n","start","end","linearInterpolation","t","quadraticOutInterpolation","b3Friction1","x","Math","pow","b3Friction2","b3Friction3","b3Nobounce","b","s","bouncyTension","bouncyFriction","module","exports"],"mappings":"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","file":"SpringConfig.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule SpringConfig\n * @flow\n */\n\n'use strict';\n\ntype SpringConfigType = {\n  stiffness: number,\n  damping: number,\n};\n\nfunction stiffnessFromOrigamiValue(oValue) {\n  return (oValue - 30) * 3.62 + 194;\n}\n\nfunction dampingFromOrigamiValue(oValue) {\n  return (oValue - 8) * 3 + 25;\n}\n\nfunction fromOrigamiTensionAndFriction(\n  tension: number,\n  friction: number,\n): SpringConfigType {\n  return {\n    stiffness: stiffnessFromOrigamiValue(tension),\n    damping: dampingFromOrigamiValue(friction),\n  };\n}\n\nfunction fromBouncinessAndSpeed(\n  bounciness: number,\n  speed: number,\n): SpringConfigType {\n  function normalize(value, startValue, endValue) {\n    return (value - startValue) / (endValue - startValue);\n  }\n\n  function projectNormal(n, start, end) {\n    return start + (n * (end - start));\n  }\n\n  function linearInterpolation(t, start, end) {\n    return t * end + (1 - t) * start;\n  }\n\n  function quadraticOutInterpolation(t, start, end) {\n    return linearInterpolation(2 * t - t * t, start, end);\n  }\n\n  function b3Friction1(x) {\n    return (0.0007 * Math.pow(x, 3)) -\n      (0.031 * Math.pow(x, 2)) + 0.64 * x + 1.28;\n  }\n\n  function b3Friction2(x) {\n    return (0.000044 * Math.pow(x, 3)) -\n      (0.006 * Math.pow(x, 2)) + 0.36 * x + 2;\n  }\n\n  function b3Friction3(x) {\n    return (0.00000045 * Math.pow(x, 3)) -\n      (0.000332 * Math.pow(x, 2)) + 0.1078 * x + 5.84;\n  }\n\n  function b3Nobounce(tension) {\n    if (tension <= 18) {\n      return b3Friction1(tension);\n    } else if (tension > 18 && tension <= 44) {\n      return b3Friction2(tension);\n    } else {\n      return b3Friction3(tension);\n    }\n  }\n\n  var b = normalize(bounciness / 1.7, 0, 20);\n  b = projectNormal(b, 0, 0.8);\n  var s = normalize(speed / 1.7, 0, 20);\n  var bouncyTension = projectNormal(s, 0.5, 200);\n  var bouncyFriction = quadraticOutInterpolation(\n    b,\n    b3Nobounce(bouncyTension),\n    0.01\n  );\n\n  return {\n    stiffness: stiffnessFromOrigamiValue(bouncyTension),\n    damping: dampingFromOrigamiValue(bouncyFriction),\n  };\n}\n\nmodule.exports = {\n  fromOrigamiTensionAndFriction,\n  fromBouncinessAndSpeed,\n};\n"]}