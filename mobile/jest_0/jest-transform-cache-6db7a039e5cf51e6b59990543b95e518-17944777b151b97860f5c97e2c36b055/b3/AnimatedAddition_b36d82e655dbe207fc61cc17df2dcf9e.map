{"version":3,"sources":["AnimatedAddition.js"],"names":["AnimatedInterpolation","require","AnimatedNode","AnimatedValue","AnimatedWithChildren","AnimatedAddition","a","b","_a","_b","__makeNative","__getValue","config","__addChild","__removeChild","type","input","__getNativeTag","module","exports"],"mappings":"AAUA,a,4tDAEA,GAAMA,uBAAwBC,QAAQ,yBAAR,CAA9B,CACA,GAAMC,cAAeD,QAAQ,gBAAR,CAArB,CACA,GAAME,eAAgBF,QAAQ,iBAAR,CAAtB,CACA,GAAMG,sBAAuBH,QAAQ,wBAAR,CAA7B,C,GAIMI,iB,mFAIJ,0BAAYC,CAAZ,CAAsCC,CAAtC,CAAgE,oKAE9D,MAAKC,EAAL,CAAU,MAAOF,EAAP,GAAa,QAAb,CAAwB,GAAIH,cAAJ,CAAkBG,CAAlB,CAAxB,CAA+CA,CAAzD,CACA,MAAKG,EAAL,CAAU,MAAOF,EAAP,GAAa,QAAb,CAAwB,GAAIJ,cAAJ,CAAkBI,CAAlB,CAAxB,CAA+CA,CAAzD,CAH8D,aAI/D,C,gFAEc,CACb,KAAKC,EAAL,CAAQE,YAAR,GACA,KAAKD,EAAL,CAAQC,YAAR,GACA,6HACD,C,+CAEoB,CACnB,MAAO,MAAKF,EAAL,CAAQG,UAAR,GAAuB,KAAKF,EAAL,CAAQE,UAAR,EAA9B,CACD,C,gDAEWC,M,CAAwD,CAClE,MAAO,IAAIZ,sBAAJ,CAA0B,IAA1B,CAAgCY,MAAhC,CAAP,CACD,C,2CAEgB,CACf,KAAKJ,EAAL,CAAQK,UAAR,CAAmB,IAAnB,EACA,KAAKJ,EAAL,CAAQI,UAAR,CAAmB,IAAnB,EACD,C,2CAEgB,CACf,KAAKL,EAAL,CAAQM,aAAR,CAAsB,IAAtB,EACA,KAAKL,EAAL,CAAQK,aAAR,CAAsB,IAAtB,EACA,yHACD,C,6DAEwB,CACvB,MAAO,CACLC,KAAM,UADD,CAELC,MAAO,CAAC,KAAKR,EAAL,CAAQS,cAAR,EAAD,CAA2B,KAAKR,EAAL,CAAQQ,cAAR,EAA3B,CAFF,CAAP,CAID,C,8BAxC4Bb,oB,EA2C/Bc,OAAOC,OAAP,CAAiBd,gBAAjB","file":"AnimatedAddition.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule AnimatedAddition\n * @flow\n * @format\n */\n'use strict';\n\nconst AnimatedInterpolation = require('./AnimatedInterpolation');\nconst AnimatedNode = require('./AnimatedNode');\nconst AnimatedValue = require('./AnimatedValue');\nconst AnimatedWithChildren = require('./AnimatedWithChildren');\n\nimport type {InterpolationConfigType} from './AnimatedInterpolation';\n\nclass AnimatedAddition extends AnimatedWithChildren {\n  _a: AnimatedNode;\n  _b: AnimatedNode;\n\n  constructor(a: AnimatedNode | number, b: AnimatedNode | number) {\n    super();\n    this._a = typeof a === 'number' ? new AnimatedValue(a) : a;\n    this._b = typeof b === 'number' ? new AnimatedValue(b) : b;\n  }\n\n  __makeNative() {\n    this._a.__makeNative();\n    this._b.__makeNative();\n    super.__makeNative();\n  }\n\n  __getValue(): number {\n    return this._a.__getValue() + this._b.__getValue();\n  }\n\n  interpolate(config: InterpolationConfigType): AnimatedInterpolation {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  __attach(): void {\n    this._a.__addChild(this);\n    this._b.__addChild(this);\n  }\n\n  __detach(): void {\n    this._a.__removeChild(this);\n    this._b.__removeChild(this);\n    super.__detach();\n  }\n\n  __getNativeConfig(): any {\n    return {\n      type: 'addition',\n      input: [this._a.__getNativeTag(), this._b.__getNativeTag()],\n    };\n  }\n}\n\nmodule.exports = AnimatedAddition;\n"]}