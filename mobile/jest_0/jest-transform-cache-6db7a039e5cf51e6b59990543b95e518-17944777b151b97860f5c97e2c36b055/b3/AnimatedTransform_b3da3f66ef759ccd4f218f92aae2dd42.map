{"version":3,"sources":["AnimatedTransform.js"],"names":["AnimatedNode","require","AnimatedWithChildren","NativeAnimatedHelper","AnimatedTransform","transforms","_transforms","forEach","key","transform","value","__makeNative","map","result","__getValue","__getAnimatedValue","__addChild","__removeChild","transConfigs","push","type","property","nodeTag","__getNativeTag","validateTransform","module","exports"],"mappings":"AAUA,a,4tDAEA,GAAMA,cAAeC,QAAQ,gBAAR,CAArB,CACA,GAAMC,sBAAuBD,QAAQ,wBAAR,CAA7B,CACA,GAAME,sBAAuBF,QAAQ,yBAAR,CAA7B,C,GAEMG,kB,oFAGJ,2BAAYC,UAAZ,CAAgD,uKAE9C,MAAKC,WAAL,CAAmBD,UAAnB,CAF8C,aAG/C,C,iFAEc,CACb,+HACA,KAAKC,WAAL,CAAiBC,OAAjB,CAAyB,mBAAa,CACpC,IAAK,GAAMC,IAAX,GAAkBC,UAAlB,CAA6B,CAC3B,GAAMC,OAAQD,UAAUD,GAAV,CAAd,CACA,GAAIE,gBAAiBV,aAArB,CAAmC,CACjCU,MAAMC,YAAN,GACD,CACF,CACF,CAPD,EAQD,C,+CAEoC,CACnC,MAAO,MAAKL,WAAL,CAAiBM,GAAjB,CAAqB,mBAAa,CACvC,GAAMC,QAAS,EAAf,CACA,IAAK,GAAML,IAAX,GAAkBC,UAAlB,CAA6B,CAC3B,GAAMC,OAAQD,UAAUD,GAAV,CAAd,CACA,GAAIE,gBAAiBV,aAArB,CAAmC,CACjCa,OAAOL,GAAP,EAAcE,MAAMI,UAAN,EAAd,CACD,CAFD,IAEO,CACLD,OAAOL,GAAP,EAAcE,KAAd,CACD,CACF,CACD,MAAOG,OAAP,CACD,CAXM,CAAP,CAYD,C,+DAE4C,CAC3C,MAAO,MAAKP,WAAL,CAAiBM,GAAjB,CAAqB,mBAAa,CACvC,GAAMC,QAAS,EAAf,CACA,IAAK,GAAML,IAAX,GAAkBC,UAAlB,CAA6B,CAC3B,GAAMC,OAAQD,UAAUD,GAAV,CAAd,CACA,GAAIE,gBAAiBV,aAArB,CAAmC,CACjCa,OAAOL,GAAP,EAAcE,MAAMK,kBAAN,EAAd,CACD,CAFD,IAEO,CAELF,OAAOL,GAAP,EAAcE,KAAd,CACD,CACF,CACD,MAAOG,OAAP,CACD,CAZM,CAAP,CAaD,C,2CAEgB,iBACf,KAAKP,WAAL,CAAiBC,OAAjB,CAAyB,mBAAa,CACpC,IAAK,GAAMC,IAAX,GAAkBC,UAAlB,CAA6B,CAC3B,GAAMC,OAAQD,UAAUD,GAAV,CAAd,CACA,GAAIE,gBAAiBV,aAArB,CAAmC,CACjCU,MAAMM,UAAN,CAAiB,MAAjB,EACD,CACF,CACF,CAPD,EAQD,C,2CAEgB,iBACf,KAAKV,WAAL,CAAiBC,OAAjB,CAAyB,mBAAa,CACpC,IAAK,GAAMC,IAAX,GAAkBC,UAAlB,CAA6B,CAC3B,GAAMC,OAAQD,UAAUD,GAAV,CAAd,CACA,GAAIE,gBAAiBV,aAArB,CAAmC,CACjCU,MAAMO,aAAN,CAAoB,MAApB,EACD,CACF,CACF,CAPD,EAQA,2HACD,C,6DAEwB,CACvB,GAAMC,cAAe,EAArB,CAEA,KAAKZ,WAAL,CAAiBC,OAAjB,CAAyB,mBAAa,CACpC,IAAK,GAAMC,IAAX,GAAkBC,UAAlB,CAA6B,CAC3B,GAAMC,OAAQD,UAAUD,GAAV,CAAd,CACA,GAAIE,gBAAiBV,aAArB,CAAmC,CACjCkB,aAAaC,IAAb,CAAkB,CAChBC,KAAM,UADU,CAEhBC,SAAUb,GAFM,CAGhBc,QAASZ,MAAMa,cAAN,EAHO,CAAlB,EAKD,CAND,IAMO,CACLL,aAAaC,IAAb,CAAkB,CAChBC,KAAM,QADU,CAEhBC,SAAUb,GAFM,CAGhBE,WAHgB,CAAlB,EAKD,CACF,CACF,CAjBD,EAmBAP,qBAAqBqB,iBAArB,CAAuCN,YAAvC,EACA,MAAO,CACLE,KAAM,WADD,CAELf,WAAYa,YAFP,CAAP,CAID,C,+BArG6BhB,oB,EAwGhCuB,OAAOC,OAAP,CAAiBtB,iBAAjB","file":"AnimatedTransform.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule AnimatedTransform\n * @flow\n * @format\n */\n'use strict';\n\nconst AnimatedNode = require('./AnimatedNode');\nconst AnimatedWithChildren = require('./AnimatedWithChildren');\nconst NativeAnimatedHelper = require('../NativeAnimatedHelper');\n\nclass AnimatedTransform extends AnimatedWithChildren {\n  _transforms: $ReadOnlyArray<Object>;\n\n  constructor(transforms: $ReadOnlyArray<Object>) {\n    super();\n    this._transforms = transforms;\n  }\n\n  __makeNative() {\n    super.__makeNative();\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__makeNative();\n        }\n      }\n    });\n  }\n\n  __getValue(): $ReadOnlyArray<Object> {\n    return this._transforms.map(transform => {\n      const result = {};\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getValue();\n        } else {\n          result[key] = value;\n        }\n      }\n      return result;\n    });\n  }\n\n  __getAnimatedValue(): $ReadOnlyArray<Object> {\n    return this._transforms.map(transform => {\n      const result = {};\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getAnimatedValue();\n        } else {\n          // All transform components needed to recompose matrix\n          result[key] = value;\n        }\n      }\n      return result;\n    });\n  }\n\n  __attach(): void {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__addChild(this);\n        }\n      }\n    });\n  }\n\n  __detach(): void {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__removeChild(this);\n        }\n      }\n    });\n    super.__detach();\n  }\n\n  __getNativeConfig(): any {\n    const transConfigs = [];\n\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          transConfigs.push({\n            type: 'animated',\n            property: key,\n            nodeTag: value.__getNativeTag(),\n          });\n        } else {\n          transConfigs.push({\n            type: 'static',\n            property: key,\n            value,\n          });\n        }\n      }\n    });\n\n    NativeAnimatedHelper.validateTransform(transConfigs);\n    return {\n      type: 'transform',\n      transforms: transConfigs,\n    };\n  }\n}\n\nmodule.exports = AnimatedTransform;\n"]}