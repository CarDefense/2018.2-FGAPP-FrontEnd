{"version":3,"sources":["AnimatedDiffClamp.js"],"names":["AnimatedInterpolation","require","AnimatedNode","AnimatedWithChildren","AnimatedDiffClamp","a","min","max","_a","_min","_max","_value","_lastValue","__getValue","__makeNative","config","value","diff","Math","__addChild","__removeChild","type","input","__getNativeTag","module","exports"],"mappings":"AAUA,a,4tDAEA,GAAMA,uBAAwBC,QAAQ,yBAAR,CAA9B,CACA,GAAMC,cAAeD,QAAQ,gBAAR,CAArB,CACA,GAAME,sBAAuBF,QAAQ,wBAAR,CAA7B,C,GAIMG,kB,oFAOJ,2BAAYC,CAAZ,CAA6BC,GAA7B,CAA0CC,GAA1C,CAAuD,uKAGrD,MAAKC,EAAL,CAAUH,CAAV,CACA,MAAKI,IAAL,CAAYH,GAAZ,CACA,MAAKI,IAAL,CAAYH,GAAZ,CACA,MAAKI,MAAL,CAAc,MAAKC,UAAL,CAAkB,MAAKJ,EAAL,CAAQK,UAAR,EAAhC,CANqD,aAOtD,C,iFAEc,CACb,KAAKL,EAAL,CAAQM,YAAR,GACA,+HACD,C,gDAEWC,M,CAAwD,CAClE,MAAO,IAAIf,sBAAJ,CAA0B,IAA1B,CAAgCe,MAAhC,CAAP,CACD,C,+CAEoB,CACnB,GAAMC,OAAQ,KAAKR,EAAL,CAAQK,UAAR,EAAd,CACA,GAAMI,MAAOD,MAAQ,KAAKJ,UAA1B,CACA,KAAKA,UAAL,CAAkBI,KAAlB,CACA,KAAKL,MAAL,CAAcO,KAAKZ,GAAL,CAASY,KAAKX,GAAL,CAAS,KAAKI,MAAL,CAAcM,IAAvB,CAA6B,KAAKR,IAAlC,CAAT,CAAkD,KAAKC,IAAvD,CAAd,CACA,MAAO,MAAKC,MAAZ,CACD,C,2CAEgB,CACf,KAAKH,EAAL,CAAQW,UAAR,CAAmB,IAAnB,EACD,C,2CAEgB,CACf,KAAKX,EAAL,CAAQY,aAAR,CAAsB,IAAtB,EACA,2HACD,C,6DAEwB,CACvB,MAAO,CACLC,KAAM,WADD,CAELC,MAAO,KAAKd,EAAL,CAAQe,cAAR,EAFF,CAGLjB,IAAK,KAAKG,IAHL,CAILF,IAAK,KAAKG,IAJL,CAAP,CAMD,C,+BAjD6BP,oB,EAoDhCqB,OAAOC,OAAP,CAAiBrB,iBAAjB","file":"AnimatedDiffClamp.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule AnimatedDiffClamp\n * @flow\n * @format\n */\n'use strict';\n\nconst AnimatedInterpolation = require('./AnimatedInterpolation');\nconst AnimatedNode = require('./AnimatedNode');\nconst AnimatedWithChildren = require('./AnimatedWithChildren');\n\nimport type {InterpolationConfigType} from './AnimatedInterpolation';\n\nclass AnimatedDiffClamp extends AnimatedWithChildren {\n  _a: AnimatedNode;\n  _min: number;\n  _max: number;\n  _value: number;\n  _lastValue: number;\n\n  constructor(a: AnimatedNode, min: number, max: number) {\n    super();\n\n    this._a = a;\n    this._min = min;\n    this._max = max;\n    this._value = this._lastValue = this._a.__getValue();\n  }\n\n  __makeNative() {\n    this._a.__makeNative();\n    super.__makeNative();\n  }\n\n  interpolate(config: InterpolationConfigType): AnimatedInterpolation {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  __getValue(): number {\n    const value = this._a.__getValue();\n    const diff = value - this._lastValue;\n    this._lastValue = value;\n    this._value = Math.min(Math.max(this._value + diff, this._min), this._max);\n    return this._value;\n  }\n\n  __attach(): void {\n    this._a.__addChild(this);\n  }\n\n  __detach(): void {\n    this._a.__removeChild(this);\n    super.__detach();\n  }\n\n  __getNativeConfig(): any {\n    return {\n      type: 'diffclamp',\n      input: this._a.__getNativeTag(),\n      min: this._min,\n      max: this._max,\n    };\n  }\n}\n\nmodule.exports = AnimatedDiffClamp;\n"]}