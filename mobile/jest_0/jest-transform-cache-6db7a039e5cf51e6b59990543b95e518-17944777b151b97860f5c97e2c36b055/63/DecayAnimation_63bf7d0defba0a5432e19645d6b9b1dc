ed8b6eefe6569e3af7c1ff42c094cba9
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Animation=require('./Animation');var _require=require('../NativeAnimatedHelper'),shouldUseNativeDriver=_require.shouldUseNativeDriver;var DecayAnimation=function(_Animation){_inherits(DecayAnimation,_Animation);function DecayAnimation(config){_classCallCheck(this,DecayAnimation);var _this=_possibleConstructorReturn(this,(DecayAnimation.__proto__||Object.getPrototypeOf(DecayAnimation)).call(this));_this._deceleration=config.deceleration!==undefined?config.deceleration:0.998;_this._velocity=config.velocity;_this._useNativeDriver=shouldUseNativeDriver(config);_this.__isInteraction=config.isInteraction!==undefined?config.isInteraction:true;_this.__iterations=config.iterations!==undefined?config.iterations:1;return _this;}_createClass(DecayAnimation,[{key:'__getNativeAnimationConfig',value:function __getNativeAnimationConfig(){return{type:'decay',deceleration:this._deceleration,velocity:this._velocity,iterations:this.__iterations};}},{key:'start',value:function start(fromValue,onUpdate,onEnd,previousAnimation,animatedValue){this.__active=true;this._lastValue=fromValue;this._fromValue=fromValue;this._onUpdate=onUpdate;this.__onEnd=onEnd;this._startTime=Date.now();if(this._useNativeDriver){this.__startNativeAnimation(animatedValue);}else{this._animationFrame=requestAnimationFrame(this.onUpdate.bind(this));}}},{key:'onUpdate',value:function onUpdate(){var now=Date.now();var value=this._fromValue+this._velocity/(1-this._deceleration)*(1-Math.exp(-(1-this._deceleration)*(now-this._startTime)));this._onUpdate(value);if(Math.abs(this._lastValue-value)<0.1){this.__debouncedOnEnd({finished:true});return;}this._lastValue=value;if(this.__active){this._animationFrame=requestAnimationFrame(this.onUpdate.bind(this));}}},{key:'stop',value:function stop(){_get(DecayAnimation.prototype.__proto__||Object.getPrototypeOf(DecayAnimation.prototype),'stop',this).call(this);this.__active=false;global.cancelAnimationFrame(this._animationFrame);this.__debouncedOnEnd({finished:false});}}]);return DecayAnimation;}(Animation);module.exports=DecayAnimation;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRlY2F5QW5pbWF0aW9uLmpzIl0sIm5hbWVzIjpbIkFuaW1hdGlvbiIsInJlcXVpcmUiLCJzaG91bGRVc2VOYXRpdmVEcml2ZXIiLCJEZWNheUFuaW1hdGlvbiIsImNvbmZpZyIsIl9kZWNlbGVyYXRpb24iLCJkZWNlbGVyYXRpb24iLCJ1bmRlZmluZWQiLCJfdmVsb2NpdHkiLCJ2ZWxvY2l0eSIsIl91c2VOYXRpdmVEcml2ZXIiLCJfX2lzSW50ZXJhY3Rpb24iLCJpc0ludGVyYWN0aW9uIiwiX19pdGVyYXRpb25zIiwiaXRlcmF0aW9ucyIsInR5cGUiLCJmcm9tVmFsdWUiLCJvblVwZGF0ZSIsIm9uRW5kIiwicHJldmlvdXNBbmltYXRpb24iLCJhbmltYXRlZFZhbHVlIiwiX19hY3RpdmUiLCJfbGFzdFZhbHVlIiwiX2Zyb21WYWx1ZSIsIl9vblVwZGF0ZSIsIl9fb25FbmQiLCJfc3RhcnRUaW1lIiwiRGF0ZSIsIm5vdyIsIl9fc3RhcnROYXRpdmVBbmltYXRpb24iLCJfYW5pbWF0aW9uRnJhbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJiaW5kIiwidmFsdWUiLCJNYXRoIiwiZXhwIiwiYWJzIiwiX19kZWJvdW5jZWRPbkVuZCIsImZpbmlzaGVkIiwiZ2xvYmFsIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFVQSxhLDR0REFFQSxHQUFNQSxXQUFZQyxRQUFRLGFBQVIsQ0FBbEIsQyxhQUVnQ0EsUUFBUSx5QkFBUixDLENBQXpCQyxxQixVQUFBQSxxQixJQWVEQyxlLDJEQVVKLHdCQUFZQyxNQUFaLENBQWdELDhKQUU5QyxNQUFLQyxhQUFMLENBQ0VELE9BQU9FLFlBQVAsR0FBd0JDLFNBQXhCLENBQW9DSCxPQUFPRSxZQUEzQyxDQUEwRCxLQUQ1RCxDQUVBLE1BQUtFLFNBQUwsQ0FBaUJKLE9BQU9LLFFBQXhCLENBQ0EsTUFBS0MsZ0JBQUwsQ0FBd0JSLHNCQUFzQkUsTUFBdEIsQ0FBeEIsQ0FDQSxNQUFLTyxlQUFMLENBQ0VQLE9BQU9RLGFBQVAsR0FBeUJMLFNBQXpCLENBQXFDSCxPQUFPUSxhQUE1QyxDQUE0RCxJQUQ5RCxDQUVBLE1BQUtDLFlBQUwsQ0FBb0JULE9BQU9VLFVBQVAsR0FBc0JQLFNBQXRCLENBQWtDSCxPQUFPVSxVQUF6QyxDQUFzRCxDQUExRSxDQVI4QyxhQVMvQyxDLDBHQUU0QixDQUMzQixNQUFPLENBQ0xDLEtBQU0sT0FERCxDQUVMVCxhQUFjLEtBQUtELGFBRmQsQ0FHTEksU0FBVSxLQUFLRCxTQUhWLENBSUxNLFdBQVksS0FBS0QsWUFKWixDQUFQLENBTUQsQyxvQ0FHQ0csUyxDQUNBQyxRLENBQ0FDLEssQ0FDQUMsaUIsQ0FDQUMsYSxDQUNNLENBQ04sS0FBS0MsUUFBTCxDQUFnQixJQUFoQixDQUNBLEtBQUtDLFVBQUwsQ0FBa0JOLFNBQWxCLENBQ0EsS0FBS08sVUFBTCxDQUFrQlAsU0FBbEIsQ0FDQSxLQUFLUSxTQUFMLENBQWlCUCxRQUFqQixDQUNBLEtBQUtRLE9BQUwsQ0FBZVAsS0FBZixDQUNBLEtBQUtRLFVBQUwsQ0FBa0JDLEtBQUtDLEdBQUwsRUFBbEIsQ0FDQSxHQUFJLEtBQUtsQixnQkFBVCxDQUEyQixDQUN6QixLQUFLbUIsc0JBQUwsQ0FBNEJULGFBQTVCLEVBQ0QsQ0FGRCxJQUVPLENBQ0wsS0FBS1UsZUFBTCxDQUF1QkMsc0JBQXNCLEtBQUtkLFFBQUwsQ0FBY2UsSUFBZCxDQUFtQixJQUFuQixDQUF0QixDQUF2QixDQUNELENBQ0YsQywyQ0FFZ0IsQ0FDZixHQUFNSixLQUFNRCxLQUFLQyxHQUFMLEVBQVosQ0FFQSxHQUFNSyxPQUNKLEtBQUtWLFVBQUwsQ0FDQSxLQUFLZixTQUFMLEVBQ0csRUFBSSxLQUFLSCxhQURaLEdBRUcsRUFBSTZCLEtBQUtDLEdBQUwsQ0FBUyxFQUFFLEVBQUksS0FBSzlCLGFBQVgsR0FBNkJ1QixJQUFNLEtBQUtGLFVBQXhDLENBQVQsQ0FGUCxDQUZGLENBTUEsS0FBS0YsU0FBTCxDQUFlUyxLQUFmLEVBRUEsR0FBSUMsS0FBS0UsR0FBTCxDQUFTLEtBQUtkLFVBQUwsQ0FBa0JXLEtBQTNCLEVBQW9DLEdBQXhDLENBQTZDLENBQzNDLEtBQUtJLGdCQUFMLENBQXNCLENBQUNDLFNBQVUsSUFBWCxDQUF0QixFQUNBLE9BQ0QsQ0FFRCxLQUFLaEIsVUFBTCxDQUFrQlcsS0FBbEIsQ0FDQSxHQUFJLEtBQUtaLFFBQVQsQ0FBbUIsQ0FDakIsS0FBS1MsZUFBTCxDQUF1QkMsc0JBQXNCLEtBQUtkLFFBQUwsQ0FBY2UsSUFBZCxDQUFtQixJQUFuQixDQUF0QixDQUF2QixDQUNELENBQ0YsQyxtQ0FFWSxDQUNYLGlIQUNBLEtBQUtYLFFBQUwsQ0FBZ0IsS0FBaEIsQ0FDQWtCLE9BQU9DLG9CQUFQLENBQTRCLEtBQUtWLGVBQWpDLEVBQ0EsS0FBS08sZ0JBQUwsQ0FBc0IsQ0FBQ0MsU0FBVSxLQUFYLENBQXRCLEVBQ0QsQyw0QkE3RTBCdEMsUyxFQWdGN0J5QyxPQUFPQyxPQUFQLENBQWlCdkMsY0FBakIiLCJmaWxlIjoiRGVjYXlBbmltYXRpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBEZWNheUFuaW1hdGlvblxuICogQGZsb3dcbiAqIEBmb3JtYXRcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBBbmltYXRpb24gPSByZXF1aXJlKCcuL0FuaW1hdGlvbicpO1xuXG5jb25zdCB7c2hvdWxkVXNlTmF0aXZlRHJpdmVyfSA9IHJlcXVpcmUoJy4uL05hdGl2ZUFuaW1hdGVkSGVscGVyJyk7XG5cbmltcG9ydCB0eXBlIHtBbmltYXRpb25Db25maWcsIEVuZENhbGxiYWNrfSBmcm9tICcuL0FuaW1hdGlvbic7XG5pbXBvcnQgdHlwZSBBbmltYXRlZFZhbHVlIGZyb20gJy4uL25vZGVzL0FuaW1hdGVkVmFsdWUnO1xuXG5leHBvcnQgdHlwZSBEZWNheUFuaW1hdGlvbkNvbmZpZyA9IEFuaW1hdGlvbkNvbmZpZyAmIHtcbiAgdmVsb2NpdHk6IG51bWJlciB8IHt4OiBudW1iZXIsIHk6IG51bWJlcn0sXG4gIGRlY2VsZXJhdGlvbj86IG51bWJlcixcbn07XG5cbmV4cG9ydCB0eXBlIERlY2F5QW5pbWF0aW9uQ29uZmlnU2luZ2xlID0gQW5pbWF0aW9uQ29uZmlnICYge1xuICB2ZWxvY2l0eTogbnVtYmVyLFxuICBkZWNlbGVyYXRpb24/OiBudW1iZXIsXG59O1xuXG5jbGFzcyBEZWNheUFuaW1hdGlvbiBleHRlbmRzIEFuaW1hdGlvbiB7XG4gIF9zdGFydFRpbWU6IG51bWJlcjtcbiAgX2xhc3RWYWx1ZTogbnVtYmVyO1xuICBfZnJvbVZhbHVlOiBudW1iZXI7XG4gIF9kZWNlbGVyYXRpb246IG51bWJlcjtcbiAgX3ZlbG9jaXR5OiBudW1iZXI7XG4gIF9vblVwZGF0ZTogKHZhbHVlOiBudW1iZXIpID0+IHZvaWQ7XG4gIF9hbmltYXRpb25GcmFtZTogYW55O1xuICBfdXNlTmF0aXZlRHJpdmVyOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKGNvbmZpZzogRGVjYXlBbmltYXRpb25Db25maWdTaW5nbGUpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX2RlY2VsZXJhdGlvbiA9XG4gICAgICBjb25maWcuZGVjZWxlcmF0aW9uICE9PSB1bmRlZmluZWQgPyBjb25maWcuZGVjZWxlcmF0aW9uIDogMC45OTg7XG4gICAgdGhpcy5fdmVsb2NpdHkgPSBjb25maWcudmVsb2NpdHk7XG4gICAgdGhpcy5fdXNlTmF0aXZlRHJpdmVyID0gc2hvdWxkVXNlTmF0aXZlRHJpdmVyKGNvbmZpZyk7XG4gICAgdGhpcy5fX2lzSW50ZXJhY3Rpb24gPVxuICAgICAgY29uZmlnLmlzSW50ZXJhY3Rpb24gIT09IHVuZGVmaW5lZCA/IGNvbmZpZy5pc0ludGVyYWN0aW9uIDogdHJ1ZTtcbiAgICB0aGlzLl9faXRlcmF0aW9ucyA9IGNvbmZpZy5pdGVyYXRpb25zICE9PSB1bmRlZmluZWQgPyBjb25maWcuaXRlcmF0aW9ucyA6IDE7XG4gIH1cblxuICBfX2dldE5hdGl2ZUFuaW1hdGlvbkNvbmZpZygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdHlwZTogJ2RlY2F5JyxcbiAgICAgIGRlY2VsZXJhdGlvbjogdGhpcy5fZGVjZWxlcmF0aW9uLFxuICAgICAgdmVsb2NpdHk6IHRoaXMuX3ZlbG9jaXR5LFxuICAgICAgaXRlcmF0aW9uczogdGhpcy5fX2l0ZXJhdGlvbnMsXG4gICAgfTtcbiAgfVxuXG4gIHN0YXJ0KFxuICAgIGZyb21WYWx1ZTogbnVtYmVyLFxuICAgIG9uVXBkYXRlOiAodmFsdWU6IG51bWJlcikgPT4gdm9pZCxcbiAgICBvbkVuZDogP0VuZENhbGxiYWNrLFxuICAgIHByZXZpb3VzQW5pbWF0aW9uOiA/QW5pbWF0aW9uLFxuICAgIGFuaW1hdGVkVmFsdWU6IEFuaW1hdGVkVmFsdWUsXG4gICk6IHZvaWQge1xuICAgIHRoaXMuX19hY3RpdmUgPSB0cnVlO1xuICAgIHRoaXMuX2xhc3RWYWx1ZSA9IGZyb21WYWx1ZTtcbiAgICB0aGlzLl9mcm9tVmFsdWUgPSBmcm9tVmFsdWU7XG4gICAgdGhpcy5fb25VcGRhdGUgPSBvblVwZGF0ZTtcbiAgICB0aGlzLl9fb25FbmQgPSBvbkVuZDtcbiAgICB0aGlzLl9zdGFydFRpbWUgPSBEYXRlLm5vdygpO1xuICAgIGlmICh0aGlzLl91c2VOYXRpdmVEcml2ZXIpIHtcbiAgICAgIHRoaXMuX19zdGFydE5hdGl2ZUFuaW1hdGlvbihhbmltYXRlZFZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fYW5pbWF0aW9uRnJhbWUgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5vblVwZGF0ZS5iaW5kKHRoaXMpKTtcbiAgICB9XG4gIH1cblxuICBvblVwZGF0ZSgpOiB2b2lkIHtcbiAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xuXG4gICAgY29uc3QgdmFsdWUgPVxuICAgICAgdGhpcy5fZnJvbVZhbHVlICtcbiAgICAgIHRoaXMuX3ZlbG9jaXR5IC9cbiAgICAgICAgKDEgLSB0aGlzLl9kZWNlbGVyYXRpb24pICpcbiAgICAgICAgKDEgLSBNYXRoLmV4cCgtKDEgLSB0aGlzLl9kZWNlbGVyYXRpb24pICogKG5vdyAtIHRoaXMuX3N0YXJ0VGltZSkpKTtcblxuICAgIHRoaXMuX29uVXBkYXRlKHZhbHVlKTtcblxuICAgIGlmIChNYXRoLmFicyh0aGlzLl9sYXN0VmFsdWUgLSB2YWx1ZSkgPCAwLjEpIHtcbiAgICAgIHRoaXMuX19kZWJvdW5jZWRPbkVuZCh7ZmluaXNoZWQ6IHRydWV9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLl9sYXN0VmFsdWUgPSB2YWx1ZTtcbiAgICBpZiAodGhpcy5fX2FjdGl2ZSkge1xuICAgICAgdGhpcy5fYW5pbWF0aW9uRnJhbWUgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5vblVwZGF0ZS5iaW5kKHRoaXMpKTtcbiAgICB9XG4gIH1cblxuICBzdG9wKCk6IHZvaWQge1xuICAgIHN1cGVyLnN0b3AoKTtcbiAgICB0aGlzLl9fYWN0aXZlID0gZmFsc2U7XG4gICAgZ2xvYmFsLmNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMuX2FuaW1hdGlvbkZyYW1lKTtcbiAgICB0aGlzLl9fZGVib3VuY2VkT25FbmQoe2ZpbmlzaGVkOiBmYWxzZX0pO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gRGVjYXlBbmltYXRpb247XG4iXX0=