{"version":3,"sources":["Location.js"],"names":["Permissions","LocationEventEmitter","NativeEventEmitter","NativeModules","ExponentLocation","nextWatchId","headingId","_getNextWatchId","_getCurrentWatchId","watchCallbacks","deviceEventSubscription","headingEventSub","googleApiKey","googleApiUrl","getProviderStatusAsync","getCurrentPositionAsync","options","Platform","OS","Promise","resolve","reject","done","subscription","watchPositionAsync","location","remove","getHeadingAsync","tries","headingSub","addListener","watchId","heading","accuracy","removeSubscription","watchHeadingAsync","callback","_removeHeadingWatcher","removeWatchAsync","watchDeviceHeading","_maybeInitializeEmitterSubscription","_askPermissionForWatchAsync","success","error","askAsync","LOCATION","status","watchPositionImplAsync","_removeWatcher","message","geocodeAsync","address","catch","code","Error","_googleGeocodeAsync","reverseGeocodeAsync","latitude","longitude","TypeError","_googleReverseGeocodeAsync","setApiKey","apiKey","fetch","encodeURI","result","json","resultObject","results","map","geometry","lat","lng","address_components","forEach","component","types","includes","city","long_name","street","region","country","postalCode","name","watchPosition","clearWatch","Object","keys","length","getCurrentPosition","_getCurrentPositionAsyncWrapper","Location","window","navigator","geolocation","stopObserving","EventEmitter"],"mappings":"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","file":"Location.js","sourcesContent":["// @flow\nimport invariant from 'invariant';\nimport { NativeEventEmitter, NativeModules, Platform } from 'react-native';\n\nimport * as Permissions from './Permissions';\n\nconst LocationEventEmitter = new NativeEventEmitter(NativeModules.ExponentLocation);\n\ntype ProviderStatus = {\n  locationServicesEnabled: boolean,\n  gpsAvailable: ?boolean,\n  networkAvailable: ?boolean,\n  passiveAvailable: ?boolean,\n};\n\ntype LocationOptions = {\n  enableHighAccuracy?: boolean,\n  timeInterval?: number,\n  distanceInterval?: number,\n};\n\ntype LocationData = {\n  coords: {\n    latitude: number,\n    longitude: number,\n    altitude: number,\n    accuracy: number,\n    heading: number,\n    speed: number,\n  },\n  timestamp: number,\n};\n\ntype HeadingData = {\n  trueHeading: number,\n  magHeading: number,\n  accuracy: number,\n};\n\ntype LocationCallback = (data: LocationData) => any;\ntype HeadingCallback = (data: HeadingData) => any;\n\nconst { ExponentLocation } = NativeModules;\n\nlet nextWatchId = 0;\nlet headingId;\nfunction _getNextWatchId() {\n  nextWatchId++;\n  return nextWatchId;\n}\nfunction _getCurrentWatchId() {\n  return nextWatchId;\n}\n\nlet watchCallbacks: {\n  [watchId: number]: LocationCallback | HeadingCallback,\n} = {};\nlet deviceEventSubscription: ?Function;\nlet headingEventSub: ?Function;\nlet googleApiKey;\nconst googleApiUrl = 'https://maps.googleapis.com/maps/api/geocode/json';\n\nfunction getProviderStatusAsync(): Promise<ProviderStatus> {\n  return ExponentLocation.getProviderStatusAsync();\n}\n\nfunction getCurrentPositionAsync(options: LocationOptions = {}): Promise<LocationData> {\n  // On Android we have a native method for this case.\n  if (Platform.OS === 'android') {\n    return ExponentLocation.getCurrentPositionAsync(options);\n  }\n\n  // On iOS we implement it in terms of `.watchPositionAsync(...)`\n  // TODO: Use separate native method for iOS too?\n  return new Promise(async (resolve, reject) => {\n    try {\n      let done = false; // To make sure we only resolve once.\n      let subscription;\n      subscription = await watchPositionAsync(options, location => {\n        if (!done) {\n          resolve(location);\n          done = true;\n        }\n        subscription && subscription.remove();\n        subscription = null;\n      });\n\n      // In case the callback is fired before we get here.\n      if (done) {\n        subscription && subscription.remove();\n        subscription = null;\n      }\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n// Start Compass Module\n\n// To simplify, we will call watchHeadingAsync and wait for one update To ensure accuracy, we wait\n// for a couple of watch updates if the data has low accuracy\nasync function getHeadingAsync() {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // If there is already a compass active (would be a watch)\n      if (headingEventSub) {\n        let tries = 0;\n        const headingSub = LocationEventEmitter.addListener(\n          'Exponent.headingChanged',\n          ({ watchId, heading }) => {\n            if (heading.accuracy > 1 || tries > 5) {\n              resolve(heading);\n              LocationEventEmitter.removeSubscription(headingSub);\n            } else {\n              tries += 1;\n            }\n          }\n        );\n      } else {\n        let done = false;\n        let subscription;\n        let tries = 0;\n        subscription = await watchHeadingAsync(heading => {\n          if (!done) {\n            if (heading.accuracy > 1 || tries > 5) {\n              subscription.remove();\n              resolve(heading);\n              done = true;\n            } else {\n              tries += 1;\n            }\n          } else {\n            subscription.remove();\n          }\n        });\n\n        if (done) {\n          subscription.remove();\n        }\n      }\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\nasync function watchHeadingAsync(callback: HeadingCallback) {\n  // Check if there is already a compass event watch.\n  if (headingEventSub) {\n    _removeHeadingWatcher(headingId);\n  }\n\n  headingEventSub = LocationEventEmitter.addListener(\n    'Exponent.headingChanged',\n    ({ watchId, heading }) => {\n      const callback = watchCallbacks[watchId];\n      if (callback) {\n        callback(heading);\n      } else {\n        ExponentLocation.removeWatchAsync(watchId);\n      }\n    }\n  );\n\n  headingId = _getNextWatchId();\n  watchCallbacks[headingId] = callback;\n  await ExponentLocation.watchDeviceHeading(headingId);\n  return {\n    remove() {\n      _removeHeadingWatcher(headingId);\n    },\n  };\n}\n\n// Removes the compass listener and sub from JS and Native\nfunction _removeHeadingWatcher(watchId) {\n  if (!watchCallbacks[watchId]) {\n    return;\n  }\n  delete watchCallbacks[watchId];\n  ExponentLocation.removeWatchAsync(watchId);\n  LocationEventEmitter.removeSubscription(headingEventSub);\n  headingEventSub = null;\n}\n// End Compass Module\n\nfunction _maybeInitializeEmitterSubscription() {\n  if (!deviceEventSubscription) {\n    deviceEventSubscription = LocationEventEmitter.addListener(\n      'Exponent.locationChanged',\n      ({ watchId, location }) => {\n        const callback = watchCallbacks[watchId];\n        if (callback) {\n          callback(location);\n        } else {\n          ExponentLocation.removeWatchAsync(watchId);\n        }\n      }\n    );\n  }\n}\n\nasync function _askPermissionForWatchAsync(success, error, options, watchId) {\n  let { status } = await Permissions.askAsync(Permissions.LOCATION);\n  if (status === 'granted') {\n    ExponentLocation.watchPositionImplAsync(watchId, options);\n  } else {\n    _removeWatcher(watchId);\n    error({ watchId, message: 'No permission to access location' });\n  }\n}\n\nasync function geocodeAsync(address: string) {\n  return ExponentLocation.geocodeAsync(address).catch(error => {\n    if (Platform.OS === 'android' && error.code === 'E_NO_GEOCODER') {\n      if (!googleApiKey) {\n        throw new Error(error.message + ' Please set a Google API Key to use geocoding.');\n      }\n      return _googleGeocodeAsync(address);\n    }\n    throw error;\n  });\n}\n\nasync function reverseGeocodeAsync(location: { latitude: number, longitude: number }) {\n  if (typeof location.latitude !== 'number' || typeof location.longitude !== 'number') {\n    throw new TypeError(\n      'Location should be an object with number properties `latitude` and `longitude`.'\n    );\n  }\n  return ExponentLocation.reverseGeocodeAsync(location).catch(error => {\n    if (Platform.OS === 'android' && error.code === 'E_NO_GEOCODER') {\n      if (!googleApiKey) {\n        throw new Error(error.message + ' Please set a Google API Key to use geocoding.');\n      }\n      return _googleReverseGeocodeAsync(location);\n    }\n    throw error;\n  });\n}\n\nfunction setApiKey(apiKey: string) {\n  googleApiKey = apiKey;\n}\n\nasync function _googleGeocodeAsync(address: string) {\n  const result = await fetch(`${googleApiUrl}?key=${googleApiKey}&address=${encodeURI(address)}`);\n  const resultObject = await result.json();\n\n  if (resultObject.status !== 'OK') {\n    throw new Error('An error occurred during geocoding.');\n  }\n\n  return resultObject.results.map(result => {\n    let location = result.geometry.location;\n    return {\n      latitude: location.lat,\n      longitude: location.lng,\n    };\n  });\n}\n\nasync function _googleReverseGeocodeAsync(options: { latitude: number, longitude: number }) {\n  const result = await fetch(\n    `${googleApiUrl}?key=${googleApiKey}&latlng=${options.latitude},${options.longitude}`\n  );\n  const resultObject = await result.json();\n\n  if (resultObject.status !== 'OK') {\n    throw new Error('An error occurred during geocoding.');\n  }\n\n  return resultObject.results.map(result => {\n    let address = {};\n    result.address_components.forEach(component => {\n      if (component.types.includes('locality')) {\n        address.city = component.long_name;\n      } else if (component.types.includes('street_address')) {\n        address.street = component.long_name;\n      } else if (component.types.includes('administrative_area_level_1')) {\n        address.region = component.long_name;\n      } else if (component.types.includes('country')) {\n        address.country = component.long_name;\n      } else if (component.types.includes('postal_code')) {\n        address.postalCode = component.long_name;\n      } else if (component.types.includes('point_of_interest')) {\n        address.name = component.long_name;\n      }\n    });\n    return address;\n  });\n}\n\n// Polyfill: navigator.geolocation.watchPosition\nfunction watchPosition(\n  success: GeoSuccessCallback,\n  error: GeoErrorCallback,\n  options: LocationOptions\n) {\n  _maybeInitializeEmitterSubscription();\n\n  const watchId = _getNextWatchId();\n  watchCallbacks[watchId] = success;\n  _askPermissionForWatchAsync(success, error, options, watchId);\n\n  return watchId;\n}\n\nasync function watchPositionAsync(options: LocationOptions, callback: LocationCallback) {\n  _maybeInitializeEmitterSubscription();\n\n  const watchId = _getNextWatchId();\n  watchCallbacks[watchId] = callback;\n  await ExponentLocation.watchPositionImplAsync(watchId, options);\n\n  return {\n    remove() {\n      _removeWatcher(watchId);\n    },\n  };\n}\n\n// Polyfill: navigator.geolocation.clearWatch\nfunction clearWatch(watchId: number) {\n  _removeWatcher(watchId);\n}\n\nfunction _removeWatcher(watchId) {\n  // Do nothing if we have already removed the subscription\n  if (!watchCallbacks[watchId]) {\n    return;\n  }\n\n  ExponentLocation.removeWatchAsync(watchId);\n  delete watchCallbacks[watchId];\n  if (Object.keys(watchCallbacks).length === 0) {\n    LocationEventEmitter.removeSubscription(deviceEventSubscription);\n    deviceEventSubscription = null;\n  }\n}\n\ntype GeoSuccessCallback = (data: LocationData) => void;\ntype GeoErrorCallback = (error: any) => void;\n\nfunction getCurrentPosition(\n  success: GeoSuccessCallback,\n  error?: GeoErrorCallback = () => {},\n  options?: LocationOptions = {}\n): void {\n  invariant(typeof success === 'function', 'Must provide a valid success callback.');\n\n  invariant(typeof options === 'object', 'options must be an object.');\n\n  _getCurrentPositionAsyncWrapper(success, error, options);\n}\n\n// This function exists to let us continue to return undefined from getCurrentPosition, while still\n// using async/await for the internal implementation of it\nasync function _getCurrentPositionAsyncWrapper(\n  success: GeoSuccessCallback,\n  error: GeoErrorCallback,\n  options: LocationOptions\n): Promise<*> {\n  try {\n    let { status } = await Permissions.askAsync(Permissions.LOCATION);\n    if (status !== 'granted') {\n      throw new Error(\n        'Permission to access location not granted. User must now enable it manually in settings'\n      );\n    }\n\n    let result = await Location.getCurrentPositionAsync(options);\n    success(result);\n  } catch (e) {\n    error(e);\n  }\n}\n\n// Polyfill navigator.geolocation for interop with the core react-native and web API approach to\n// geolocation\nwindow.navigator.geolocation = {\n  getCurrentPosition,\n  watchPosition,\n  clearWatch,\n\n  // We don't polyfill stopObserving, this is an internal method that probably should not even exist\n  // in react-native docs\n  stopObserving: () => {},\n};\n\nconst Location = {\n  getProviderStatusAsync,\n  getCurrentPositionAsync,\n  watchPositionAsync,\n  getHeadingAsync,\n  watchHeadingAsync,\n  geocodeAsync,\n  reverseGeocodeAsync,\n  setApiKey,\n\n  // For internal purposes\n  EventEmitter: LocationEventEmitter,\n  _getCurrentWatchId,\n};\n\nexport default Location;\n"]}