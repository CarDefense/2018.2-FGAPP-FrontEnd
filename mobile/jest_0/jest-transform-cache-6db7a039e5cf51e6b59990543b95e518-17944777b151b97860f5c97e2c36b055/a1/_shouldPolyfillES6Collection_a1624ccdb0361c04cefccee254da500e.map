{"version":3,"sources":["_shouldPolyfillES6Collection.js"],"names":["_shouldActuallyPolyfillES6Collection","collectionName","Collection","global","Symbol","proto","prototype","clear","size","keys","forEach","cache","_shouldPolyfillES6Collection","result","undefined","module","exports"],"mappings":"AAUA,aAMA,QAASA,qCAAT,CAA8CC,cAA9C,CAA+E,CAC7E,GAAIC,YAAaC,OAAOF,cAAP,CAAjB,CACA,GAAIC,YAAc,IAAlB,CAAwB,CACtB,MAAO,KAAP,CACD,CAMD,GAAI,MAAOC,QAAOC,MAAd,GAAyB,UAA7B,CAAyC,CACvC,MAAO,KAAP,CACD,CAED,GAAIC,OAAQH,WAAWI,SAAvB,CAKA,MAAOJ,aAAc,IAAd,EACL,MAAOA,WAAP,GAAsB,UADjB,EAEL,MAAOG,OAAME,KAAb,GAAuB,UAFlB,EAGL,GAAIL,WAAJ,GAAiBM,IAAjB,GAA0B,CAHrB,EAIL,MAAOH,OAAMI,IAAb,GAAsB,UAJjB,EAKL,MAAOJ,OAAMK,OAAb,GAAyB,UAL3B,CAMD,CAED,GAAMC,OAAkC,EAAxC,CAQA,QAASC,6BAAT,CAAsCX,cAAtC,CAA8D,CAC1D,GAAIY,QAASF,MAAMV,cAAN,CAAb,CACA,GAAIY,SAAWC,SAAf,CAA0B,CACxB,MAAOD,OAAP,CACD,CAEDA,OAASb,qCAAqCC,cAArC,CAAT,CACAU,MAAMV,cAAN,EAAwBY,MAAxB,CACA,MAAOA,OAAP,CACH,CAEDE,OAAOC,OAAP,CAAiBJ,4BAAjB","file":"_shouldPolyfillES6Collection.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule _shouldPolyfillES6Collection\n * @preventMunge\n * @flow\n */\n'use strict';\n\n/**\n * Checks whether a collection name (e.g. \"Map\" or \"Set\") has a native polyfill\n * that is safe to be used.\n */\nfunction _shouldActuallyPolyfillES6Collection(collectionName: string): boolean {\n  var Collection = global[collectionName];\n  if (Collection == null) {\n    return true;\n  }\n\n  // The iterator protocol depends on `Symbol.iterator`. If a collection is\n  // implemented, but `Symbol` is not, it's going to break iteration because\n  // we'll be using custom \"@@iterator\" instead, which is not implemented on\n  // native collections.\n  if (typeof global.Symbol !== 'function') {\n    return true;\n  }\n\n  var proto = Collection.prototype;\n\n  // These checks are adapted from es6-shim: https://fburl.com/34437854\n  // NOTE: `isCallableWithoutNew` and `!supportsSubclassing` are not checked\n  // because they make debugging with \"break on exceptions\" difficult.\n  return Collection == null ||\n    typeof Collection !== 'function' ||\n    typeof proto.clear !== 'function' ||\n    new Collection().size !== 0 ||\n    typeof proto.keys !== 'function' ||\n    typeof proto.forEach !== 'function';\n}\n\nconst cache: { [name: string]: bool } = {};\n\n  /**\n   * Checks whether a collection name (e.g. \"Map\" or \"Set\") has a native polyfill\n   * that is safe to be used and caches this result.\n   * Make sure to make a first call to this function before a corresponding\n   * property on global was overriden in any way.\n   */\nfunction _shouldPolyfillES6Collection(collectionName: string) {\n    let result = cache[collectionName];\n    if (result !== undefined) {\n      return result;\n    }\n\n    result = _shouldActuallyPolyfillES6Collection(collectionName);\n    cache[collectionName] = result;\n    return result;\n}\n\nmodule.exports = _shouldPolyfillES6Collection;\n"]}