{"version":3,"sources":["YellowBox.js"],"names":["EventEmitter","require","Platform","React","SafeAreaView","StyleSheet","RCTLog","infoLog","openFileInEditor","parseErrorStack","stringifySafe","symbolicateStackTrace","_warningEmitter","_warningMap","Map","IGNORED_WARNINGS","__DEV__","console","error","warn","apply","arguments","startsWith","updateWarningMap","isTesting","disableYellowBox","setWarningHandler","args","sprintf","format","index","replace","warning","formatArgs","argCount","match","length","slice","map","join","warningInfo","get","count","Error","framesToPop","set","stacktrace","symbolicated","emit","ensureSymbolicatedWarning","prevWarningInfo","then","nextWarningInfo","stack","isWarningIgnored","isIgnored","some","ignoredWarning","Array","isArray","ignoredYellowBox","String","ignorePrefix","WarningRow","onPress","Text","TouchableHighlight","View","countText","styles","listRowCount","listRow","listRowContent","listRowText","StackRow","frame","file","lineNumber","fileName","fileParts","split","openInEditorButton","bind","inspectorCountText","WarningInspector","stacktraceVisible","onDismiss","onDismissAll","onMinimize","toggleStacktrace","ScrollView","countSentence","stacktraceList","ii","inspector","safeArea","inspectorCount","inspectorButtonText","inspectorWarning","inspectorWarningText","inspectorButtons","inspectorButton","YellowBox","props","context","state","inspecting","warningMap","dismissWarning","delete","clear","setState","scheduled","_listener","addListener","setImmediate","remove","size","rows","forEach","push","listStyle","list","height","Math","min","rowGutter","rowHeight","fullScreen","warnings","indexOf","Component","backgroundColor","opacity","textColor","elevation","OS","Number","MAX_SAFE_INTEGER","undefined","create","width","position","paddingTop","flexDirection","flex","paddingVertical","paddingBottom","color","fontSize","textAlign","padding","justifyContent","paddingHorizontal","fontWeight","left","right","bottom","marginTop","top","marginLeft","marginRight","module","exports"],"mappings":"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","file":"YellowBox.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule YellowBox\n * @flow\n * @format\n */\n\n'use strict';\n\nconst EventEmitter = require('EventEmitter');\nconst Platform = require('Platform');\nconst React = require('React');\nconst SafeAreaView = require('SafeAreaView');\nconst StyleSheet = require('StyleSheet');\nconst RCTLog = require('RCTLog');\n\nconst infoLog = require('infoLog');\nconst openFileInEditor = require('openFileInEditor');\nconst parseErrorStack = require('parseErrorStack');\nconst stringifySafe = require('stringifySafe');\nconst symbolicateStackTrace = require('symbolicateStackTrace');\n\nimport type EmitterSubscription from 'EmitterSubscription';\nimport type {StackFrame} from 'parseErrorStack';\n\ntype WarningInfo = {\n  count: number,\n  stacktrace: Array<StackFrame>,\n  symbolicated: boolean,\n};\n\nconst _warningEmitter = new EventEmitter();\nconst _warningMap: Map<string, WarningInfo> = new Map();\nconst IGNORED_WARNINGS: Array<string> = [];\n\n/**\n * YellowBox renders warnings at the bottom of the app being developed.\n *\n * Warnings help guard against subtle yet significant issues that can impact the\n * quality of the app. This \"in your face\" style of warning allows developers to\n * notice and correct these issues as quickly as possible.\n *\n * By default, the warning box is enabled in `__DEV__`. Set the following flag\n * to disable it (and call `console.warn` to update any rendered <YellowBox>):\n *\n *   console.disableYellowBox = true;\n *   console.warn('YellowBox is disabled.');\n *\n * Ignore specific warnings by calling:\n *\n *   YellowBox.ignoreWarnings(['Warning: ...']);\n *\n * (DEPRECATED) Warnings can be ignored programmatically by setting the array:\n *\n *   console.ignoredYellowBox = ['Warning: ...'];\n *\n * Strings in `console.ignoredYellowBox` can be a prefix of the warning that\n * should be ignored.\n */\n\nif (__DEV__) {\n  const {error, warn} = console;\n\n  (console: any).error = function() {\n    error.apply(console, arguments);\n    // Show yellow box for the `warning` module.\n    if (\n      typeof arguments[0] === 'string' &&\n      arguments[0].startsWith('Warning: ')\n    ) {\n      updateWarningMap.apply(null, arguments);\n    }\n  };\n\n  (console: any).warn = function() {\n    warn.apply(console, arguments);\n    updateWarningMap.apply(null, arguments);\n  };\n\n  if (Platform.isTesting) {\n    (console: any).disableYellowBox = true;\n  }\n\n  RCTLog.setWarningHandler((...args) => {\n    updateWarningMap.apply(null, args);\n  });\n}\n\n/**\n * Simple function for formatting strings.\n *\n * Replaces placeholders with values passed as extra arguments\n *\n * @param {string} format the base string\n * @param ...args the values to insert\n * @return {string} the replaced string\n */\nfunction sprintf(format, ...args) {\n  let index = 0;\n  return format.replace(/%s/g, match => args[index++]);\n}\n\nfunction updateWarningMap(...args): void {\n  if (console.disableYellowBox) {\n    return;\n  }\n\n  let warning;\n  if (typeof args[0] === 'string') {\n    const [format, ...formatArgs] = args;\n    const argCount = (format.match(/%s/g) || []).length;\n    warning = [\n      sprintf(format, ...formatArgs.slice(0, argCount).map(stringifySafe)),\n      ...formatArgs.slice(argCount).map(stringifySafe),\n    ].join(' ');\n  } else {\n    warning = args.map(stringifySafe).join(' ');\n  }\n\n  if (warning.startsWith('(ADVICE)')) {\n    return;\n  }\n\n  const warningInfo = _warningMap.get(warning);\n  if (warningInfo) {\n    warningInfo.count += 1;\n  } else {\n    const error: any = new Error();\n    error.framesToPop = 2;\n\n    _warningMap.set(warning, {\n      count: 1,\n      stacktrace: parseErrorStack(error),\n      symbolicated: false,\n    });\n  }\n\n  _warningEmitter.emit('warning', _warningMap);\n}\n\nfunction ensureSymbolicatedWarning(warning: string): void {\n  const prevWarningInfo = _warningMap.get(warning);\n  if (!prevWarningInfo || prevWarningInfo.symbolicated) {\n    return;\n  }\n  prevWarningInfo.symbolicated = true;\n\n  symbolicateStackTrace(prevWarningInfo.stacktrace).then(\n    stack => {\n      const nextWarningInfo = _warningMap.get(warning);\n      if (nextWarningInfo) {\n        nextWarningInfo.stacktrace = stack;\n        _warningEmitter.emit('warning', _warningMap);\n      }\n    },\n    error => {\n      const nextWarningInfo = _warningMap.get(warning);\n      if (nextWarningInfo) {\n        infoLog('Failed to symbolicate warning, \"%s\":', warning, error);\n        _warningEmitter.emit('warning', _warningMap);\n      }\n    },\n  );\n}\n\nfunction isWarningIgnored(warning: string): boolean {\n  const isIgnored = IGNORED_WARNINGS.some((ignoredWarning: string) =>\n    warning.startsWith(ignoredWarning),\n  );\n\n  if (isIgnored) {\n    return true;\n  }\n\n  // DEPRECATED\n  return (\n    Array.isArray(console.ignoredYellowBox) &&\n    console.ignoredYellowBox.some(ignorePrefix =>\n      warning.startsWith(String(ignorePrefix)),\n    )\n  );\n}\n\nconst WarningRow = ({count, warning, onPress}) => {\n  const Text = require('Text');\n  const TouchableHighlight = require('TouchableHighlight');\n  const View = require('View');\n\n  const countText =\n    count > 1 ? (\n      <Text style={styles.listRowCount}>{'(' + count + ') '}</Text>\n    ) : null;\n\n  return (\n    <View style={styles.listRow}>\n      <TouchableHighlight\n        activeOpacity={0.5}\n        onPress={onPress}\n        style={styles.listRowContent}\n        underlayColor=\"transparent\">\n        <Text style={styles.listRowText} numberOfLines={2}>\n          {countText}\n          {warning}\n        </Text>\n      </TouchableHighlight>\n    </View>\n  );\n};\n\ntype StackRowProps = {frame: StackFrame};\nconst StackRow = ({frame}: StackRowProps) => {\n  const Text = require('Text');\n  const TouchableHighlight = require('TouchableHighlight');\n  const {file, lineNumber} = frame;\n  let fileName;\n  if (file) {\n    const fileParts = file.split('/');\n    fileName = fileParts[fileParts.length - 1];\n  } else {\n    fileName = '<unknown file>';\n  }\n\n  return (\n    <TouchableHighlight\n      activeOpacity={0.5}\n      style={styles.openInEditorButton}\n      underlayColor=\"transparent\"\n      onPress={openFileInEditor.bind(null, file, lineNumber)}>\n      <Text style={styles.inspectorCountText}>\n        {fileName}:{lineNumber}\n      </Text>\n    </TouchableHighlight>\n  );\n};\n\nconst WarningInspector = ({\n  warningInfo,\n  warning,\n  stacktraceVisible,\n  onDismiss,\n  onDismissAll,\n  onMinimize,\n  toggleStacktrace,\n}) => {\n  const ScrollView = require('ScrollView');\n  const Text = require('Text');\n  const TouchableHighlight = require('TouchableHighlight');\n  const View = require('View');\n  const {count, stacktrace} = warningInfo || {};\n\n  const countSentence =\n    'Warning encountered ' + count + ' time' + (count - 1 ? 's' : '') + '.';\n\n  let stacktraceList;\n  if (stacktraceVisible && stacktrace) {\n    stacktraceList = (\n      <View style={styles.stacktraceList}>\n        {stacktrace.map((frame, ii) => <StackRow frame={frame} key={ii} />)}\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.inspector}>\n      <SafeAreaView style={styles.safeArea}>\n        <View style={styles.inspectorCount}>\n          <Text style={styles.inspectorCountText}>{countSentence}</Text>\n          <TouchableHighlight\n            onPress={toggleStacktrace}\n            underlayColor=\"transparent\">\n            <Text style={styles.inspectorButtonText}>\n              {stacktraceVisible ? '\\u{25BC}' : '\\u{25B6}'} Stacktrace\n            </Text>\n          </TouchableHighlight>\n        </View>\n        <ScrollView style={styles.inspectorWarning}>\n          {stacktraceList}\n          <Text style={styles.inspectorWarningText}>{warning}</Text>\n        </ScrollView>\n        <View style={styles.inspectorButtons}>\n          <TouchableHighlight\n            activeOpacity={0.5}\n            onPress={onMinimize}\n            style={styles.inspectorButton}\n            underlayColor=\"transparent\">\n            <Text style={styles.inspectorButtonText}>Minimize</Text>\n          </TouchableHighlight>\n          <TouchableHighlight\n            activeOpacity={0.5}\n            onPress={onDismiss}\n            style={styles.inspectorButton}\n            underlayColor=\"transparent\">\n            <Text style={styles.inspectorButtonText}>Dismiss</Text>\n          </TouchableHighlight>\n          <TouchableHighlight\n            activeOpacity={0.5}\n            onPress={onDismissAll}\n            style={styles.inspectorButton}\n            underlayColor=\"transparent\">\n            <Text style={styles.inspectorButtonText}>Dismiss All</Text>\n          </TouchableHighlight>\n        </View>\n      </SafeAreaView>\n    </View>\n  );\n};\n\nclass YellowBox extends React.Component<\n  mixed,\n  {\n    stacktraceVisible: boolean,\n    inspecting: ?string,\n    warningMap: Map<any, any>,\n  },\n> {\n  _listener: ?EmitterSubscription;\n  dismissWarning: (warning: ?string) => void;\n\n  constructor(props: mixed, context: mixed) {\n    super(props, context);\n    this.state = {\n      inspecting: null,\n      stacktraceVisible: false,\n      warningMap: _warningMap,\n    };\n    this.dismissWarning = warning => {\n      const {inspecting, warningMap} = this.state;\n      if (warning) {\n        warningMap.delete(warning);\n      } else {\n        warningMap.clear();\n      }\n      this.setState({\n        inspecting: warning && inspecting !== warning ? inspecting : null,\n        warningMap,\n      });\n    };\n  }\n\n  static ignoreWarnings(warnings: Array<string>): void {\n    warnings.forEach((warning: string) => {\n      if (IGNORED_WARNINGS.indexOf(warning) === -1) {\n        IGNORED_WARNINGS.push(warning);\n      }\n    });\n  }\n\n  componentDidMount() {\n    let scheduled = null;\n    this._listener = _warningEmitter.addListener('warning', warningMap => {\n      // Use `setImmediate` because warnings often happen during render, but\n      // state cannot be set while rendering.\n      scheduled =\n        scheduled ||\n        setImmediate(() => {\n          scheduled = null;\n          this.setState({\n            warningMap,\n          });\n        });\n    });\n  }\n\n  componentDidUpdate() {\n    const {inspecting} = this.state;\n    if (inspecting != null) {\n      ensureSymbolicatedWarning(inspecting);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._listener) {\n      this._listener.remove();\n    }\n  }\n\n  render() {\n    if (console.disableYellowBox || this.state.warningMap.size === 0) {\n      return null;\n    }\n    const ScrollView = require('ScrollView');\n    const View = require('View');\n\n    const {inspecting, stacktraceVisible} = this.state;\n    const inspector =\n      inspecting !== null ? (\n        <WarningInspector\n          warningInfo={this.state.warningMap.get(inspecting)}\n          warning={inspecting}\n          stacktraceVisible={stacktraceVisible}\n          onDismiss={() => this.dismissWarning(inspecting)}\n          onDismissAll={() => this.dismissWarning(null)}\n          onMinimize={() => this.setState({inspecting: null})}\n          toggleStacktrace={() =>\n            this.setState({stacktraceVisible: !stacktraceVisible})\n          }\n        />\n      ) : null;\n\n    const rows = [];\n    this.state.warningMap.forEach((warningInfo, warning) => {\n      if (!isWarningIgnored(warning)) {\n        rows.push(\n          <WarningRow\n            key={warning}\n            count={warningInfo.count}\n            warning={warning}\n            onPress={() => this.setState({inspecting: warning})}\n            onDismiss={() => this.dismissWarning(warning)}\n          />,\n        );\n      }\n    });\n\n    const listStyle = [\n      styles.list,\n      // Additional `0.4` so the 5th row can peek into view.\n      {height: Math.min(rows.length, 4.4) * (rowGutter + rowHeight)},\n    ];\n    return (\n      <View style={inspector ? styles.fullScreen : listStyle}>\n        <ScrollView style={listStyle} scrollsToTop={false}>\n          {rows}\n        </ScrollView>\n        {inspector}\n      </View>\n    );\n  }\n}\n\nconst backgroundColor = opacity => 'rgba(250, 186, 48, ' + opacity + ')';\nconst textColor = 'white';\nconst rowGutter = 1;\nconst rowHeight = 46;\n\n// For unknown reasons, setting elevation: Number.MAX_VALUE causes remote debugging to\n// hang on iOS (some sort of overflow maybe). Setting it to Number.MAX_SAFE_INTEGER fixes the iOS issue, but since\n// elevation is an android-only style property we might as well remove it altogether for iOS.\n// See: https://github.com/facebook/react-native/issues/12223\nconst elevation =\n  Platform.OS === 'android' ? Number.MAX_SAFE_INTEGER : undefined;\n\nvar styles = StyleSheet.create({\n  fullScreen: {\n    height: '100%',\n    width: '100%',\n    elevation: elevation,\n    position: 'absolute',\n  },\n  inspector: {\n    backgroundColor: backgroundColor(0.95),\n    height: '100%',\n    paddingTop: 5,\n    elevation: elevation,\n  },\n  inspectorButtons: {\n    flexDirection: 'row',\n  },\n  inspectorButton: {\n    flex: 1,\n    paddingVertical: 22,\n    backgroundColor: backgroundColor(1),\n  },\n  safeArea: {\n    flex: 1,\n  },\n  stacktraceList: {\n    paddingBottom: 5,\n  },\n  inspectorButtonText: {\n    color: textColor,\n    fontSize: 14,\n    opacity: 0.8,\n    textAlign: 'center',\n  },\n  openInEditorButton: {\n    paddingTop: 5,\n    paddingBottom: 5,\n  },\n  inspectorCount: {\n    padding: 15,\n    paddingBottom: 0,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  inspectorCountText: {\n    color: textColor,\n    fontSize: 14,\n  },\n  inspectorWarning: {\n    flex: 1,\n    paddingHorizontal: 15,\n  },\n  inspectorWarningText: {\n    color: textColor,\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  list: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    elevation: elevation,\n  },\n  listRow: {\n    backgroundColor: backgroundColor(0.95),\n    height: rowHeight,\n    marginTop: rowGutter,\n  },\n  listRowContent: {\n    flex: 1,\n  },\n  listRowCount: {\n    color: 'rgba(255, 255, 255, 0.5)',\n  },\n  listRowText: {\n    color: textColor,\n    position: 'absolute',\n    left: 0,\n    top: Platform.OS === 'android' ? 5 : 7,\n    marginLeft: 15,\n    marginRight: 15,\n  },\n});\n\nmodule.exports = YellowBox;\n"]}