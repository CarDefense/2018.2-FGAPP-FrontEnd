{"version":3,"sources":["AnimatedStyle.js"],"names":["AnimatedNode","require","AnimatedTransform","AnimatedWithChildren","NativeAnimatedHelper","flattenStyle","AnimatedStyle","style","transform","_style","updatedStyle","key","value","__isNative","__getValue","Array","isArray","_walkStyleAndGetValues","__getAnimatedValue","_walkStyleAndGetAnimatedValues","__addChild","__removeChild","__makeNative","styleConfig","styleKey","__getNativeTag","validateStyles","type","module","exports"],"mappings":"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","file":"AnimatedStyle.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule AnimatedStyle\n * @flow\n * @format\n */\n'use strict';\n\nconst AnimatedNode = require('./AnimatedNode');\nconst AnimatedTransform = require('./AnimatedTransform');\nconst AnimatedWithChildren = require('./AnimatedWithChildren');\nconst NativeAnimatedHelper = require('../NativeAnimatedHelper');\n\nconst flattenStyle = require('flattenStyle');\n\nclass AnimatedStyle extends AnimatedWithChildren {\n  _style: Object;\n\n  constructor(style: any) {\n    super();\n    style = flattenStyle(style) || {};\n    if (style.transform) {\n      style = {\n        ...style,\n        transform: new AnimatedTransform(style.transform),\n      };\n    }\n    this._style = style;\n  }\n\n  // Recursively get values for nested styles (like iOS's shadowOffset)\n  _walkStyleAndGetValues(style) {\n    const updatedStyle = {};\n    for (const key in style) {\n      const value = style[key];\n      if (value instanceof AnimatedNode) {\n        if (!value.__isNative) {\n          // We cannot use value of natively driven nodes this way as the value we have access from\n          // JS may not be up to date.\n          updatedStyle[key] = value.__getValue();\n        }\n      } else if (value && !Array.isArray(value) && typeof value === 'object') {\n        // Support animating nested values (for example: shadowOffset.height)\n        updatedStyle[key] = this._walkStyleAndGetValues(value);\n      } else {\n        updatedStyle[key] = value;\n      }\n    }\n    return updatedStyle;\n  }\n\n  __getValue(): Object {\n    return this._walkStyleAndGetValues(this._style);\n  }\n\n  // Recursively get animated values for nested styles (like iOS's shadowOffset)\n  _walkStyleAndGetAnimatedValues(style) {\n    const updatedStyle = {};\n    for (const key in style) {\n      const value = style[key];\n      if (value instanceof AnimatedNode) {\n        updatedStyle[key] = value.__getAnimatedValue();\n      } else if (value && !Array.isArray(value) && typeof value === 'object') {\n        // Support animating nested values (for example: shadowOffset.height)\n        updatedStyle[key] = this._walkStyleAndGetAnimatedValues(value);\n      }\n    }\n    return updatedStyle;\n  }\n\n  __getAnimatedValue(): Object {\n    return this._walkStyleAndGetAnimatedValues(this._style);\n  }\n\n  __attach(): void {\n    for (const key in this._style) {\n      const value = this._style[key];\n      if (value instanceof AnimatedNode) {\n        value.__addChild(this);\n      }\n    }\n  }\n\n  __detach(): void {\n    for (const key in this._style) {\n      const value = this._style[key];\n      if (value instanceof AnimatedNode) {\n        value.__removeChild(this);\n      }\n    }\n    super.__detach();\n  }\n\n  __makeNative() {\n    super.__makeNative();\n    for (const key in this._style) {\n      const value = this._style[key];\n      if (value instanceof AnimatedNode) {\n        value.__makeNative();\n      }\n    }\n  }\n\n  __getNativeConfig(): Object {\n    const styleConfig = {};\n    for (const styleKey in this._style) {\n      if (this._style[styleKey] instanceof AnimatedNode) {\n        styleConfig[styleKey] = this._style[styleKey].__getNativeTag();\n      }\n      // Non-animated styles are set using `setNativeProps`, no need\n      // to pass those as a part of the node config\n    }\n    NativeAnimatedHelper.validateStyles(styleConfig);\n    return {\n      type: 'style',\n      style: styleConfig,\n    };\n  }\n}\n\nmodule.exports = AnimatedStyle;\n"]}