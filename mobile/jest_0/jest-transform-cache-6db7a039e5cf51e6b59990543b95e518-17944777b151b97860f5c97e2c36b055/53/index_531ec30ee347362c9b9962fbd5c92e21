b2d5741f8b73d861d449fdcc5c25ced0
Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _propTypes=require('prop-types');var _propTypes2=_interopRequireDefault(_propTypes);var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactNative=require('react-native');var _styles=require('./styles');var _styles2=_interopRequireDefault(_styles);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Affix=function(_PureComponent){_inherits(Affix,_PureComponent);function Affix(props){_classCallCheck(this,Affix);var _this=_possibleConstructorReturn(this,(Affix.__proto__||Object.getPrototypeOf(Affix)).call(this,props));var _this$props=_this.props,active=_this$props.active,focused=_this$props.focused;_this.state={opacity:new _reactNative.Animated.Value(active||focused?1:0)};return _this;}_createClass(Affix,[{key:'componentWillReceiveProps',value:function componentWillReceiveProps(props){var opacity=this.state.opacity;var _props=this.props,active=_props.active,focused=_props.focused,animationDuration=_props.animationDuration;if(focused^props.focused||active^props.active){_reactNative.Animated.timing(opacity,{toValue:props.active||props.focused?1:0,duration:animationDuration}).start();}}},{key:'render',value:function render(){var opacity=this.state.opacity;var _props2=this.props,style=_props2.style,children=_props2.children,type=_props2.type,fontSize=_props2.fontSize,color=_props2.baseColor;var containerStyle={height:fontSize*1.5,opacity:opacity};var textStyle={color:color,fontSize:fontSize};switch(type){case'prefix':containerStyle.paddingRight=8;textStyle.textAlign='left';break;case'suffix':containerStyle.paddingLeft=8;textStyle.textAlign='right';break;}return _react2.default.createElement(_reactNative.Animated.View,{style:[_styles2.default.container,containerStyle]},_react2.default.createElement(_reactNative.Animated.Text,{style:[style,textStyle]},children));}}]);return Affix;}(_react.PureComponent);Affix.defaultProps={numberOfLines:1,active:false,focused:false};Affix.propTypes={numberOfLines:_propTypes2.default.number,active:_propTypes2.default.bool,focused:_propTypes2.default.bool,type:_propTypes2.default.oneOf(['prefix','suffix']).isRequired,fontSize:_propTypes2.default.number.isRequired,baseColor:_propTypes2.default.string.isRequired,animationDuration:_propTypes2.default.number.isRequired,style:_reactNative.Animated.Text.propTypes.style,children:_propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node),_propTypes2.default.node])};exports.default=Affix;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkFmZml4IiwicHJvcHMiLCJhY3RpdmUiLCJmb2N1c2VkIiwic3RhdGUiLCJvcGFjaXR5IiwiQW5pbWF0ZWQiLCJWYWx1ZSIsImFuaW1hdGlvbkR1cmF0aW9uIiwidGltaW5nIiwidG9WYWx1ZSIsImR1cmF0aW9uIiwic3RhcnQiLCJzdHlsZSIsImNoaWxkcmVuIiwidHlwZSIsImZvbnRTaXplIiwiY29sb3IiLCJiYXNlQ29sb3IiLCJjb250YWluZXJTdHlsZSIsImhlaWdodCIsInRleHRTdHlsZSIsInBhZGRpbmdSaWdodCIsInRleHRBbGlnbiIsInBhZGRpbmdMZWZ0Iiwic3R5bGVzIiwiY29udGFpbmVyIiwiUHVyZUNvbXBvbmVudCIsImRlZmF1bHRQcm9wcyIsIm51bWJlck9mTGluZXMiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJudW1iZXIiLCJib29sIiwib25lT2YiLCJpc1JlcXVpcmVkIiwic3RyaW5nIiwiVGV4dCIsIm9uZU9mVHlwZSIsImFycmF5T2YiLCJub2RlIl0sIm1hcHBpbmdzIjoidWpCQUFBLHFDLG1EQUNBLDRCLDJDQUNBLHlDQUVBLGdDLGk3QkFFcUJBLE0sMERBNEJuQixlQUFZQyxLQUFaLENBQW1CLGlJQUNYQSxLQURXLG1CQUdTLE1BQUtBLEtBSGQsQ0FHWEMsTUFIVyxhQUdYQSxNQUhXLENBR0hDLE9BSEcsYUFHSEEsT0FIRyxDQUtqQixNQUFLQyxLQUFMLENBQWEsQ0FDWEMsUUFBUyxHQUFJQyx1QkFBU0MsS0FBYixDQUFvQkwsUUFBVUMsT0FBWCxDQUFxQixDQUFyQixDQUF5QixDQUE1QyxDQURFLENBQWIsQ0FMaUIsYUFRbEIsQyw4RkFFeUJGLEssQ0FBTyxJQUN6QkksUUFEeUIsQ0FDYixLQUFLRCxLQURRLENBQ3pCQyxPQUR5QixZQUVjLEtBQUtKLEtBRm5CLENBRXpCQyxNQUZ5QixRQUV6QkEsTUFGeUIsQ0FFakJDLE9BRmlCLFFBRWpCQSxPQUZpQixDQUVSSyxpQkFGUSxRQUVSQSxpQkFGUSxDQUkvQixHQUFLTCxRQUFVRixNQUFNRSxPQUFqQixFQUE4QkQsT0FBU0QsTUFBTUMsTUFBakQsQ0FBMEQsQ0FDeERJLHNCQUNHRyxNQURILENBQ1VKLE9BRFYsQ0FDbUIsQ0FDZkssUUFBVVQsTUFBTUMsTUFBTixFQUFnQkQsTUFBTUUsT0FBdkIsQ0FBaUMsQ0FBakMsQ0FBcUMsQ0FEL0IsQ0FFZlEsU0FBVUgsaUJBRkssQ0FEbkIsRUFLR0ksS0FMSCxHQU1ELENBQ0YsQyx1Q0FFUSxJQUNEUCxRQURDLENBQ1csS0FBS0QsS0FEaEIsQ0FDREMsT0FEQyxhQUVxRCxLQUFLSixLQUYxRCxDQUVEWSxLQUZDLFNBRURBLEtBRkMsQ0FFTUMsUUFGTixTQUVNQSxRQUZOLENBRWdCQyxJQUZoQixTQUVnQkEsSUFGaEIsQ0FFc0JDLFFBRnRCLFNBRXNCQSxRQUZ0QixDQUUyQ0MsS0FGM0MsU0FFZ0NDLFNBRmhDLENBSVAsR0FBSUMsZ0JBQWlCLENBQ25CQyxPQUFRSixTQUFXLEdBREEsQ0FFbkJYLGVBRm1CLENBQXJCLENBS0EsR0FBSWdCLFdBQVksQ0FDZEosV0FEYyxDQUVkRCxpQkFGYyxDQUFoQixDQUtBLE9BQVFELElBQVIsRUFDRSxJQUFLLFFBQUwsQ0FDRUksZUFBZUcsWUFBZixDQUE4QixDQUE5QixDQUNBRCxVQUFVRSxTQUFWLENBQXNCLE1BQXRCLENBQ0EsTUFFRixJQUFLLFFBQUwsQ0FDRUosZUFBZUssV0FBZixDQUE2QixDQUE3QixDQUNBSCxVQUFVRSxTQUFWLENBQXNCLE9BQXRCLENBQ0EsTUFUSixDQVlBLE1BQ0UsK0JBQUMscUJBQUQsQ0FBVSxJQUFWLEVBQWUsTUFBTyxDQUFDRSxpQkFBT0MsU0FBUixDQUFtQlAsY0FBbkIsQ0FBdEIsRUFDRSw4QkFBQyxxQkFBRCxDQUFVLElBQVYsRUFBZSxNQUFPLENBQUNOLEtBQUQsQ0FBUVEsU0FBUixDQUF0QixFQUEyQ1AsUUFBM0MsQ0FERixDQURGLENBS0QsQyxtQkFuRmdDYSxvQixFQUFkM0IsSyxDQUNaNEIsWSxDQUFlLENBQ3BCQyxjQUFlLENBREssQ0FHcEIzQixPQUFRLEtBSFksQ0FJcEJDLFFBQVMsS0FKVyxDLENBREhILEssQ0FRWjhCLFMsQ0FBWSxDQUNqQkQsY0FBZUUsb0JBQVVDLE1BRFIsQ0FHakI5QixPQUFRNkIsb0JBQVVFLElBSEQsQ0FJakI5QixRQUFTNEIsb0JBQVVFLElBSkYsQ0FNakJsQixLQUFNZ0Isb0JBQVVHLEtBQVYsQ0FBZ0IsQ0FBQyxRQUFELENBQVcsUUFBWCxDQUFoQixFQUFzQ0MsVUFOM0IsQ0FRakJuQixTQUFVZSxvQkFBVUMsTUFBVixDQUFpQkcsVUFSVixDQVNqQmpCLFVBQVdhLG9CQUFVSyxNQUFWLENBQWlCRCxVQVRYLENBVWpCM0Isa0JBQW1CdUIsb0JBQVVDLE1BQVYsQ0FBaUJHLFVBVm5CLENBWWpCdEIsTUFBT1Asc0JBQVMrQixJQUFULENBQWNQLFNBQWQsQ0FBd0JqQixLQVpkLENBY2pCQyxTQUFVaUIsb0JBQVVPLFNBQVYsQ0FBb0IsQ0FDNUJQLG9CQUFVUSxPQUFWLENBQWtCUixvQkFBVVMsSUFBNUIsQ0FENEIsQ0FFNUJULG9CQUFVUyxJQUZrQixDQUFwQixDQWRPLEMsaUJBUkF4QyxLIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCwgeyBQdXJlQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQW5pbWF0ZWQgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vc3R5bGVzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQWZmaXggZXh0ZW5kcyBQdXJlQ29tcG9uZW50IHtcbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBudW1iZXJPZkxpbmVzOiAxLFxuXG4gICAgYWN0aXZlOiBmYWxzZSxcbiAgICBmb2N1c2VkOiBmYWxzZSxcbiAgfTtcblxuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIG51bWJlck9mTGluZXM6IFByb3BUeXBlcy5udW1iZXIsXG5cbiAgICBhY3RpdmU6IFByb3BUeXBlcy5ib29sLFxuICAgIGZvY3VzZWQ6IFByb3BUeXBlcy5ib29sLFxuXG4gICAgdHlwZTogUHJvcFR5cGVzLm9uZU9mKFsncHJlZml4JywgJ3N1ZmZpeCddKS5pc1JlcXVpcmVkLFxuXG4gICAgZm9udFNpemU6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgICBiYXNlQ29sb3I6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICBhbmltYXRpb25EdXJhdGlvbjogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuXG4gICAgc3R5bGU6IEFuaW1hdGVkLlRleHQucHJvcFR5cGVzLnN0eWxlLFxuXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgICAgUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm5vZGUpLFxuICAgICAgUHJvcFR5cGVzLm5vZGUsXG4gICAgXSksXG4gIH07XG5cbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG5cbiAgICBsZXQgeyBhY3RpdmUsIGZvY3VzZWQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgb3BhY2l0eTogbmV3IEFuaW1hdGVkLlZhbHVlKChhY3RpdmUgfHwgZm9jdXNlZCk/IDEgOiAwKSxcbiAgICB9O1xuICB9XG5cbiAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhwcm9wcykge1xuICAgIGxldCB7IG9wYWNpdHkgfSA9IHRoaXMuc3RhdGU7XG4gICAgbGV0IHsgYWN0aXZlLCBmb2N1c2VkLCBhbmltYXRpb25EdXJhdGlvbiB9ID0gdGhpcy5wcm9wcztcblxuICAgIGlmICgoZm9jdXNlZCBeIHByb3BzLmZvY3VzZWQpIHx8IChhY3RpdmUgXiBwcm9wcy5hY3RpdmUpKSB7XG4gICAgICBBbmltYXRlZFxuICAgICAgICAudGltaW5nKG9wYWNpdHksIHtcbiAgICAgICAgICB0b1ZhbHVlOiAocHJvcHMuYWN0aXZlIHx8IHByb3BzLmZvY3VzZWQpPyAxIDogMCxcbiAgICAgICAgICBkdXJhdGlvbjogYW5pbWF0aW9uRHVyYXRpb24sXG4gICAgICAgIH0pXG4gICAgICAgIC5zdGFydCgpO1xuICAgIH1cbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBsZXQgeyBvcGFjaXR5IH0gPSB0aGlzLnN0YXRlO1xuICAgIGxldCB7IHN0eWxlLCBjaGlsZHJlbiwgdHlwZSwgZm9udFNpemUsIGJhc2VDb2xvcjogY29sb3IgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBsZXQgY29udGFpbmVyU3R5bGUgPSB7XG4gICAgICBoZWlnaHQ6IGZvbnRTaXplICogMS41LFxuICAgICAgb3BhY2l0eSxcbiAgICB9O1xuXG4gICAgbGV0IHRleHRTdHlsZSA9IHtcbiAgICAgIGNvbG9yLFxuICAgICAgZm9udFNpemUsXG4gICAgfTtcblxuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgY2FzZSAncHJlZml4JzpcbiAgICAgICAgY29udGFpbmVyU3R5bGUucGFkZGluZ1JpZ2h0ID0gODtcbiAgICAgICAgdGV4dFN0eWxlLnRleHRBbGlnbiA9ICdsZWZ0JztcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ3N1ZmZpeCc6XG4gICAgICAgIGNvbnRhaW5lclN0eWxlLnBhZGRpbmdMZWZ0ID0gODtcbiAgICAgICAgdGV4dFN0eWxlLnRleHRBbGlnbiA9ICdyaWdodCc7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICA8QW5pbWF0ZWQuVmlldyBzdHlsZT17W3N0eWxlcy5jb250YWluZXIsIGNvbnRhaW5lclN0eWxlXX0+XG4gICAgICAgIDxBbmltYXRlZC5UZXh0IHN0eWxlPXtbc3R5bGUsIHRleHRTdHlsZV19PntjaGlsZHJlbn08L0FuaW1hdGVkLlRleHQ+XG4gICAgICA8L0FuaW1hdGVkLlZpZXc+XG4gICAgKTtcbiAgfVxufVxuIl19