{"version":3,"sources":["index.js"],"names":["Affix","props","active","focused","state","opacity","Animated","Value","animationDuration","timing","toValue","duration","start","style","children","type","fontSize","color","baseColor","containerStyle","height","textStyle","paddingRight","textAlign","paddingLeft","styles","container","PureComponent","defaultProps","numberOfLines","propTypes","PropTypes","number","bool","oneOf","isRequired","string","Text","oneOfType","arrayOf","node"],"mappings":"ujBAAA,qC,mDACA,4B,2CACA,yCAEA,gC,i7BAEqBA,M,0DA4BnB,eAAYC,KAAZ,CAAmB,iIACXA,KADW,mBAGS,MAAKA,KAHd,CAGXC,MAHW,aAGXA,MAHW,CAGHC,OAHG,aAGHA,OAHG,CAKjB,MAAKC,KAAL,CAAa,CACXC,QAAS,GAAIC,uBAASC,KAAb,CAAoBL,QAAUC,OAAX,CAAqB,CAArB,CAAyB,CAA5C,CADE,CAAb,CALiB,aAQlB,C,8FAEyBF,K,CAAO,IACzBI,QADyB,CACb,KAAKD,KADQ,CACzBC,OADyB,YAEc,KAAKJ,KAFnB,CAEzBC,MAFyB,QAEzBA,MAFyB,CAEjBC,OAFiB,QAEjBA,OAFiB,CAERK,iBAFQ,QAERA,iBAFQ,CAI/B,GAAKL,QAAUF,MAAME,OAAjB,EAA8BD,OAASD,MAAMC,MAAjD,CAA0D,CACxDI,sBACGG,MADH,CACUJ,OADV,CACmB,CACfK,QAAUT,MAAMC,MAAN,EAAgBD,MAAME,OAAvB,CAAiC,CAAjC,CAAqC,CAD/B,CAEfQ,SAAUH,iBAFK,CADnB,EAKGI,KALH,GAMD,CACF,C,uCAEQ,IACDP,QADC,CACW,KAAKD,KADhB,CACDC,OADC,aAEqD,KAAKJ,KAF1D,CAEDY,KAFC,SAEDA,KAFC,CAEMC,QAFN,SAEMA,QAFN,CAEgBC,IAFhB,SAEgBA,IAFhB,CAEsBC,QAFtB,SAEsBA,QAFtB,CAE2CC,KAF3C,SAEgCC,SAFhC,CAIP,GAAIC,gBAAiB,CACnBC,OAAQJ,SAAW,GADA,CAEnBX,eAFmB,CAArB,CAKA,GAAIgB,WAAY,CACdJ,WADc,CAEdD,iBAFc,CAAhB,CAKA,OAAQD,IAAR,EACE,IAAK,QAAL,CACEI,eAAeG,YAAf,CAA8B,CAA9B,CACAD,UAAUE,SAAV,CAAsB,MAAtB,CACA,MAEF,IAAK,QAAL,CACEJ,eAAeK,WAAf,CAA6B,CAA7B,CACAH,UAAUE,SAAV,CAAsB,OAAtB,CACA,MATJ,CAYA,MACE,+BAAC,qBAAD,CAAU,IAAV,EAAe,MAAO,CAACE,iBAAOC,SAAR,CAAmBP,cAAnB,CAAtB,EACE,8BAAC,qBAAD,CAAU,IAAV,EAAe,MAAO,CAACN,KAAD,CAAQQ,SAAR,CAAtB,EAA2CP,QAA3C,CADF,CADF,CAKD,C,mBAnFgCa,oB,EAAd3B,K,CACZ4B,Y,CAAe,CACpBC,cAAe,CADK,CAGpB3B,OAAQ,KAHY,CAIpBC,QAAS,KAJW,C,CADHH,K,CAQZ8B,S,CAAY,CACjBD,cAAeE,oBAAUC,MADR,CAGjB9B,OAAQ6B,oBAAUE,IAHD,CAIjB9B,QAAS4B,oBAAUE,IAJF,CAMjBlB,KAAMgB,oBAAUG,KAAV,CAAgB,CAAC,QAAD,CAAW,QAAX,CAAhB,EAAsCC,UAN3B,CAQjBnB,SAAUe,oBAAUC,MAAV,CAAiBG,UARV,CASjBjB,UAAWa,oBAAUK,MAAV,CAAiBD,UATX,CAUjB3B,kBAAmBuB,oBAAUC,MAAV,CAAiBG,UAVnB,CAYjBtB,MAAOP,sBAAS+B,IAAT,CAAcP,SAAd,CAAwBjB,KAZd,CAcjBC,SAAUiB,oBAAUO,SAAV,CAAoB,CAC5BP,oBAAUQ,OAAV,CAAkBR,oBAAUS,IAA5B,CAD4B,CAE5BT,oBAAUS,IAFkB,CAApB,CAdO,C,iBARAxC,K","file":"index.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { Animated } from 'react-native';\n\nimport styles from './styles';\n\nexport default class Affix extends PureComponent {\n  static defaultProps = {\n    numberOfLines: 1,\n\n    active: false,\n    focused: false,\n  };\n\n  static propTypes = {\n    numberOfLines: PropTypes.number,\n\n    active: PropTypes.bool,\n    focused: PropTypes.bool,\n\n    type: PropTypes.oneOf(['prefix', 'suffix']).isRequired,\n\n    fontSize: PropTypes.number.isRequired,\n    baseColor: PropTypes.string.isRequired,\n    animationDuration: PropTypes.number.isRequired,\n\n    style: Animated.Text.propTypes.style,\n\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n    ]),\n  };\n\n  constructor(props) {\n    super(props);\n\n    let { active, focused } = this.props;\n\n    this.state = {\n      opacity: new Animated.Value((active || focused)? 1 : 0),\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    let { opacity } = this.state;\n    let { active, focused, animationDuration } = this.props;\n\n    if ((focused ^ props.focused) || (active ^ props.active)) {\n      Animated\n        .timing(opacity, {\n          toValue: (props.active || props.focused)? 1 : 0,\n          duration: animationDuration,\n        })\n        .start();\n    }\n  }\n\n  render() {\n    let { opacity } = this.state;\n    let { style, children, type, fontSize, baseColor: color } = this.props;\n\n    let containerStyle = {\n      height: fontSize * 1.5,\n      opacity,\n    };\n\n    let textStyle = {\n      color,\n      fontSize,\n    };\n\n    switch (type) {\n      case 'prefix':\n        containerStyle.paddingRight = 8;\n        textStyle.textAlign = 'left';\n        break;\n\n      case 'suffix':\n        containerStyle.paddingLeft = 8;\n        textStyle.textAlign = 'right';\n        break;\n    }\n\n    return (\n      <Animated.View style={[styles.container, containerStyle]}>\n        <Animated.Text style={[style, textStyle]}>{children}</Animated.Text>\n      </Animated.View>\n    );\n  }\n}\n"]}