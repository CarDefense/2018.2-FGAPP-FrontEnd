{"version":3,"sources":["AnimatedProps.js"],"names":["require","AnimatedEvent","AnimatedNode","AnimatedStyle","NativeAnimatedHelper","ReactNative","invariant","AnimatedProps","props","callback","style","_props","_callback","__attach","key","value","__isNative","__getValue","__getHandler","__getAnimatedValue","__addChild","_animatedView","__disconnectAnimatedView","__removeChild","__makeNative","__connectAnimatedView","animatedView","nativeViewTag","findNodeHandle","API","connectAnimatedNodeToView","__getNativeTag","disconnectAnimatedNodeFromView","propsConfig","propKey","type","module","exports"],"mappings":"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","file":"AnimatedProps.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule AnimatedProps\n * @flow\n * @format\n */\n'use strict';\n\nconst {AnimatedEvent} = require('../AnimatedEvent');\nconst AnimatedNode = require('./AnimatedNode');\nconst AnimatedStyle = require('./AnimatedStyle');\nconst NativeAnimatedHelper = require('../NativeAnimatedHelper');\nconst ReactNative = require('ReactNative');\n\nconst invariant = require('fbjs/lib/invariant');\n\nclass AnimatedProps extends AnimatedNode {\n  _props: Object;\n  _animatedView: any;\n  _callback: () => void;\n\n  constructor(props: Object, callback: () => void) {\n    super();\n    if (props.style) {\n      props = {\n        ...props,\n        style: new AnimatedStyle(props.style),\n      };\n    }\n    this._props = props;\n    this._callback = callback;\n    this.__attach();\n  }\n\n  __getValue(): Object {\n    const props = {};\n    for (const key in this._props) {\n      const value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        if (!value.__isNative || value instanceof AnimatedStyle) {\n          // We cannot use value of natively driven nodes this way as the value we have access from\n          // JS may not be up to date.\n          props[key] = value.__getValue();\n        }\n      } else if (value instanceof AnimatedEvent) {\n        props[key] = value.__getHandler();\n      } else {\n        props[key] = value;\n      }\n    }\n    return props;\n  }\n\n  __getAnimatedValue(): Object {\n    const props = {};\n    for (const key in this._props) {\n      const value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        props[key] = value.__getAnimatedValue();\n      }\n    }\n    return props;\n  }\n\n  __attach(): void {\n    for (const key in this._props) {\n      const value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        value.__addChild(this);\n      }\n    }\n  }\n\n  __detach(): void {\n    if (this.__isNative && this._animatedView) {\n      this.__disconnectAnimatedView();\n    }\n    for (const key in this._props) {\n      const value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        value.__removeChild(this);\n      }\n    }\n    super.__detach();\n  }\n\n  update(): void {\n    this._callback();\n  }\n\n  __makeNative(): void {\n    if (!this.__isNative) {\n      this.__isNative = true;\n      for (const key in this._props) {\n        const value = this._props[key];\n        if (value instanceof AnimatedNode) {\n          value.__makeNative();\n        }\n      }\n      if (this._animatedView) {\n        this.__connectAnimatedView();\n      }\n    }\n  }\n\n  setNativeView(animatedView: any): void {\n    if (this._animatedView === animatedView) {\n      return;\n    }\n    this._animatedView = animatedView;\n    if (this.__isNative) {\n      this.__connectAnimatedView();\n    }\n  }\n\n  __connectAnimatedView(): void {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    const nativeViewTag: ?number = ReactNative.findNodeHandle(\n      this._animatedView,\n    );\n    invariant(\n      nativeViewTag != null,\n      'Unable to locate attached view in the native tree',\n    );\n    NativeAnimatedHelper.API.connectAnimatedNodeToView(\n      this.__getNativeTag(),\n      nativeViewTag,\n    );\n  }\n\n  __disconnectAnimatedView(): void {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    const nativeViewTag: ?number = ReactNative.findNodeHandle(\n      this._animatedView,\n    );\n    invariant(\n      nativeViewTag != null,\n      'Unable to locate attached view in the native tree',\n    );\n    NativeAnimatedHelper.API.disconnectAnimatedNodeFromView(\n      this.__getNativeTag(),\n      nativeViewTag,\n    );\n  }\n\n  __getNativeConfig(): Object {\n    const propsConfig = {};\n    for (const propKey in this._props) {\n      const value = this._props[propKey];\n      if (value instanceof AnimatedNode) {\n        propsConfig[propKey] = value.__getNativeTag();\n      }\n    }\n    return {\n      type: 'props',\n      props: propsConfig,\n    };\n  }\n}\n\nmodule.exports = AnimatedProps;\n"]}