{"version":3,"sources":["FillRateHelper.js"],"names":["performanceNow","require","warning","Info","any_blank_count","any_blank_ms","any_blank_speed_sum","mostly_blank_count","mostly_blank_ms","pixels_blank","pixels_sampled","pixels_scrolled","total_time_spent","sample_count","DEBUG","_listeners","_minSampleCount","_sampleRate","FillRateHelper","callback","push","remove","filter","listener","sampleRate","minSampleCount","getFrameMetrics","_anyBlankStartTime","_enabled","_info","_mostlyBlankStartTime","_samplesStartTime","_getFrameMetrics","Math","random","_resetData","console","debug","start","info","derived","avg_blankness","avg_speed","avg_speed_when_any_blank","any_blank_per_min","any_blank_time_frac","mostly_blank_per_min","mostly_blank_time_frac","key","round","forEach","props","state","scrollMetrics","getItemCount","data","dOffset","offset","velocity","visibleLength","abs","scrollSpeed","now","blankTop","first","firstFrame","last","inLayout","min","max","blankBottom","lastFrame","bottomEdge","length","blankness","deactivateAndFlush","module","exports"],"mappings":"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","file":"FillRateHelper.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule FillRateHelper\n * @flow\n * @format\n */\n\n'use strict';\n\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst performanceNow = require('fbjs/lib/performanceNow');\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst warning = require('fbjs/lib/warning');\n\nexport type FillRateInfo = Info;\n\nclass Info {\n  any_blank_count = 0;\n  any_blank_ms = 0;\n  any_blank_speed_sum = 0;\n  mostly_blank_count = 0;\n  mostly_blank_ms = 0;\n  pixels_blank = 0;\n  pixels_sampled = 0;\n  pixels_scrolled = 0;\n  total_time_spent = 0;\n  sample_count = 0;\n}\n\ntype FrameMetrics = {inLayout?: boolean, length: number, offset: number};\n\nconst DEBUG = false;\n\nlet _listeners: Array<(Info) => void> = [];\nlet _minSampleCount = 10;\nlet _sampleRate = DEBUG ? 1 : null;\n\n/**\n * A helper class for detecting when the maximem fill rate of `VirtualizedList` is exceeded.\n * By default the sampling rate is set to zero and this will do nothing. If you want to collect\n * samples (e.g. to log them), make sure to call `FillRateHelper.setSampleRate(0.0-1.0)`.\n *\n * Listeners and sample rate are global for all `VirtualizedList`s - typical usage will combine with\n * `SceneTracker.getActiveScene` to determine the context of the events.\n */\nclass FillRateHelper {\n  _anyBlankStartTime = (null: ?number);\n  _enabled = false;\n  _getFrameMetrics: (index: number) => ?FrameMetrics;\n  _info = new Info();\n  _mostlyBlankStartTime = (null: ?number);\n  _samplesStartTime = (null: ?number);\n\n  static addListener(callback: FillRateInfo => void): {remove: () => void} {\n    warning(\n      _sampleRate !== null,\n      'Call `FillRateHelper.setSampleRate` before `addListener`.',\n    );\n    _listeners.push(callback);\n    return {\n      remove: () => {\n        _listeners = _listeners.filter(listener => callback !== listener);\n      },\n    };\n  }\n\n  static setSampleRate(sampleRate: number) {\n    _sampleRate = sampleRate;\n  }\n\n  static setMinSampleCount(minSampleCount: number) {\n    _minSampleCount = minSampleCount;\n  }\n\n  constructor(getFrameMetrics: (index: number) => ?FrameMetrics) {\n    this._getFrameMetrics = getFrameMetrics;\n    this._enabled = (_sampleRate || 0) > Math.random();\n    this._resetData();\n  }\n\n  activate() {\n    if (this._enabled && this._samplesStartTime == null) {\n      DEBUG && console.debug('FillRateHelper: activate');\n      this._samplesStartTime = performanceNow();\n    }\n  }\n\n  deactivateAndFlush() {\n    if (!this._enabled) {\n      return;\n    }\n    const start = this._samplesStartTime; // const for flow\n    if (start == null) {\n      DEBUG &&\n        console.debug('FillRateHelper: bail on deactivate with no start time');\n      return;\n    }\n    if (this._info.sample_count < _minSampleCount) {\n      // Don't bother with under-sampled events.\n      this._resetData();\n      return;\n    }\n    const total_time_spent = performanceNow() - start;\n    const info: any = {\n      ...this._info,\n      total_time_spent,\n    };\n    if (DEBUG) {\n      const derived = {\n        avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,\n        avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),\n        avg_speed_when_any_blank:\n          this._info.any_blank_speed_sum / this._info.any_blank_count,\n        any_blank_per_min:\n          this._info.any_blank_count / (total_time_spent / 1000 / 60),\n        any_blank_time_frac: this._info.any_blank_ms / total_time_spent,\n        mostly_blank_per_min:\n          this._info.mostly_blank_count / (total_time_spent / 1000 / 60),\n        mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent,\n      };\n      for (const key in derived) {\n        derived[key] = Math.round(1000 * derived[key]) / 1000;\n      }\n      console.debug('FillRateHelper deactivateAndFlush: ', {derived, info});\n    }\n    _listeners.forEach(listener => listener(info));\n    this._resetData();\n  }\n\n  computeBlankness(\n    props: {\n      data: Array<any>,\n      getItemCount: (data: Array<any>) => number,\n      initialNumToRender: number,\n    },\n    state: {\n      first: number,\n      last: number,\n    },\n    scrollMetrics: {\n      dOffset: number,\n      offset: number,\n      velocity: number,\n      visibleLength: number,\n    },\n  ): number {\n    if (\n      !this._enabled ||\n      props.getItemCount(props.data) === 0 ||\n      this._samplesStartTime == null\n    ) {\n      return 0;\n    }\n    const {dOffset, offset, velocity, visibleLength} = scrollMetrics;\n\n    // Denominator metrics that we track for all events - most of the time there is no blankness and\n    // we want to capture that.\n    this._info.sample_count++;\n    this._info.pixels_sampled += Math.round(visibleLength);\n    this._info.pixels_scrolled += Math.round(Math.abs(dOffset));\n    const scrollSpeed = Math.round(Math.abs(velocity) * 1000); // px / sec\n\n    // Whether blank now or not, record the elapsed time blank if we were blank last time.\n    const now = performanceNow();\n    if (this._anyBlankStartTime != null) {\n      this._info.any_blank_ms += now - this._anyBlankStartTime;\n    }\n    this._anyBlankStartTime = null;\n    if (this._mostlyBlankStartTime != null) {\n      this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;\n    }\n    this._mostlyBlankStartTime = null;\n\n    let blankTop = 0;\n    let first = state.first;\n    let firstFrame = this._getFrameMetrics(first);\n    while (first <= state.last && (!firstFrame || !firstFrame.inLayout)) {\n      firstFrame = this._getFrameMetrics(first);\n      first++;\n    }\n    // Only count blankTop if we aren't rendering the first item, otherwise we will count the header\n    // as blank.\n    if (firstFrame && first > 0) {\n      blankTop = Math.min(\n        visibleLength,\n        Math.max(0, firstFrame.offset - offset),\n      );\n    }\n    let blankBottom = 0;\n    let last = state.last;\n    let lastFrame = this._getFrameMetrics(last);\n    while (last >= state.first && (!lastFrame || !lastFrame.inLayout)) {\n      lastFrame = this._getFrameMetrics(last);\n      last--;\n    }\n    // Only count blankBottom if we aren't rendering the last item, otherwise we will count the\n    // footer as blank.\n    if (lastFrame && last < props.getItemCount(props.data) - 1) {\n      const bottomEdge = lastFrame.offset + lastFrame.length;\n      blankBottom = Math.min(\n        visibleLength,\n        Math.max(0, offset + visibleLength - bottomEdge),\n      );\n    }\n    const pixels_blank = Math.round(blankTop + blankBottom);\n    const blankness = pixels_blank / visibleLength;\n    if (blankness > 0) {\n      this._anyBlankStartTime = now;\n      this._info.any_blank_speed_sum += scrollSpeed;\n      this._info.any_blank_count++;\n      this._info.pixels_blank += pixels_blank;\n      if (blankness > 0.5) {\n        this._mostlyBlankStartTime = now;\n        this._info.mostly_blank_count++;\n      }\n    } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {\n      this.deactivateAndFlush();\n    }\n    return blankness;\n  }\n\n  enabled(): boolean {\n    return this._enabled;\n  }\n\n  _resetData() {\n    this._anyBlankStartTime = null;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n  }\n}\n\nmodule.exports = FillRateHelper;\n"]}