{"version":3,"sources":["AnimatedNode.js"],"names":["NativeAnimatedHelper","require","invariant","AnimatedNode","__isNative","__nativeTag","API","dropAnimatedNode","undefined","__getValue","child","Error","assertNativeAnimatedModule","nativeTag","generateNewNodeTag","createAnimatedNode","__getNativeConfig","module","exports"],"mappings":"AAUA,a,+oBAEA,GAAMA,sBAAuBC,QAAQ,yBAAR,CAA7B,CAEA,GAAMC,WAAYD,OAAZ,sBAAN,C,GAIME,a,4IACa,CAAE,C,2CACF,CACf,GAAI,KAAKC,UAAL,EAAmB,KAAKC,WAAL,EAAoB,IAA3C,CAAiD,CAC/CL,qBAAqBM,GAArB,CAAyBC,gBAAzB,CAA0C,KAAKF,WAA/C,EACA,KAAKA,WAAL,CAAmBG,SAAnB,CACD,CACF,C,+CACiB,CAAE,C,+DACM,CACxB,MAAO,MAAKC,UAAL,EAAP,CACD,C,8CACUC,K,CAAqB,CAAE,C,oDACpBA,K,CAAqB,CAAE,C,qDACA,CACnC,MAAO,EAAP,CACD,C,mDAKc,CACb,GAAI,CAAC,KAAKN,UAAV,CAAsB,CACpB,KAAM,IAAIO,MAAJ,CAAU,mDAAV,CAAN,CACD,CACF,C,uDACyB,CACxBX,qBAAqBY,0BAArB,GACAV,UACE,KAAKE,UADP,CAEE,4DAFF,EAIA,GAAI,KAAKC,WAAL,EAAoB,IAAxB,CAA8B,CAC5B,GAAMQ,WAAqBb,qBAAqBc,kBAArB,EAA3B,CACAd,qBAAqBM,GAArB,CAAyBS,kBAAzB,CACEF,SADF,CAEE,KAAKG,iBAAL,EAFF,EAIA,KAAKX,WAAL,CAAmBQ,SAAnB,CACD,CACD,MAAO,MAAKR,WAAZ,CACD,C,6DAC2B,CAC1B,KAAM,IAAIM,MAAJ,CACJ,mEADI,CAAN,CAGD,C,uCACa,CACZ,MAAO,MAAKF,UAAL,EAAP,CACD,C,4BAGHQ,OAAOC,OAAP,CAAiBf,YAAjB","file":"AnimatedNode.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule AnimatedNode\n * @flow\n * @format\n */\n'use strict';\n\nconst NativeAnimatedHelper = require('../NativeAnimatedHelper');\n\nconst invariant = require('fbjs/lib/invariant');\n\n// Note(vjeux): this would be better as an interface but flow doesn't\n// support them yet\nclass AnimatedNode {\n  __attach(): void {}\n  __detach(): void {\n    if (this.__isNative && this.__nativeTag != null) {\n      NativeAnimatedHelper.API.dropAnimatedNode(this.__nativeTag);\n      this.__nativeTag = undefined;\n    }\n  }\n  __getValue(): any {}\n  __getAnimatedValue(): any {\n    return this.__getValue();\n  }\n  __addChild(child: AnimatedNode) {}\n  __removeChild(child: AnimatedNode) {}\n  __getChildren(): Array<AnimatedNode> {\n    return [];\n  }\n\n  /* Methods and props used by native Animated impl */\n  __isNative: boolean;\n  __nativeTag: ?number;\n  __makeNative() {\n    if (!this.__isNative) {\n      throw new Error('This node cannot be made a \"native\" animated node');\n    }\n  }\n  __getNativeTag(): ?number {\n    NativeAnimatedHelper.assertNativeAnimatedModule();\n    invariant(\n      this.__isNative,\n      'Attempt to get native tag from node not marked as \"native\"',\n    );\n    if (this.__nativeTag == null) {\n      const nativeTag: ?number = NativeAnimatedHelper.generateNewNodeTag();\n      NativeAnimatedHelper.API.createAnimatedNode(\n        nativeTag,\n        this.__getNativeConfig(),\n      );\n      this.__nativeTag = nativeTag;\n    }\n    return this.__nativeTag;\n  }\n  __getNativeConfig(): Object {\n    throw new Error(\n      'This JS animated node type cannot be used as native animated node',\n    );\n  }\n  toJSON(): any {\n    return this.__getValue();\n  }\n}\n\nmodule.exports = AnimatedNode;\n"]}