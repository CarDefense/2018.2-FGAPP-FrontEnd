{"version":3,"sources":["TimingAnimation.js"],"names":["AnimatedValue","require","AnimatedValueXY","Animation","shouldUseNativeDriver","_easeInOut","easeInOut","Easing","inOut","ease","TimingAnimation","config","_toValue","toValue","_easing","easing","undefined","_duration","duration","_delay","delay","__iterations","iterations","__isInteraction","isInteraction","_useNativeDriver","frameDuration","frames","dt","push","type","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","__active","_fromValue","_onUpdate","__onEnd","start","__debouncedOnEnd","finished","_startTime","Date","now","__startNativeAnimation","_animationFrame","requestAnimationFrame","bind","_timeout","setTimeout","clearTimeout","global","cancelAnimationFrame","module","exports"],"mappings":"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","file":"TimingAnimation.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule TimingAnimation\n * @flow\n * @format\n */\n'use strict';\n\nconst AnimatedValue = require('../nodes/AnimatedValue');\nconst AnimatedValueXY = require('../nodes/AnimatedValueXY');\nconst Animation = require('./Animation');\n\nconst {shouldUseNativeDriver} = require('../NativeAnimatedHelper');\n\nimport type {AnimationConfig, EndCallback} from './Animation';\n\nexport type TimingAnimationConfig = AnimationConfig & {\n  toValue: number | AnimatedValue | {x: number, y: number} | AnimatedValueXY,\n  easing?: (value: number) => number,\n  duration?: number,\n  delay?: number,\n};\n\nexport type TimingAnimationConfigSingle = AnimationConfig & {\n  toValue: number | AnimatedValue,\n  easing?: (value: number) => number,\n  duration?: number,\n  delay?: number,\n};\n\nlet _easeInOut;\nfunction easeInOut() {\n  if (!_easeInOut) {\n    const Easing = require('Easing');\n    _easeInOut = Easing.inOut(Easing.ease);\n  }\n  return _easeInOut;\n}\n\nclass TimingAnimation extends Animation {\n  _startTime: number;\n  _fromValue: number;\n  _toValue: any;\n  _duration: number;\n  _delay: number;\n  _easing: (value: number) => number;\n  _onUpdate: (value: number) => void;\n  _animationFrame: any;\n  _timeout: any;\n  _useNativeDriver: boolean;\n\n  constructor(config: TimingAnimationConfigSingle) {\n    super();\n    this._toValue = config.toValue;\n    this._easing = config.easing !== undefined ? config.easing : easeInOut();\n    this._duration = config.duration !== undefined ? config.duration : 500;\n    this._delay = config.delay !== undefined ? config.delay : 0;\n    this.__iterations = config.iterations !== undefined ? config.iterations : 1;\n    this.__isInteraction =\n      config.isInteraction !== undefined ? config.isInteraction : true;\n    this._useNativeDriver = shouldUseNativeDriver(config);\n  }\n\n  __getNativeAnimationConfig(): any {\n    const frameDuration = 1000.0 / 60.0;\n    const frames = [];\n    for (let dt = 0.0; dt < this._duration; dt += frameDuration) {\n      frames.push(this._easing(dt / this._duration));\n    }\n    frames.push(this._easing(1));\n    return {\n      type: 'frames',\n      frames,\n      toValue: this._toValue,\n      iterations: this.__iterations,\n    };\n  }\n\n  start(\n    fromValue: number,\n    onUpdate: (value: number) => void,\n    onEnd: ?EndCallback,\n    previousAnimation: ?Animation,\n    animatedValue: AnimatedValue,\n  ): void {\n    this.__active = true;\n    this._fromValue = fromValue;\n    this._onUpdate = onUpdate;\n    this.__onEnd = onEnd;\n\n    const start = () => {\n      // Animations that sometimes have 0 duration and sometimes do not\n      // still need to use the native driver when duration is 0 so as to\n      // not cause intermixed JS and native animations.\n      if (this._duration === 0 && !this._useNativeDriver) {\n        this._onUpdate(this._toValue);\n        this.__debouncedOnEnd({finished: true});\n      } else {\n        this._startTime = Date.now();\n        if (this._useNativeDriver) {\n          this.__startNativeAnimation(animatedValue);\n        } else {\n          this._animationFrame = requestAnimationFrame(\n            this.onUpdate.bind(this),\n          );\n        }\n      }\n    };\n    if (this._delay) {\n      this._timeout = setTimeout(start, this._delay);\n    } else {\n      start();\n    }\n  }\n\n  onUpdate(): void {\n    const now = Date.now();\n    if (now >= this._startTime + this._duration) {\n      if (this._duration === 0) {\n        this._onUpdate(this._toValue);\n      } else {\n        this._onUpdate(\n          this._fromValue + this._easing(1) * (this._toValue - this._fromValue),\n        );\n      }\n      this.__debouncedOnEnd({finished: true});\n      return;\n    }\n\n    this._onUpdate(\n      this._fromValue +\n        this._easing((now - this._startTime) / this._duration) *\n          (this._toValue - this._fromValue),\n    );\n    if (this.__active) {\n      this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n    }\n  }\n\n  stop(): void {\n    super.stop();\n    this.__active = false;\n    clearTimeout(this._timeout);\n    global.cancelAnimationFrame(this._animationFrame);\n    this.__debouncedOnEnd({finished: false});\n  }\n}\n\nmodule.exports = TimingAnimation;\n"]}