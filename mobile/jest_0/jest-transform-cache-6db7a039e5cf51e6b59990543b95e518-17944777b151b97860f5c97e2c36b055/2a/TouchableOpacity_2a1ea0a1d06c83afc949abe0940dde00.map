{"version":3,"sources":["TouchableOpacity.js"],"names":["Animated","require","Easing","NativeMethodsMixin","React","PropTypes","TimerMixin","Touchable","TouchableWithoutFeedback","createReactClass","ensurePositiveDelayProps","flattenStyle","PRESS_RETENTION_OFFSET","top","left","right","bottom","TouchableOpacity","displayName","mixins","Mixin","propTypes","activeOpacity","number","hasTVPreferredFocus","bool","tvParallaxProperties","object","getDefaultProps","getInitialState","touchableGetInitialState","anim","Value","_getChildStyleOpacityWithDefault","componentDidMount","props","UNSAFE_componentWillReceiveProps","nextProps","componentDidUpdate","prevProps","prevState","disabled","_opacityInactive","setOpacityTo","value","duration","timing","state","toValue","easing","inOut","quad","useNativeDriver","start","touchableHandleActivePressIn","e","dispatchConfig","registrationName","_opacityActive","onPressIn","touchableHandleActivePressOut","onPressOut","touchableHandlePress","onPress","touchableHandleLongPress","onLongPress","touchableGetPressRectOffset","pressRetentionOffset","touchableGetHitSlop","hitSlop","touchableGetHighlightDelayMS","delayPressIn","touchableGetLongPressDelayMS","delayLongPress","touchableGetPressOutDelayMS","delayPressOut","childStyle","style","opacity","undefined","render","accessible","accessibilityLabel","accessibilityComponentType","accessibilityTraits","nativeID","testID","onLayout","touchableHandleStartShouldSetResponder","touchableHandleResponderTerminationRequest","touchableHandleResponderGrant","touchableHandleResponderMove","touchableHandleResponderRelease","touchableHandleResponderTerminate","children","renderDebugView","color","module","exports"],"mappings":"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","file":"TouchableOpacity.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule TouchableOpacity\n * @noflow\n */\n'use strict';\n\n// Note (avik): add @flow when Flow supports spread properties in propTypes\n\nconst Animated = require('Animated');\nconst Easing = require('Easing');\nconst NativeMethodsMixin = require('NativeMethodsMixin');\nconst React = require('React');\nconst PropTypes = require('prop-types');\nconst TimerMixin = require('react-timer-mixin');\nconst Touchable = require('Touchable');\nconst TouchableWithoutFeedback = require('TouchableWithoutFeedback');\n\nconst createReactClass = require('create-react-class');\nconst ensurePositiveDelayProps = require('ensurePositiveDelayProps');\nconst flattenStyle = require('flattenStyle');\n\ntype Event = Object;\n\nconst PRESS_RETENTION_OFFSET = {top: 20, left: 20, right: 20, bottom: 30};\n\n/**\n * A wrapper for making views respond properly to touches.\n * On press down, the opacity of the wrapped view is decreased, dimming it.\n *\n * Opacity is controlled by wrapping the children in an Animated.View, which is\n * added to the view hiearchy.  Be aware that this can affect layout.\n *\n * Example:\n *\n * ```\n * renderButton: function() {\n *   return (\n *     <TouchableOpacity onPress={this._onPressButton}>\n *       <Image\n *         style={styles.button}\n *         source={require('./myButton.png')}\n *       />\n *     </TouchableOpacity>\n *   );\n * },\n * ```\n * ### Example\n *\n * ```ReactNativeWebPlayer\n * import React, { Component } from 'react'\n * import {\n *   AppRegistry,\n *   StyleSheet,\n *   TouchableOpacity,\n *   Text,\n *   View,\n * } from 'react-native'\n *\n * class App extends Component {\n *   constructor(props) {\n *     super(props)\n *     this.state = { count: 0 }\n *   }\n *\n *   onPress = () => {\n *     this.setState({\n *       count: this.state.count+1\n *     })\n *   }\n *\n *  render() {\n *    return (\n *      <View style={styles.container}>\n *        <TouchableOpacity\n *          style={styles.button}\n *          onPress={this.onPress}\n *        >\n *          <Text> Touch Here </Text>\n *        </TouchableOpacity>\n *        <View style={[styles.countContainer]}>\n *          <Text style={[styles.countText]}>\n *             { this.state.count !== 0 ? this.state.count: null}\n *           </Text>\n *         </View>\n *       </View>\n *     )\n *   }\n * }\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     justifyContent: 'center',\n *     paddingHorizontal: 10\n *   },\n *   button: {\n *     alignItems: 'center',\n *     backgroundColor: '#DDDDDD',\n *     padding: 10\n *   },\n *   countContainer: {\n *     alignItems: 'center',\n *     padding: 10\n *   },\n *   countText: {\n *     color: '#FF00FF'\n *   }\n * })\n *\n * AppRegistry.registerComponent('App', () => App)\n * ```\n *\n */\nconst TouchableOpacity = createReactClass({\n  displayName: 'TouchableOpacity',\n  mixins: [TimerMixin, Touchable.Mixin, NativeMethodsMixin],\n\n  propTypes: {\n    ...TouchableWithoutFeedback.propTypes,\n    /**\n     * Determines what the opacity of the wrapped view should be when touch is\n     * active. Defaults to 0.2.\n     */\n    activeOpacity: PropTypes.number,\n    /**\n     * TV preferred focus (see documentation for the View component).\n     */\n    hasTVPreferredFocus: PropTypes.bool,\n    /**\n     * Apple TV parallax effects\n     */\n    tvParallaxProperties: PropTypes.object,\n  },\n\n  getDefaultProps: function() {\n    return {\n      activeOpacity: 0.2,\n    };\n  },\n\n  getInitialState: function() {\n    return {\n      ...this.touchableGetInitialState(),\n      anim: new Animated.Value(this._getChildStyleOpacityWithDefault()),\n    };\n  },\n\n  componentDidMount: function() {\n    ensurePositiveDelayProps(this.props);\n  },\n\n  UNSAFE_componentWillReceiveProps: function(nextProps) {\n    ensurePositiveDelayProps(nextProps);\n  },\n\n  componentDidUpdate: function(prevProps, prevState) {\n    if (this.props.disabled !== prevProps.disabled) {\n      this._opacityInactive(250);\n    }\n  },\n\n  /**\n   * Animate the touchable to a new opacity.\n   */\n  setOpacityTo: function(value: number, duration: number) {\n    Animated.timing(\n      this.state.anim,\n      {\n        toValue: value,\n        duration: duration,\n        easing: Easing.inOut(Easing.quad),\n        useNativeDriver: true,\n      }\n    ).start();\n  },\n\n  /**\n   * `Touchable.Mixin` self callbacks. The mixin will invoke these if they are\n   * defined on your component.\n   */\n  touchableHandleActivePressIn: function(e: Event) {\n    if (e.dispatchConfig.registrationName === 'onResponderGrant') {\n      this._opacityActive(0);\n    } else {\n      this._opacityActive(150);\n    }\n    this.props.onPressIn && this.props.onPressIn(e);\n  },\n\n  touchableHandleActivePressOut: function(e: Event) {\n    this._opacityInactive(250);\n    this.props.onPressOut && this.props.onPressOut(e);\n  },\n\n  touchableHandlePress: function(e: Event) {\n    this.props.onPress && this.props.onPress(e);\n  },\n\n  touchableHandleLongPress: function(e: Event) {\n    this.props.onLongPress && this.props.onLongPress(e);\n  },\n\n  touchableGetPressRectOffset: function() {\n    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;\n  },\n\n  touchableGetHitSlop: function() {\n    return this.props.hitSlop;\n  },\n\n  touchableGetHighlightDelayMS: function() {\n    return this.props.delayPressIn || 0;\n  },\n\n  touchableGetLongPressDelayMS: function() {\n    return this.props.delayLongPress === 0 ? 0 :\n      this.props.delayLongPress || 500;\n  },\n\n  touchableGetPressOutDelayMS: function() {\n    return this.props.delayPressOut;\n  },\n\n  _opacityActive: function(duration: number) {\n    this.setOpacityTo(this.props.activeOpacity, duration);\n  },\n\n  _opacityInactive: function(duration: number) {\n    this.setOpacityTo(\n      this._getChildStyleOpacityWithDefault(),\n      duration\n    );\n  },\n\n  _getChildStyleOpacityWithDefault: function() {\n   const childStyle = flattenStyle(this.props.style) || {};\n   return childStyle.opacity == undefined ? 1 : childStyle.opacity;\n },\n\n  render: function() {\n    return (\n      <Animated.View\n        accessible={this.props.accessible !== false}\n        accessibilityLabel={this.props.accessibilityLabel}\n        accessibilityComponentType={this.props.accessibilityComponentType}\n        accessibilityTraits={this.props.accessibilityTraits}\n        style={[this.props.style, {opacity: this.state.anim}]}\n        nativeID={this.props.nativeID}\n        testID={this.props.testID}\n        onLayout={this.props.onLayout}\n        isTVSelectable={true}\n        hasTVPreferredFocus={this.props.hasTVPreferredFocus}\n        tvParallaxProperties={this.props.tvParallaxProperties}\n        hitSlop={this.props.hitSlop}\n        onStartShouldSetResponder={this.touchableHandleStartShouldSetResponder}\n        onResponderTerminationRequest={this.touchableHandleResponderTerminationRequest}\n        onResponderGrant={this.touchableHandleResponderGrant}\n        onResponderMove={this.touchableHandleResponderMove}\n        onResponderRelease={this.touchableHandleResponderRelease}\n        onResponderTerminate={this.touchableHandleResponderTerminate}>\n        {this.props.children}\n        {Touchable.renderDebugView({color: 'cyan', hitSlop: this.props.hitSlop})}\n      </Animated.View>\n    );\n  },\n});\n\nmodule.exports = TouchableOpacity;\n"]}