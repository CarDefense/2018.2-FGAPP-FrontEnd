{"version":3,"sources":["VirtualizedList.js"],"names":["Batchinator","require","FillRateHelper","PropTypes","React","ReactNative","RefreshControl","ScrollView","StyleSheet","UIManager","View","ViewabilityHelper","flattenStyle","infoLog","invariant","warning","computeWindowedRenderLimits","_usedIndexForKey","VirtualizedList","params","animated","veryLast","props","getItemCount","data","frame","_getFrameMetricsApprox","offset","Math","max","length","_footerLength","_scrollMetrics","visibleLength","_scrollRef","scrollTo","horizontal","x","y","getItemLayout","onScrollToIndexFailed","index","viewOffset","viewPosition","_highestMeasuredFrameIndex","averageItemLength","_averageCellLength","highestMeasuredFrameIndex","item","getItem","itemCount","scrollToIndex","_nestedChildLists","forEach","childList","ref","recordInteraction","_viewabilityTuples","t","viewabilityHelper","_updateViewableItems","flashScrollIndicators","getScrollResponder","getScrollableNode","findNodeHandle","setNativeProps","virtualizedList","getScrollMetrics","_getScrollMetrics","getOutermostParentListRef","_getOutermostParentListRef","getNestedChildState","_getNestedChildState","registerAsNestedChild","_registerAsNestedChild","unregisterAsNestedChild","_unregisterAsNestedChild","context","virtualizedCell","cellKey","_hasMore","onScroll","__isNative","windowSize","_fillRateHelper","_getFrameMetrics","_updateCellsToRenderBatcher","_updateCellsToRender","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","viewabilityConfig","onViewableItemsChanged","push","initialState","first","initialScrollIndex","last","min","initialNumToRender","_isNestedWithSameOrientation","storedState","listKey","_getCellKey","state","_frames","frames","key","dispose","abort","tuple","deactivateAndFlush","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","CellRendererComponent","ItemSeparatorComponent","keyExtractor","stickyOffset","ListHeaderComponent","end","prevCellKey","ii","_indicesToKeys","set","has","undefined","_onUpdateSeparators","_onCellLayout","e","_onCellUnmount","_cellRefs","disableVirtualization","nestedContext","__DEV__","flatStyles","contentContainerStyle","flexWrap","ListEmptyComponent","ListFooterComponent","isVirtualizationDisabled","_isVirtualizationDisabled","inverted","styles","horizontallyInverted","verticallyInverted","Set","element","isValidElement","_onLayoutHeader","spacerKey","lastInitialIndex","_pushCells","firstAfterInitial","insertedStickySpacer","size","initBlock","stickyBlock","leadSpace","trailSpace","firstSpace","_hasWarned","keys","console","warn","lastFrame","endFrame","tailSpacerLength","_onLayoutEmpty","_onLayoutFooter","scrollProps","onContentSizeChange","_onContentSizeChange","onLayout","_onLayout","_onScroll","onScrollBeginDrag","_onScrollBeginDrag","onScrollEndDrag","_onScrollEndDrag","onMomentumScrollEnd","_onMomentumScrollEnd","scrollEventThrottle","invertStickyHeaders","style","ret","cloneElement","renderScrollComponent","_defaultRenderScrollComponent","_captureScrollRef","debug","flex","_renderDebugOverlay","prevProps","extraData","_hasDataChangedSinceEndReached","resetViewableIndices","_scheduleCellsToRenderUpdate","computeBlankness","layout","nativeEvent","next","_selectOffset","_selectLength","inLayout","curr","_totalCellLength","_totalCellsMeasured","_computeBlankness","measureLayout","width","height","_offsetFromParentVirtualizedList","contentLength","scrollMetrics","_convertParentScrollMetrics","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","baseStyle","position","top","right","bottom","borderColor","borderWidth","f","left","backgroundColor","metrics","onEndReached","onEndReachedThreshold","distanceFromEnd","_sentEndForContentLength","velocity","hiPri","distTop","distBottom","scrollingThreshold","schedule","onUpdate","_createViewToken","newProps","prevState","maxToRenderPerBatch","PureComponent","defaultProps","String","contextTypes","shape","string","func","bool","childContextTypes","existingChildData","get","childListsInCell","_cellKeysToChildListKeys","add","_hasInteracted","updateSeparatorProps","Map","_headerLength","_hasDoneInitialScroll","_prevParentOffset","dOffset","dt","timestamp","onRefresh","refreshing","JSON","stringify","progressViewOffset","_measureLayoutRelativeToContainingList","_maybeCallOnEndReached","timeStamp","layoutMeasurement","contentSize","contentOffset","perf","prevDt","activate","setState","newState","renderAhead","newFirst","newLast","cellKeyForIndex","childListKeys","someChildHasMore","childKey","hasMore","isViewable","frameType","number","isRequired","checkPropTypes","CellRenderer","separatorProps","highlighted","leadingItem","_separators","highlight","onUpdateSeparators","unhighlight","updateProps","select","onUnmount","fillRateHelper","parentProps","renderItem","separators","enabled","itemSeparator","cellStyle","flexDirection","Component","VirtualizedCellWrapper","children","create","transform","scaleY","scaleX","module","exports"],"mappings":"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","file":"VirtualizedList.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule VirtualizedList\n * @flow\n * @format\n */\n'use strict';\n\nconst Batchinator = require('Batchinator');\nconst FillRateHelper = require('FillRateHelper');\nconst PropTypes = require('prop-types');\nconst React = require('React');\nconst ReactNative = require('ReactNative');\nconst RefreshControl = require('RefreshControl');\nconst ScrollView = require('ScrollView');\nconst StyleSheet = require('StyleSheet');\nconst UIManager = require('UIManager');\nconst View = require('View');\nconst ViewabilityHelper = require('ViewabilityHelper');\n\nconst flattenStyle = require('flattenStyle');\nconst infoLog = require('infoLog');\nconst invariant = require('fbjs/lib/invariant');\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst warning = require('fbjs/lib/warning');\n\nconst {computeWindowedRenderLimits} = require('VirtualizeUtils');\n\nimport type {DangerouslyImpreciseStyleProp} from 'StyleSheet';\nimport type {\n  ViewabilityConfig,\n  ViewToken,\n  ViewabilityConfigCallbackPair,\n} from 'ViewabilityHelper';\n\ntype Item = any;\n\nexport type renderItemType = (info: any) => ?React.Element<any>;\n\ntype ViewabilityHelperCallbackTuple = {\n  viewabilityHelper: ViewabilityHelper,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n  }) => void,\n};\n\ntype RequiredProps = {\n  // TODO: Conflicts with the optional `renderItem` in\n  // `VirtualizedSectionList`'s props.\n  renderItem: $FlowFixMe<renderItemType>,\n  /**\n   * The default accessor functions assume this is an Array<{key: string}> but you can override\n   * getItem, getItemCount, and keyExtractor to handle any type of index-based data.\n   */\n  data?: any,\n  /**\n   * A generic accessor for extracting an item from any sort of data blob.\n   */\n  getItem: (data: any, index: number) => ?Item,\n  /**\n   * Determines how many items are in the data blob.\n   */\n  getItemCount: (data: any) => number,\n};\ntype OptionalProps = {\n  /**\n   * `debug` will turn on extra logging and visual overlays to aid with debugging both usage and\n   * implementation, but with a significant perf hit.\n   */\n  debug?: ?boolean,\n  /**\n   * DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully\n   * unmounts react instances that are outside of the render window. You should only need to disable\n   * this for debugging purposes.\n   */\n  disableVirtualization: boolean,\n  /**\n   * A marker property for telling the list to re-render (since it implements `PureComponent`). If\n   * any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the\n   * `data` prop, stick it here and treat it immutably.\n   */\n  extraData?: any,\n  getItemLayout?: (\n    data: any,\n    index: number,\n  ) => {length: number, offset: number, index: number}, // e.g. height, y\n  horizontal?: ?boolean,\n  /**\n   * How many items to render in the initial batch. This should be enough to fill the screen but not\n   * much more. Note these items will never be unmounted as part of the windowed rendering in order\n   * to improve perceived performance of scroll-to-top actions.\n   */\n  initialNumToRender: number,\n  /**\n   * Instead of starting at the top with the first item, start at `initialScrollIndex`. This\n   * disables the \"scroll to top\" optimization that keeps the first `initialNumToRender` items\n   * always rendered and immediately renders the items starting at this initial index. Requires\n   * `getItemLayout` to be implemented.\n   */\n  initialScrollIndex?: ?number,\n  /**\n   * Reverses the direction of scroll. Uses scale transforms of -1.\n   */\n  inverted?: ?boolean,\n  keyExtractor: (item: Item, index: number) => string,\n  /**\n   * Each cell is rendered using this element. Can be a React Component Class,\n   * or a render function. Defaults to using View.\n   */\n  CellRendererComponent?: ?React.ComponentType<any>,\n  /**\n   * Rendered when the list is empty. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListEmptyComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered at the bottom of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListFooterComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered at the top of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListHeaderComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * A unique identifier for this list. If there are multiple VirtualizedLists at the same level of\n   * nesting within another VirtualizedList, this key is necessary for virtualization to\n   * work properly.\n   */\n  listKey?: string,\n  /**\n   * The maximum number of items to render in each incremental render batch. The more rendered at\n   * once, the better the fill rate, but responsiveness my suffer because rendering content may\n   * interfere with responding to button taps or other interactions.\n   */\n  maxToRenderPerBatch: number,\n  onEndReached?: ?(info: {distanceFromEnd: number}) => void,\n  onEndReachedThreshold?: ?number, // units of visible length\n  onLayout?: ?Function,\n  /**\n   * If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality. Make\n   * sure to also set the `refreshing` prop correctly.\n   */\n  onRefresh?: ?Function,\n  /**\n   * Used to handle failures when scrolling to an index that has not been measured yet. Recommended\n   * action is to either compute your own offset and `scrollTo` it, or scroll as far as possible and\n   * then try again after more items have been rendered.\n   */\n  onScrollToIndexFailed?: ?(info: {\n    index: number,\n    highestMeasuredFrameIndex: number,\n    averageItemLength: number,\n  }) => void,\n  /**\n   * Called when the viewability of rows changes, as defined by the\n   * `viewabilityConfig` prop.\n   */\n  onViewableItemsChanged?: ?(info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n  }) => void,\n  /**\n   * Set this when offset is needed for the loading indicator to show correctly.\n   * @platform android\n   */\n  progressViewOffset?: number,\n  /**\n   * Set this true while waiting for new data from a refresh.\n   */\n  refreshing?: ?boolean,\n  /**\n   * Note: may have bugs (missing content) in some circumstances - use at your own risk.\n   *\n   * This may improve scroll performance for large lists.\n   */\n  removeClippedSubviews?: boolean,\n  /**\n   * Render a custom scroll component, e.g. with a differently styled `RefreshControl`.\n   */\n  renderScrollComponent?: (props: Object) => React.Element<any>,\n  /**\n   * Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off\n   * screen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`.\n   */\n  updateCellsBatchingPeriod: number,\n  viewabilityConfig?: ViewabilityConfig,\n  /**\n   * List of ViewabilityConfig/onViewableItemsChanged pairs. A specific onViewableItemsChanged\n   * will be called when its corresponding ViewabilityConfig's conditions are met.\n   */\n  viewabilityConfigCallbackPairs?: Array<ViewabilityConfigCallbackPair>,\n  /**\n   * Determines the maximum number of items rendered outside of the visible area, in units of\n   * visible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will\n   * render the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing\n   * this number will reduce memory consumption and may improve performance, but will increase the\n   * chance that fast scrolling may reveal momentary blank areas of unrendered content.\n   */\n  windowSize: number,\n};\n/* $FlowFixMe - this Props seems to be missing a bunch of stuff. Remove this\n * comment to see the errors */\nexport type Props = RequiredProps & OptionalProps;\n\nlet _usedIndexForKey = false;\n\ntype Frame = {\n  offset: number,\n  length: number,\n  index: number,\n  inLayout: boolean,\n};\n\ntype ChildListState = {\n  first: number,\n  last: number,\n  frames: {[key: number]: Frame},\n};\n\ntype State = {first: number, last: number};\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](/react-native/docs/flatlist.html)\n * and [`<SectionList>`](/react-native/docs/sectionlist.html) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n */\nclass VirtualizedList extends React.PureComponent<Props, State> {\n  props: Props;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params?: ?{animated?: ?boolean}) {\n    const animated = params ? params.animated : true;\n    const veryLast = this.props.getItemCount(this.props.data) - 1;\n    const frame = this._getFrameMetricsApprox(veryLast);\n    const offset = Math.max(\n      0,\n      frame.offset +\n        frame.length +\n        this._footerLength -\n        this._scrollMetrics.visibleLength,\n    );\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.scrollTo(\n      /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This\n       * comment suppresses an error when upgrading Flow's support for React.\n       * To see the error delete this comment and run Flow. */\n      this.props.horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n  }) {\n    const {\n      data,\n      horizontal,\n      getItemCount,\n      getItemLayout,\n      onScrollToIndexFailed,\n    } = this.props;\n    const {animated, index, viewOffset, viewPosition} = params;\n    invariant(\n      index >= 0 && index < getItemCount(data),\n      `scrollToIndex out of range: ${index} vs ${getItemCount(data) - 1}`,\n    );\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(\n        !!onScrollToIndexFailed,\n        'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' +\n          'otherwise there is no way to know the location of offscreen indices or handle failures.',\n      );\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index,\n      });\n      return;\n    }\n    const frame = this._getFrameMetricsApprox(index);\n    const offset =\n      Math.max(\n        0,\n        frame.offset -\n          (viewPosition || 0) *\n            (this._scrollMetrics.visibleLength - frame.length),\n      ) - (viewOffset || 0);\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.scrollTo(\n      /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This\n       * comment suppresses an error when upgrading Flow's support for React.\n       * To see the error delete this comment and run Flow. */\n      horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: Item,\n    viewPosition?: number,\n  }) {\n    const {item} = params;\n    const {data, getItem, getItemCount} = this.props;\n    const itemCount = getItemCount(data);\n    for (let index = 0; index < itemCount; index++) {\n      if (getItem(data, index) === item) {\n        this.scrollToIndex({...params, index});\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number}) {\n    const {animated, offset} = params;\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.scrollTo(\n      /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This\n       * comment suppresses an error when upgrading Flow's support for React.\n       * To see the error delete this comment and run Flow. */\n      this.props.horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props.data);\n  }\n\n  flashScrollIndicators() {\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder() {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return ReactNative.findNodeHandle(this._scrollRef);\n    }\n  }\n\n  setNativeProps(props: Object) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  static defaultProps = {\n    disableVirtualization: false,\n    horizontal: false,\n    initialNumToRender: 10,\n    keyExtractor: (item: Item, index: number) => {\n      if (item.key != null) {\n        return item.key;\n      }\n      _usedIndexForKey = true;\n      return String(index);\n    },\n    maxToRenderPerBatch: 10,\n    onEndReachedThreshold: 2, // multiples of length\n    scrollEventThrottle: 50,\n    updateCellsBatchingPeriod: 50,\n    windowSize: 21, // multiples of length\n  };\n\n  static contextTypes = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n    virtualizedList: PropTypes.shape({\n      getScrollMetrics: PropTypes.func,\n      horizontal: PropTypes.bool,\n      getOutermostParentListRef: PropTypes.func,\n      getNestedChildState: PropTypes.func,\n      registerAsNestedChild: PropTypes.func,\n      unregisterAsNestedChild: PropTypes.func,\n    }),\n  };\n\n  static childContextTypes = {\n    virtualizedList: PropTypes.shape({\n      getScrollMetrics: PropTypes.func,\n      horizontal: PropTypes.bool,\n      getOutermostParentListRef: PropTypes.func,\n      getNestedChildState: PropTypes.func,\n      registerAsNestedChild: PropTypes.func,\n      unregisterAsNestedChild: PropTypes.func,\n    }),\n  };\n\n  getChildContext() {\n    return {\n      virtualizedList: {\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: this.props.horizontal,\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        getNestedChildState: this._getNestedChildState,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild,\n      },\n    };\n  }\n\n  _getCellKey(): string {\n    return (\n      (this.context.virtualizedCell && this.context.virtualizedCell.cellKey) ||\n      'rootList'\n    );\n  }\n\n  _getScrollMetrics = () => {\n    return this._scrollMetrics;\n  };\n\n  hasMore(): boolean {\n    return this._hasMore;\n  }\n\n  _getOutermostParentListRef = () => {\n    if (this._isNestedWithSameOrientation()) {\n      return this.context.virtualizedList.getOutermostParentListRef();\n    } else {\n      return this;\n    }\n  };\n\n  _getNestedChildState = (key: string): ?ChildListState => {\n    const existingChildData = this._nestedChildLists.get(key);\n    return existingChildData && existingChildData.state;\n  };\n\n  _registerAsNestedChild = (childList: {\n    cellKey: string,\n    key: string,\n    ref: VirtualizedList,\n  }): ?ChildListState => {\n    // Register the mapping between this child key and the cellKey for its cell\n    const childListsInCell =\n      this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n    childListsInCell.add(childList.key);\n    this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n\n    const existingChildData = this._nestedChildLists.get(childList.key);\n    invariant(\n      !(existingChildData && existingChildData.ref !== null),\n      'A VirtualizedList contains a cell which itself contains ' +\n        'more than one VirtualizedList of the same orientation as the parent ' +\n        'list. You must pass a unique listKey prop to each sibling list.',\n    );\n    this._nestedChildLists.set(childList.key, {\n      ref: childList.ref,\n      state: null,\n    });\n\n    if (this._hasInteracted) {\n      childList.ref.recordInteraction();\n    }\n  };\n\n  _unregisterAsNestedChild = (childList: {\n    key: string,\n    state: ChildListState,\n  }): void => {\n    this._nestedChildLists.set(childList.key, {\n      ref: null,\n      state: childList.state,\n    });\n  };\n\n  state: State;\n\n  constructor(props: Props, context: Object) {\n    super(props, context);\n    invariant(\n      !props.onScroll || !props.onScroll.__isNative,\n      'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' +\n        'to support native onScroll events with useNativeDriver',\n    );\n\n    invariant(\n      props.windowSize > 0,\n      'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.',\n    );\n\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(\n      this._updateCellsToRender,\n      this.props.updateCellsBatchingPeriod,\n    );\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged,\n        }),\n      );\n    } else if (this.props.onViewableItemsChanged) {\n      this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(this.props.viewabilityConfig),\n        onViewableItemsChanged: this.props.onViewableItemsChanged,\n      });\n    }\n\n    let initialState = {\n      first: this.props.initialScrollIndex || 0,\n      last:\n        Math.min(\n          this.props.getItemCount(this.props.data),\n          (this.props.initialScrollIndex || 0) + this.props.initialNumToRender,\n        ) - 1,\n    };\n\n    if (this._isNestedWithSameOrientation()) {\n      const storedState = this.context.virtualizedList.getNestedChildState(\n        this.props.listKey || this._getCellKey(),\n      );\n      if (storedState) {\n        initialState = storedState;\n        this.state = storedState;\n        this._frames = storedState.frames;\n      }\n    }\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.virtualizedList.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this.props.listKey || this._getCellKey(),\n        ref: this,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.virtualizedList.unregisterAsNestedChild({\n        key: this.props.listKey || this._getCellKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames,\n        },\n      });\n    }\n    this._updateViewableItems(null);\n    this._updateCellsToRenderBatcher.dispose({abort: true});\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n  }\n\n  static getDerivedStateFromProps(newProps: Props, prevState: State) {\n    const {data, extraData, getItemCount, maxToRenderPerBatch} = newProps;\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    return {\n      first: Math.max(\n        0,\n        Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch),\n      ),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1)),\n    };\n  }\n\n  _pushCells(\n    cells: Array<Object>,\n    stickyHeaderIndices: Array<number>,\n    stickyIndicesFromProps: Set<number>,\n    first: number,\n    last: number,\n    inversionStyle: ?DangerouslyImpreciseStyleProp,\n  ) {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      data,\n      getItem,\n      getItemCount,\n      horizontal,\n      keyExtractor,\n    } = this.props;\n    const stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    const end = getItemCount(data) - 1;\n    let prevCellKey;\n    last = Math.min(end, last);\n    for (let ii = first; ii <= last; ii++) {\n      const item = getItem(data, ii);\n      const key = keyExtractor(item, ii);\n      this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n      cells.push(\n        <CellRenderer\n          CellRendererComponent={CellRendererComponent}\n          ItemSeparatorComponent={ii < end ? ItemSeparatorComponent : undefined}\n          cellKey={key}\n          fillRateHelper={this._fillRateHelper}\n          horizontal={horizontal}\n          index={ii}\n          inversionStyle={inversionStyle}\n          item={item}\n          key={key}\n          prevCellKey={prevCellKey}\n          onUpdateSeparators={this._onUpdateSeparators}\n          onLayout={e => this._onCellLayout(e, key, ii)}\n          onUnmount={this._onCellUnmount}\n          parentProps={this.props}\n          ref={ref => {\n            this._cellRefs[key] = ref;\n          }}\n        />,\n      );\n      prevCellKey = key;\n    }\n  }\n\n  _onUpdateSeparators = (keys: Array<?string>, newProps: Object) => {\n    keys.forEach(key => {\n      const ref = key != null && this._cellRefs[key];\n      ref && ref.updateSeparatorProps(newProps);\n    });\n  };\n\n  _isVirtualizationDisabled(): boolean {\n    return this.props.disableVirtualization;\n  }\n\n  _isNestedWithSameOrientation(): boolean {\n    const nestedContext = this.context.virtualizedList;\n    return !!(\n      nestedContext && !!nestedContext.horizontal === !!this.props.horizontal\n    );\n  }\n\n  render() {\n    if (__DEV__) {\n      const flatStyles = flattenStyle(this.props.contentContainerStyle);\n      warning(\n        flatStyles == null || flatStyles.flexWrap !== 'wrap',\n        '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' +\n          'Consider using `numColumns` with `FlatList` instead.',\n      );\n    }\n    const {\n      ListEmptyComponent,\n      ListFooterComponent,\n      ListHeaderComponent,\n    } = this.props;\n    const {data, horizontal} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    const inversionStyle = this.props.inverted\n      ? this.props.horizontal\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : null;\n    const cells = [];\n    const stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    const stickyHeaderIndices = [];\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      const element = React.isValidElement(ListHeaderComponent) ? (\n        ListHeaderComponent\n      ) : (\n        // $FlowFixMe\n        <ListHeaderComponent />\n      );\n      cells.push(\n        <VirtualizedCellWrapper\n          cellKey={this._getCellKey() + '-header'}\n          key=\"$header\">\n          <View onLayout={this._onLayoutHeader} style={inversionStyle}>\n            {/*\n              Flow doesn't know this is a React.Element and not a React.Component\n              $FlowFixMe https://fburl.com/b9xmtm09\n            */}\n            {element}\n          </View>\n        </VirtualizedCellWrapper>,\n      );\n    }\n    const itemCount = this.props.getItemCount(data);\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      const spacerKey = !horizontal ? 'height' : 'width';\n      const lastInitialIndex = this.props.initialScrollIndex\n        ? -1\n        : this.props.initialNumToRender - 1;\n      const {first, last} = this.state;\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        0,\n        lastInitialIndex,\n        inversionStyle,\n      );\n      const firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        let insertedStickySpacer = false;\n        if (stickyIndicesFromProps.size > 0) {\n          const stickyOffset = ListHeaderComponent ? 1 : 0;\n          // See if there are any sticky headers in the virtualized space that we need to render.\n          for (let ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n              const stickyBlock = this._getFrameMetricsApprox(ii);\n              const leadSpace =\n                stickyBlock.offset - (initBlock.offset + initBlock.length);\n              cells.push(\n                <View key=\"$sticky_lead\" style={{[spacerKey]: leadSpace}} />,\n              );\n              this._pushCells(\n                cells,\n                stickyHeaderIndices,\n                stickyIndicesFromProps,\n                ii,\n                ii,\n                inversionStyle,\n              );\n              const trailSpace =\n                this._getFrameMetricsApprox(first).offset -\n                (stickyBlock.offset + stickyBlock.length);\n              cells.push(\n                <View key=\"$sticky_trail\" style={{[spacerKey]: trailSpace}} />,\n              );\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n        if (!insertedStickySpacer) {\n          const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n          const firstSpace =\n            this._getFrameMetricsApprox(first).offset -\n            (initBlock.offset + initBlock.length);\n          cells.push(\n            <View key=\"$lead_spacer\" style={{[spacerKey]: firstSpace}} />,\n          );\n        }\n      }\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        firstAfterInitial,\n        last,\n        inversionStyle,\n      );\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn(\n          'VirtualizedList: missing keys for items, make sure to specify a key property on each ' +\n            'item or provide a custom keyExtractor.',\n        );\n        this._hasWarned.keys = true;\n      }\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        const lastFrame = this._getFrameMetricsApprox(last);\n        // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n        const end = this.props.getItemLayout\n          ? itemCount - 1\n          : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n        const endFrame = this._getFrameMetricsApprox(end);\n        const tailSpacerLength =\n          endFrame.offset +\n          endFrame.length -\n          (lastFrame.offset + lastFrame.length);\n        cells.push(\n          <View key=\"$tail_spacer\" style={{[spacerKey]: tailSpacerLength}} />,\n        );\n      }\n    } else if (ListEmptyComponent) {\n      const element = React.isValidElement(ListEmptyComponent) ? (\n        ListEmptyComponent\n      ) : (\n        // $FlowFixMe\n        <ListEmptyComponent />\n      );\n      cells.push(\n        <View\n          key=\"$empty\"\n          onLayout={this._onLayoutEmpty}\n          style={inversionStyle}>\n          {/*\n            Flow doesn't know this is a React.Element and not a React.Component\n            $FlowFixMe https://fburl.com/b9xmtm09\n          */}\n          {element}\n        </View>,\n      );\n    }\n    if (ListFooterComponent) {\n      const element = React.isValidElement(ListFooterComponent) ? (\n        ListFooterComponent\n      ) : (\n        // $FlowFixMe\n        <ListFooterComponent />\n      );\n      cells.push(\n        <VirtualizedCellWrapper\n          cellKey={this._getCellKey() + '-footer'}\n          key=\"$footer\">\n          <View onLayout={this._onLayoutFooter} style={inversionStyle}>\n            {/*\n              Flow doesn't know this is a React.Element and not a React.Component\n              $FlowFixMe https://fburl.com/b9xmtm09\n            */}\n            {element}\n          </View>\n        </VirtualizedCellWrapper>,\n      );\n    }\n    const scrollProps = {\n      ...this.props,\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: this.props.scrollEventThrottle, // TODO: Android support\n      invertStickyHeaders: this.props.invertStickyHeaders !== undefined\n        ? this.props.invertStickyHeaders\n        : this.props.inverted,\t\n      stickyHeaderIndices,\n    };\n    if (inversionStyle) {\n      scrollProps.style = [inversionStyle, this.props.style];\n    }\n\n    this._hasMore =\n      this.state.last < this.props.getItemCount(this.props.data) - 1;\n\n    const ret = React.cloneElement(\n      (this.props.renderScrollComponent || this._defaultRenderScrollComponent)(\n        scrollProps,\n      ),\n      {\n        ref: this._captureScrollRef,\n      },\n      cells,\n    );\n    if (this.props.debug) {\n      return (\n        <View style={{flex: 1}}>\n          {ret}\n          {this._renderDebugOverlay()}\n        </View>\n      );\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {data, extraData} = this.props;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      this._hasDataChangedSinceEndReached = true;\n\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    this._scheduleCellsToRenderUpdate();\n  }\n\n  _averageCellLength = 0;\n  // Maps a cell key to the set of keys for all outermost child lists within that cell\n  _cellKeysToChildListKeys: Map<string, Set<string>> = new Map();\n  _cellRefs = {};\n  _fillRateHelper: FillRateHelper;\n  _frames = {};\n  _footerLength = 0;\n  _hasDataChangedSinceEndReached = true;\n  _hasInteracted = false;\n  _hasMore = false;\n  _hasWarned = {};\n  _highestMeasuredFrameIndex = 0;\n  _headerLength = 0;\n  _indicesToKeys: Map<number, string> = new Map();\n  _hasDoneInitialScroll = false;\n  _nestedChildLists: Map<\n    string,\n    {ref: ?VirtualizedList, state: ?ChildListState},\n  > = new Map();\n  _offsetFromParentVirtualizedList: number = 0;\n  _prevParentOffset: number = 0;\n  _scrollMetrics = {\n    contentLength: 0,\n    dOffset: 0,\n    dt: 10,\n    offset: 0,\n    timestamp: 0,\n    velocity: 0,\n    visibleLength: 0,\n  };\n  _scrollRef: ?React.ElementRef<any> = null;\n  _sentEndForContentLength = 0;\n  _totalCellLength = 0;\n  _totalCellsMeasured = 0;\n  _updateCellsToRenderBatcher: Batchinator;\n  _viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];\n\n  _captureScrollRef = ref => {\n    this._scrollRef = ref;\n  };\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(\n      this.props,\n      this.state,\n      this._scrollMetrics,\n    );\n  }\n\n  _defaultRenderScrollComponent = props => {\n    if (this._isNestedWithSameOrientation()) {\n      return <View {...props} />;\n    } else if (props.onRefresh) {\n      invariant(\n        typeof props.refreshing === 'boolean',\n        '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n          JSON.stringify(props.refreshing) +\n          '`',\n      );\n      return (\n        <ScrollView\n          {...props}\n          refreshControl={\n            /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This\n             * comment suppresses an error when upgrading Flow's support for\n             * React. To see the error delete this comment and run Flow. */\n            <RefreshControl\n              refreshing={props.refreshing}\n              onRefresh={props.onRefresh}\n              progressViewOffset={props.progressViewOffset}\n            />\n          }\n        />\n      );\n    } else {\n      return <ScrollView {...props} />;\n    }\n  };\n\n  _onCellLayout(e, cellKey, index) {\n    const layout = e.nativeEvent.layout;\n    const next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true,\n    };\n    const curr = this._frames[cellKey];\n    if (\n      !curr ||\n      next.offset !== curr.offset ||\n      next.length !== curr.length ||\n      index !== curr.index\n    ) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength =\n        this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(\n        this._highestMeasuredFrameIndex,\n        index,\n      );\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n    this._computeBlankness();\n  }\n\n  _onCellUnmount = (cellKey: string) => {\n    const curr = this._frames[cellKey];\n    if (curr) {\n      this._frames[cellKey] = {...curr, inLayout: false};\n    }\n  };\n\n  _measureLayoutRelativeToContainingList(): void {\n    UIManager.measureLayout(\n      ReactNative.findNodeHandle(this),\n      ReactNative.findNodeHandle(\n        this.context.virtualizedList.getOutermostParentListRef(),\n      ),\n      error => {\n        console.warn(\n          \"VirtualizedList: Encountered an error while measuring a list's\" +\n            ' offset from its containing VirtualizedList.',\n        );\n      },\n      (x, y, width, height) => {\n        this._offsetFromParentVirtualizedList = this._selectOffset({x, y});\n        this._scrollMetrics.contentLength = this._selectLength({width, height});\n\n        const scrollMetrics = this._convertParentScrollMetrics(\n          this.context.virtualizedList.getScrollMetrics(),\n        );\n        this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n        this._scrollMetrics.offset = scrollMetrics.offset;\n      },\n    );\n  }\n\n  _onLayout = (e: Object) => {\n    if (this._isNestedWithSameOrientation()) {\n      // Need to adjust our scroll metrics to be relative to our containing\n      // VirtualizedList before we can make claims about list item viewability\n      this._measureLayoutRelativeToContainingList();\n    } else {\n      this._scrollMetrics.visibleLength = this._selectLength(\n        e.nativeEvent.layout,\n      );\n    }\n    this.props.onLayout && this.props.onLayout(e);\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  _onLayoutEmpty = e => {\n    this.props.onLayout && this.props.onLayout(e);\n  };\n\n  _onLayoutFooter = e => {\n    this._footerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _onLayoutHeader = e => {\n    this._headerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _renderDebugOverlay() {\n    const normalize =\n      this._scrollMetrics.visibleLength / this._scrollMetrics.contentLength;\n    const framesInLayout = [];\n    const itemCount = this.props.getItemCount(this.props.data);\n    for (let ii = 0; ii < itemCount; ii++) {\n      const frame = this._getFrameMetricsApprox(ii);\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    const windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n    const frameLast = this._getFrameMetricsApprox(this.state.last);\n    const windowLen = frameLast.offset + frameLast.length - windowTop;\n    const visTop = this._scrollMetrics.offset;\n    const visLen = this._scrollMetrics.visibleLength;\n    const baseStyle = {position: 'absolute', top: 0, right: 0};\n    return (\n      <View\n        style={{\n          ...baseStyle,\n          bottom: 0,\n          width: 20,\n          borderColor: 'blue',\n          borderWidth: 1,\n        }}>\n        {framesInLayout.map((f, ii) => (\n          <View\n            key={'f' + ii}\n            style={{\n              ...baseStyle,\n              left: 0,\n              top: f.offset * normalize,\n              height: f.length * normalize,\n              backgroundColor: 'orange',\n            }}\n          />\n        ))}\n        <View\n          style={{\n            ...baseStyle,\n            left: 0,\n            top: windowTop * normalize,\n            height: windowLen * normalize,\n            borderColor: 'green',\n            borderWidth: 2,\n          }}\n        />\n        <View\n          style={{\n            ...baseStyle,\n            left: 0,\n            top: visTop * normalize,\n            height: visLen * normalize,\n            borderColor: 'red',\n            borderWidth: 2,\n          }}\n        />\n      </View>\n    );\n  }\n\n  _selectLength(metrics: $ReadOnly<{height: number, width: number}>): number {\n    return !this.props.horizontal ? metrics.height : metrics.width;\n  }\n\n  _selectOffset(metrics: $ReadOnly<{x: number, y: number}>): number {\n    return !this.props.horizontal ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEndReached() {\n    const {\n      data,\n      getItemCount,\n      onEndReached,\n      onEndReachedThreshold,\n    } = this.props;\n    const {contentLength, visibleLength, offset} = this._scrollMetrics;\n    const distanceFromEnd = contentLength - visibleLength - offset;\n    if (\n      onEndReached &&\n      this.state.last === getItemCount(data) - 1 &&\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete this\n       * comment and run Flow. */\n      distanceFromEnd < onEndReachedThreshold * visibleLength &&\n      (this._hasDataChangedSinceEndReached ||\n        this._scrollMetrics.contentLength !== this._sentEndForContentLength)\n    ) {\n      // Only call onEndReached once for a given dataset + content length.\n      this._hasDataChangedSinceEndReached = false;\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({distanceFromEnd});\n    }\n  }\n\n  _onContentSizeChange = (width: number, height: number) => {\n    if (\n      width > 0 &&\n      height > 0 &&\n      this.props.initialScrollIndex != null &&\n      this.props.initialScrollIndex > 0 &&\n      !this._hasDoneInitialScroll\n    ) {\n      this.scrollToIndex({\n        animated: false,\n        index: this.props.initialScrollIndex,\n      });\n      this._hasDoneInitialScroll = true;\n    }\n    if (this.props.onContentSizeChange) {\n      this.props.onContentSizeChange(width, height);\n    }\n    this._scrollMetrics.contentLength = this._selectLength({height, width});\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  /* Translates metrics from a scroll event in a parent VirtualizedList into\n   * coordinates relative to the child list.\n   */\n  _convertParentScrollMetrics = (metrics: {\n    visibleLength: number,\n    offset: number,\n  }) => {\n    // Offset of the top of the nested list relative to the top of its parent's viewport\n    const offset = metrics.offset - this._offsetFromParentVirtualizedList;\n    // Child's visible length is the same as its parent's\n    const visibleLength = metrics.visibleLength;\n    const dOffset = offset - this._scrollMetrics.offset;\n    const contentLength = this._scrollMetrics.contentLength;\n\n    return {\n      visibleLength,\n      contentLength,\n      offset,\n      dOffset,\n    };\n  };\n\n  _onScroll = (e: Object) => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScroll(e);\n    });\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n    const timestamp = e.timeStamp;\n    let visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n    let contentLength = this._selectLength(e.nativeEvent.contentSize);\n    let offset = this._selectOffset(e.nativeEvent.contentOffset);\n    let dOffset = offset - this._scrollMetrics.offset;\n\n    if (this._isNestedWithSameOrientation()) {\n      if (this._scrollMetrics.contentLength === 0) {\n        // Ignore scroll events until onLayout has been called and we\n        // know our offset from our offset from our parent\n        return;\n      }\n      ({\n        visibleLength,\n        contentLength,\n        offset,\n        dOffset,\n      } = this._convertParentScrollMetrics({\n        visibleLength,\n        offset,\n      }));\n    }\n\n    const dt = this._scrollMetrics.timestamp\n      ? Math.max(1, timestamp - this._scrollMetrics.timestamp)\n      : 1;\n    const velocity = dOffset / dt;\n\n    if (\n      dt > 500 &&\n      this._scrollMetrics.dt > 500 &&\n      contentLength > 5 * visibleLength &&\n      !this._hasWarned.perf\n    ) {\n      infoLog(\n        'VirtualizedList: You have a large list that is slow to update - make sure your ' +\n          'renderItem function renders components that follow React performance best practices ' +\n          'like PureComponent, shouldComponentUpdate, etc.',\n        {dt, prevDt: this._scrollMetrics.dt, contentLength},\n      );\n      this._hasWarned.perf = true;\n    }\n    this._scrollMetrics = {\n      contentLength,\n      dt,\n      dOffset,\n      offset,\n      timestamp,\n      velocity,\n      visibleLength,\n    };\n    this._updateViewableItems(this.props.data);\n    if (!this.props) {\n      return;\n    }\n    this._maybeCallOnEndReached();\n    if (velocity !== 0) {\n      this._fillRateHelper.activate();\n    }\n    this._computeBlankness();\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _scheduleCellsToRenderUpdate() {\n    const {first, last} = this.state;\n    const {offset, visibleLength, velocity} = this._scrollMetrics;\n    const itemCount = this.props.getItemCount(this.props.data);\n    let hiPri = false;\n    if (first > 0 || last < itemCount - 1) {\n      const distTop = offset - this._getFrameMetricsApprox(first).offset;\n      const distBottom =\n        this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      const scrollingThreshold =\n        /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n         * error found when Flow v0.63 was deployed. To see the error delete\n         * this comment and run Flow. */\n        this.props.onEndReachedThreshold * visibleLength / 2;\n      hiPri =\n        Math.min(distTop, distBottom) < 0 ||\n        (velocity < -2 && distTop < scrollingThreshold) ||\n        (velocity > 2 && distBottom < scrollingThreshold);\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    if (hiPri && this._averageCellLength) {\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({abort: true});\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _onScrollBeginDrag = (e): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScrollBeginDrag(e);\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.recordInteraction();\n    });\n    this._hasInteracted = true;\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  };\n\n  _onScrollEndDrag = (e): void => {\n    const {velocity} = e.nativeEvent;\n    if (velocity) {\n      this._scrollMetrics.velocity = this._selectOffset(velocity);\n    }\n    this._computeBlankness();\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  };\n\n  _onMomentumScrollEnd = (e): void => {\n    this._scrollMetrics.velocity = 0;\n    this._computeBlankness();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  };\n\n  _updateCellsToRender = () => {\n    const {data, getItemCount, onEndReachedThreshold} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    this._updateViewableItems(data);\n    if (!data) {\n      return;\n    }\n    this.setState(state => {\n      let newState;\n      if (!isVirtualizationDisabled) {\n        // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n        // and wipe out the initialNumToRender rendered elements.\n        // So let's wait until the scroll view metrics have been set up. And until then,\n        // we will trust the initialNumToRender suggestion\n        if (this._scrollMetrics.visibleLength) {\n          // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n          // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n          // So let's wait until we've scrolled the view to the right place. And until then,\n          // we will trust the initialScrollIndex suggestion.\n          if (!this.props.initialScrollIndex || this._scrollMetrics.offset) {\n            newState = computeWindowedRenderLimits(\n              this.props,\n              state,\n              this._getFrameMetricsApprox,\n              this._scrollMetrics,\n            );\n          }\n        }\n      } else {\n        const {contentLength, offset, visibleLength} = this._scrollMetrics;\n        const distanceFromEnd = contentLength - visibleLength - offset;\n        const renderAhead =\n          /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses\n           * an error found when Flow v0.63 was deployed. To see the error\n           * delete this comment and run Flow. */\n          distanceFromEnd < onEndReachedThreshold * visibleLength\n            ? this.props.maxToRenderPerBatch\n            : 0;\n        newState = {\n          first: 0,\n          last: Math.min(state.last + renderAhead, getItemCount(data) - 1),\n        };\n      }\n      if (newState && this._nestedChildLists.size > 0) {\n        const newFirst = newState.first;\n        const newLast = newState.last;\n        // If some cell in the new state has a child list in it, we should only render\n        // up through that item, so that we give that list a chance to render.\n        // Otherwise there's churn from multiple child lists mounting and un-mounting\n        // their items.\n        for (let ii = newFirst; ii <= newLast; ii++) {\n          const cellKeyForIndex = this._indicesToKeys.get(ii);\n          const childListKeys =\n            cellKeyForIndex &&\n            this._cellKeysToChildListKeys.get(cellKeyForIndex);\n          if (!childListKeys) {\n            continue;\n          }\n          let someChildHasMore = false;\n          // For each cell, need to check whether any child list in it has more elements to render\n          for (let childKey of childListKeys) {\n            const childList = this._nestedChildLists.get(childKey);\n            if (childList && childList.ref && childList.ref.hasMore()) {\n              someChildHasMore = true;\n              break;\n            }\n          }\n          if (someChildHasMore) {\n            newState.last = ii;\n            break;\n          }\n        }\n      }\n      return newState;\n    });\n  };\n\n  _createViewToken = (index: number, isViewable: boolean) => {\n    const {data, getItem, keyExtractor} = this.props;\n    const item = getItem(data, index);\n    return {index, item, key: keyExtractor(item, index), isViewable};\n  };\n\n  _getFrameMetricsApprox = (\n    index: number,\n  ): {length: number, offset: number} => {\n    const frame = this._getFrameMetrics(index);\n    if (frame && frame.index === index) {\n      // check for invalid frames due to row re-ordering\n      return frame;\n    } else {\n      const {getItemLayout} = this.props;\n      invariant(\n        !getItemLayout,\n        'Should not have to estimate frames when a measurement metrics function is provided',\n      );\n      return {\n        length: this._averageCellLength,\n        offset: this._averageCellLength * index,\n      };\n    }\n  };\n\n  _getFrameMetrics = (\n    index: number,\n  ): ?{\n    length: number,\n    offset: number,\n    index: number,\n    inLayout?: boolean,\n  } => {\n    const {\n      data,\n      getItem,\n      getItemCount,\n      getItemLayout,\n      keyExtractor,\n    } = this.props;\n    invariant(\n      getItemCount(data) > index,\n      'Tried to get frame for out of range index ' + index,\n    );\n    const item = getItem(data, index);\n    let frame = item && this._frames[keyExtractor(item, index)];\n    if (!frame || frame.index !== index) {\n      if (getItemLayout) {\n        frame = getItemLayout(data, index);\n        if (__DEV__) {\n          const frameType = PropTypes.shape({\n            length: PropTypes.number.isRequired,\n            offset: PropTypes.number.isRequired,\n            index: PropTypes.number.isRequired,\n          }).isRequired;\n          PropTypes.checkPropTypes(\n            {frame: frameType},\n            {frame},\n            'frame',\n            'VirtualizedList.getItemLayout',\n          );\n        }\n      }\n    }\n    /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.63 was deployed. To see the error delete this\n     * comment and run Flow. */\n    return frame;\n  };\n\n  _updateViewableItems(data: any) {\n    const {getItemCount} = this.props;\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(\n        getItemCount(data),\n        this._scrollMetrics.offset,\n        this._scrollMetrics.visibleLength,\n        this._getFrameMetrics,\n        this._createViewToken,\n        tuple.onViewableItemsChanged,\n        this.state,\n      );\n    });\n  }\n}\n\nclass CellRenderer extends React.Component<\n  {\n    CellRendererComponent?: ?React.ComponentType<any>,\n    ItemSeparatorComponent: ?React.ComponentType<*>,\n    cellKey: string,\n    fillRateHelper: FillRateHelper,\n    horizontal: ?boolean,\n    index: number,\n    inversionStyle: ?DangerouslyImpreciseStyleProp,\n    item: Item,\n    onLayout: (event: Object) => void, // This is extracted by ScrollViewStickyHeader\n    onUnmount: (cellKey: string) => void,\n    onUpdateSeparators: (cellKeys: Array<?string>, props: Object) => void,\n    parentProps: {\n      getItemLayout?: ?Function,\n      renderItem: renderItemType,\n    },\n    prevCellKey: ?string,\n  },\n  $FlowFixMeState,\n> {\n  state = {\n    separatorProps: {\n      highlighted: false,\n      leadingItem: this.props.item,\n    },\n  };\n\n  static childContextTypes = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n  };\n\n  getChildContext() {\n    return {\n      virtualizedCell: {\n        cellKey: this.props.cellKey,\n      },\n    };\n  }\n\n  // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n  _separators = {\n    highlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: true,\n      });\n    },\n    unhighlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: false,\n      });\n    },\n    updateProps: (select: 'leading' | 'trailing', newProps: Object) => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators(\n        [select === 'leading' ? prevCellKey : cellKey],\n        newProps,\n      );\n    },\n  };\n\n  updateSeparatorProps(newProps: Object) {\n    this.setState(state => ({\n      separatorProps: {...state.separatorProps, ...newProps},\n    }));\n  }\n\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n\n  render() {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      fillRateHelper,\n      horizontal,\n      item,\n      index,\n      inversionStyle,\n      parentProps,\n    } = this.props;\n    const {renderItem, getItemLayout} = parentProps;\n    invariant(renderItem, 'no renderItem!');\n    const element = renderItem({\n      item,\n      index,\n      separators: this._separators,\n    });\n    const onLayout =\n      getItemLayout && !parentProps.debug && !fillRateHelper.enabled()\n        ? undefined\n        : this.props.onLayout;\n    // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n    const itemSeparator = ItemSeparatorComponent && (\n      <ItemSeparatorComponent {...this.state.separatorProps} />\n    );\n    const cellStyle = inversionStyle\n      ? horizontal\n        ? [{flexDirection: 'row-reverse'}, inversionStyle]\n        : [{flexDirection: 'column-reverse'}, inversionStyle]\n      : horizontal ? [{flexDirection: 'row'}, inversionStyle] : inversionStyle;\n    if (!CellRendererComponent) {\n      return (\n        <View style={cellStyle} onLayout={onLayout}>\n          {element}\n          {itemSeparator}\n        </View>\n      );\n    }\n    return (\n      <CellRendererComponent\n        {...this.props}\n        style={cellStyle}\n        onLayout={onLayout}>\n        {element}\n        {itemSeparator}\n      </CellRendererComponent>\n    );\n  }\n}\n\nclass VirtualizedCellWrapper extends React.Component<{\n  cellKey: string,\n  children: React.Node,\n}> {\n  static childContextTypes = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n  };\n\n  getChildContext() {\n    return {\n      virtualizedCell: {\n        cellKey: this.props.cellKey,\n      },\n    };\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nconst styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{scaleY: -1}],\n  },\n  horizontallyInverted: {\n    transform: [{scaleX: -1}],\n  },\n});\n\nmodule.exports = VirtualizedList;\n"]}