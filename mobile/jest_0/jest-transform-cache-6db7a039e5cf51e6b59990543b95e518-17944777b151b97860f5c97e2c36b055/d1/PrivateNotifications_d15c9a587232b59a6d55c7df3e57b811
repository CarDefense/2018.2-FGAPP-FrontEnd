a72199a8488b0370ef025eba1765abf0
Object.defineProperty(exports,"__esModule",{value:true});exports.default=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _reactNativeMaterialTextfield=require('react-native-material-textfield');var _expo=require('expo');var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactNative=require('react-native');var _Const=require('../const/Const');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var tk;function register(){var _ref,status,value;return regeneratorRuntime.async(function register$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return regeneratorRuntime.awrap(Expo.Permissions.askAsync(Expo.Permissions.NOTIFICATIONS));case 2:_ref=_context.sent;status=_ref.status;if(!(status!='granted')){_context.next=7;break;}alert('You need to enable permissions in settings');return _context.abrupt('return');case 7:_context.next=9;return regeneratorRuntime.awrap(Expo.Notifications.getExpoPushTokenAsync());case 9:value=_context.sent;tk=value;console.log(status,value);case 12:case'end':return _context.stop();}}},null,this);}var PrivateNotifications=function(_Component){_inherits(PrivateNotifications,_Component);_createClass(PrivateNotifications,[{key:'componentWillMount',value:function componentWillMount(){register();this.listener=Expo.Notifications.addListener(this.listen);}},{key:'componentWillUnmount',value:function componentWillUnmount(){this.listener&&Expo.Notifications.addListener(this.listen);}}]);function PrivateNotifications(props){var _this2=this;_classCallCheck(this,PrivateNotifications);var _this=_possibleConstructorReturn(this,(PrivateNotifications.__proto__||Object.getPrototypeOf(PrivateNotifications)).call(this,props));_this.listen=function(_ref2){var origin=_ref2.origin,data=_ref2.data;console.log('cool data',origin,data);};_this.onPressButton=function(){var errors={};var url=_Const.NOTIFICATIONS_API+'/send_push_message/';var errorPlate=false;var errorMessage=false;['plate'].forEach(function(text){var value=_this[text].value();if(!value){errors[text]='Campo obrigatório.';errorPlate=true;}else{if('plate'===text&&value.length<8){errors[text]='Placa inválida. Ex.:AAA-0000';errorPlate=true;}}});['message'].forEach(function(text){var value=_this[text].value();if(!value){errors[text]='Campo obrigatório.';errorMessage=true;}else{if('message'===text&&value.length<5){errors[text]='Forneça mais detalhes do ocorrido.';errorMessage=true;}}});if(errorPlate==false&&errorMessage==false){var notification=JSON.stringify({sender_id:tk,title:_this.state.title,plate:_this.state.plate,message:_this.state.message,image:_this.state.image});console.log(notification);fetch(url,{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:notification}).then(function(response){return response.json();}).then(function(jsonResponse){console.log(jsonResponse);_reactNative.Alert.alert("Notificação enviada!");}).catch(function(error){console.log(error);_reactNative.Alert.alert("Placa não existe!");});}_this.setState({errors:errors});};_this._maybeRenderUploadingOverlay=function(){if(_this.state.uploading){return _react2.default.createElement(_reactNative.View,{style:styles.maybeRenderUploading},_react2.default.createElement(_reactNative.ActivityIndicator,{color:'#313869',size:'large'}));}};_this._maybeRenderImage=function(){var image=_this.state.image;if(!image){return;}return _react2.default.createElement(_reactNative.View,{style:styles.maybeRenderContainer},_react2.default.createElement(_reactNative.View,{style:styles.maybeRenderImageContainer},_react2.default.createElement(_reactNative.Image,{source:{uri:image},style:styles.maybeRenderImage})));};_this._share=function(){Share.share({message:_this.state.image,title:'Check out this photo',url:_this.state.image});};_this._copyToClipboard=function(){Clipboard.setString(_this.state.image);alert('Copied image URL to clipboard');};_this._takePhoto=function _callee(){var _ref3,cameraPerm,_ref4,cameraRollPerm,pickerResult;return regeneratorRuntime.async(function _callee$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return regeneratorRuntime.awrap(_expo.Permissions.askAsync(_expo.Permissions.CAMERA));case 2:_ref3=_context2.sent;cameraPerm=_ref3.status;_context2.next=6;return regeneratorRuntime.awrap(_expo.Permissions.askAsync(_expo.Permissions.CAMERA_ROLL));case 6:_ref4=_context2.sent;cameraRollPerm=_ref4.status;if(!(cameraPerm==='granted'&&cameraRollPerm==='granted')){_context2.next=13;break;}_context2.next=11;return regeneratorRuntime.awrap(_expo.ImagePicker.launchCameraAsync({allowsEditing:true}));case 11:pickerResult=_context2.sent;_this._handleImagePicked(pickerResult);case 13:case'end':return _context2.stop();}}},null,_this2);};_this._pickImage=function _callee2(){var _ref5,cameraRollPerm,pickerResult;return regeneratorRuntime.async(function _callee2$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return regeneratorRuntime.awrap(_expo.Permissions.askAsync(_expo.Permissions.CAMERA_ROLL));case 2:_ref5=_context3.sent;cameraRollPerm=_ref5.status;if(!(cameraRollPerm==='granted')){_context3.next=9;break;}_context3.next=7;return regeneratorRuntime.awrap(_expo.ImagePicker.launchImageLibraryAsync({allowsEditing:true}));case 7:pickerResult=_context3.sent;_this._handleImagePicked(pickerResult);case 9:case'end':return _context3.stop();}}},null,_this2);};_this._handleImagePicked=function _callee3(pickerResult){var uploadResponse,uploadResult;return regeneratorRuntime.async(function _callee3$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:uploadResponse=void 0,uploadResult=void 0;_context4.prev=1;_this.setState({uploading:true});if(pickerResult.cancelled){_context4.next=12;break;}_context4.next=6;return regeneratorRuntime.awrap(uploadImageAsync(pickerResult.uri));case 6:uploadResponse=_context4.sent;_context4.next=9;return regeneratorRuntime.awrap(uploadResponse.json());case 9:uploadResult=_context4.sent;console.log(uploadResult.image);_this.setState({image:uploadResult.image});case 12:_context4.next=20;break;case 14:_context4.prev=14;_context4.t0=_context4['catch'](1);console.log({uploadResponse:uploadResponse});console.log({uploadResult:uploadResult});console.log({e:_context4.t0});alert('Upload failed, sorry :(');case 20:_context4.prev=20;_this.setState({uploading:false});return _context4.finish(20);case 23:case'end':return _context4.stop();}}},null,_this2,[[1,14,20,23]]);};_this.plateRef=_this.updateRef.bind(_this,'plate');_this.messageRef=_this.updateRef.bind(_this,'message');_this.onFocus=_this.onFocus.bind(_this);_this.state={title:'Notificação',plate:'',message:'',image:null,uploading:false};return _this;}_createClass(PrivateNotifications,[{key:'onFocus',value:function onFocus(){var _state$errors=this.state.errors,errors=_state$errors===undefined?{}:_state$errors;for(var text in errors){var ref=this[text];if(ref&&ref.isFocused()){delete errors[text];}}this.setState({errors:errors});}},{key:'onChangeText',value:function onChangeText(words){var _this3=this;['plate'].map(function(text){return{text:text,ref:_this3[text]};}).forEach(function(_ref6){var text=_ref6.text,ref=_ref6.ref;if(ref&&ref.isFocused()){_this3.setState(_defineProperty({},text,words));}});['message'].map(function(text){return{text:text,ref:_this3[text]};}).forEach(function(_ref7){var text=_ref7.text,ref=_ref7.ref;if(ref&&ref.isFocused()){_this3.setState(_defineProperty({},text,words));}});}},{key:'updateRef',value:function updateRef(text,ref){this[text]=ref;}},{key:'render',value:function render(){var _this4=this;var image=this.state.image;var _state=this.state,_state$errors2=_state.errors,errors=_state$errors2===undefined?{}:_state$errors2,data=_objectWithoutProperties(_state,['errors']);var _data$plate=data.plate,plate=_data$plate===undefined?'text':_data$plate;var _data$message=data.message,message=_data$message===undefined?'text':_data$message;return _react2.default.createElement(_reactNative.ScrollView,null,_react2.default.createElement(_reactNative.View,{style:styles.container},_react2.default.createElement(_reactNative.Text,{style:styles.header},'Notifica\xE7\xE3o'),_react2.default.createElement(_reactNativeMaterialTextfield.TextField,{ref:this.plateRef,value:data.plate,autoCorrect:false,enablesReturnKeyAutomatically:true,onFocus:this.onFocus,onChangeText:function onChangeText(plate){return _this4.setState({plate:plate});},returnKeyType:'next',label:'Placa',tintColor:'#760f9f',underlineColorAndroid:'transparent',maxLength:8,autoCapitalize:'characters',error:errors.plate}),_react2.default.createElement(_reactNativeMaterialTextfield.TextField,{ref:this.messageRef,value:data.message,autoCorrect:false,enablesReturnKeyAutomatically:true,onFocus:this.onFocus,onChangeText:function onChangeText(message){return _this4.setState({message:message});},returnKeyType:'next',label:'Descri\xE7\xE3o',tintColor:'#760f9f',error:errors.message}),_react2.default.createElement(_reactNative.Text,{style:styles.text},'Adicionar imagem'),_react2.default.createElement(_reactNative.View,{style:styles.alternativeLayoutButtonContainer},_react2.default.createElement(_reactNative.TouchableOpacity,{style:styles.button,color:'#760f9f',onPress:this._takePhoto,containerViewStyle:{width:'40%'}},_react2.default.createElement(_reactNative.Text,{style:{color:'white'}},'Camera')),_react2.default.createElement(_reactNative.TouchableOpacity,{style:styles.button2,color:'#540b71',onPress:this._pickImage,containerViewStyle:{width:'40%'}},_react2.default.createElement(_reactNative.Text,{style:{color:'white'}},'Galeria'))),this._maybeRenderImage(),this._maybeRenderUploadingOverlay(),_react2.default.createElement(_reactNative.View,{style:styles.container1},_react2.default.createElement(_reactNative.TouchableOpacity,{style:styles.button3,color:'#760f9f',onPress:this.onPressButton,containerViewStyle:{width:'40%'}},_react2.default.createElement(_reactNative.Text,{style:{color:'white'}},'Enviar')))));}}]);return PrivateNotifications;}(_react.Component);exports.default=PrivateNotifications;function uploadImageAsync(uri){var apiUrl,uriParts,fileType,formData,options;return regeneratorRuntime.async(function uploadImageAsync$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:apiUrl=_Const.NOTIFICATIONS_API+'/notificationsimage/';uriParts=uri.split('.');fileType=uriParts[uriParts.length-1];formData=new FormData();formData.append('image',{uri:uri,name:'photo.'+fileType,type:'image/'+fileType});console.log(uri);options={method:'POST',body:formData,headers:{Accept:'application/json','Content-Type':'multipart/form-data'}};return _context5.abrupt('return',fetch(apiUrl,options));case 8:case'end':return _context5.stop();}}},null,this);}var styles=_reactNative.StyleSheet.create({container:{paddingLeft:16,paddingRight:16},text:{paddingTop:16,color:"#760f9f",fontWeight:'bold'},alternativeLayoutButtonContainer:{flexDirection:'row',justifyContent:'space-between',paddingTop:4,paddingRight:4},button:{backgroundColor:"#760f9f",borderRadius:15,height:40,width:190,flexDirection:'row',justifyContent:'center',alignItems:'center'},button2:{backgroundColor:"#540b71",borderRadius:15,height:40,width:120,flexDirection:'row',justifyContent:'center',alignItems:'center'},button3:{backgroundColor:"#760f9f",borderRadius:15,height:40,width:120,flexDirection:'row',justifyContent:'center',alignItems:'center'},container1:{paddingTop:20,flexDirection:'row',justifyContent:'center'},header:{color:"#760f9f",textAlign:'center',fontWeight:'200',fontSize:50,marginTop:25},maybeRenderUploading:{paddingTop:8,alignItems:'center',backgroundColor:'rgba(0,0,0,0.0)',justifyContent:'center'},maybeRenderContainer:{width:'100%',height:'40%',justifyContent:'center',alignItems:'center',borderRadius:3,elevation:2,marginTop:32,shadowColor:'rgba(0,0,0,1)',shadowOpacity:0.2,shadowOffset:{height:4,width:4},shadowRadius:5},maybeRenderImageContainer:{borderTopLeftRadius:3,borderTopRightRadius:3,overflow:'hidden'},maybeRenderImage:{height:250,width:250}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,