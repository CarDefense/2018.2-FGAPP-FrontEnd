{"version":3,"sources":["Feed.js"],"names":["tk","register","Expo","Permissions","askAsync","NOTIFICATIONS","status","alert","Notifications","getExpoPushTokenAsync","value","console","log","Feed","listener","addListener","listen","props","origin","data","_onRefresh","setState","refreshing","componentDidMount","then","state","navigation","token","params","undefined","user","notification","JSON","stringify","id_token","user_id","notification_token","fetch","PROFILE_API","method","headers","body","response","json","jsonResponse","catch","error","NOTIFICATIONS_API","responseJson","isLoading","dataSource","styles","item","item2","text1","title","uri","image","width","height","text","message","index","id","React","Component","StyleSheet","create","backgroundColor","margin","shadowColor","shadowOpacity","shadowRadius","shadowOffset","elevation","alignItems","justifyContent","flexGrow","padding","borderRadius","color","fontWeight"],"mappings":"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","file":"Feed.js","sourcesContent":["import React from 'react';\nimport { FlatList, Text, View, StyleSheet, ScrollView, RefreshControl, Image } from 'react-native';\nimport jwt_decode from 'jwt-decode';\nimport { NOTIFICATIONS_API, PROFILE_API } from './TabNavigator/const/Const.js'\nimport Expo from 'expo'\nvar tk\n\nasync function register() {\n  const { status } = await Expo.Permissions.askAsync(\n    Expo.Permissions.NOTIFICATIONS\n  );\n  if (status != 'granted') {\n    alert('You need to enable permissions in settings');\n    return;\n  }\n\n  const value = await Expo.Notifications.getExpoPushTokenAsync();\n  tk = value;\n  console.log(status, value);\n  \n}\n\nexport default class Feed extends React.Component {\n  componentWillMount() {\n    register();\n    this.listener = Expo.Notifications.addListener(this.listen);\n  }\n  componentWillUnmount() {\n    this.listener && Expo.Notifications.addListener(this.listen);\n  }\n\n  listen = ({ origin, data }) => {\n    console.log('cool data', origin, data);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = { refreshing: false, }\n  }\n\n  async componentDidMount() {\n\n    const {state} = this.props.navigation;\n    var token = state.params ? state.params.token : undefined;\n    console.log(token)\n    user = jwt_decode(token)\n      \n    console.log(token)\n    let notification = JSON.stringify({\n      id_token: user.user_id,\n      notification_token: tk,\n    })\n    console.log(notification);\n    fetch(PROFILE_API + '/set_token/', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: notification\n    }).then(response => { return response.json() }\n    ).then(jsonResponse => {\n      console.log(jsonResponse);\n    }\n    ).catch(error => {\n      console.log(error)\n    })\n\n    return fetch(NOTIFICATIONS_API + '/emergencynotifications/')\n      .then((response) => response.json())\n      .then((responseJson) => {\n\n        this.setState({\n          isLoading: false,\n          dataSource: responseJson,\n        }, function () {\n\n        });\n\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  _onRefresh = () => {\n    this.setState({ refreshing: true });\n    this.componentDidMount().then(() => {\n      this.setState({ refreshing: false });\n    });\n  }\n  render() {\n    return (\n      <ScrollView style={styles.item}\n        refreshControl={\n          <RefreshControl\n            refreshing={this.state.refreshing}\n            onRefresh={this._onRefresh}\n          />\n        }\n      >\n        <FlatList\n          data={this.state.dataSource}\n          renderItem={({ item }) => {\n            return (\n              <View style={styles.item2}>\n                <Text style={styles.text1}>{item.title}</Text>\n                <Image source={{uri:item.image}}\n                  style={{width: 400, height: 200}} />\n                <Text style={styles.text}>{item.message}</Text>\n              </View>\n            );\n          }}\n          keyExtractor={({ id }, index) => id}\n\n        />\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  item: {\n    backgroundColor: \"#ffffff\",\n    margin: 4,\n    shadowColor: \"#000000\",\n    shadowOpacity: 0.8,\n    shadowRadius: 2,\n    shadowOffset: {\n      height: 1,\n      width: 1\n    },\n    elevation: 4\n  },\n  item2: {\n    alignItems: \"center\",\n    justifyContent: 'center',\n    backgroundColor: \"#ffffff\",\n    flexGrow: 1,\n    margin: 4,\n    padding: 20,\n    borderRadius: 10,\n    shadowColor: \"#000000\",\n    shadowOpacity: 0.8,\n    shadowRadius: 2,\n    shadowOffset: {\n      height: 1,\n      width: 1\n    },\n    elevation: 4\n  },\n  text: {\n    color: \"#540b71\",\n    fontWeight: '100'\n  },\n  text1: {\n    color: \"#540b71\",\n    fontWeight: 'bold',\n  }\n});\n"]}