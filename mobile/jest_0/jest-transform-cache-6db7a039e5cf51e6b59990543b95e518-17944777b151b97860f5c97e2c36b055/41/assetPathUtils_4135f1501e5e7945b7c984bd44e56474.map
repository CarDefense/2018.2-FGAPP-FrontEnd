{"version":3,"sources":["assetPathUtils.js"],"names":["getAndroidAssetSuffix","scale","Error","drawableFileTypes","Set","getAndroidResourceFolderName","asset","has","type","suffix","JSON","stringify","androidFolder","getAndroidResourceIdentifier","folderPath","getBasePath","name","toLowerCase","replace","basePath","httpServerLocation","substr","module","exports"],"mappings":"AASA,aAQA,QAASA,sBAAT,CAA+BC,KAA/B,CAAsD,CACpD,OAAQA,KAAR,EACE,IAAK,KAAL,CAAW,MAAO,MAAP,CACX,IAAK,EAAL,CAAQ,MAAO,MAAP,CACR,IAAK,IAAL,CAAU,MAAO,MAAP,CACV,IAAK,EAAL,CAAQ,MAAO,OAAP,CACR,IAAK,EAAL,CAAQ,MAAO,QAAP,CACR,IAAK,EAAL,CAAQ,MAAO,SAAP,CANV,CAQA,KAAM,IAAIC,MAAJ,CAAU,eAAV,CAAN,CACD,CAGD,GAAMC,mBAAoB,GAAIC,IAAJ,CAAQ,CAChC,KADgC,CAEhC,MAFgC,CAGhC,KAHgC,CAIhC,KAJgC,CAKhC,KALgC,CAMhC,MANgC,CAOhC,KAPgC,CAAR,CAA1B,CAUA,QAASC,6BAAT,CAAsCC,KAAtC,CAA4DL,KAA5D,CAA2E,CACzE,GAAI,CAACE,kBAAkBI,GAAlB,CAAsBD,MAAME,IAA5B,CAAL,CAAwC,CACtC,MAAO,KAAP,CACD,CACD,GAAIC,QAAST,sBAAsBC,KAAtB,CAAb,CACA,GAAI,CAACQ,MAAL,CAAa,CACX,KAAM,IAAIP,MAAJ,CACJ,+DACAQ,KAAKC,SAAL,CAAeL,KAAf,CAFI,CAAN,CAID,CACD,GAAMM,eAAgB,YAAcH,MAApC,CACA,MAAOG,cAAP,CACD,CAED,QAASC,6BAAT,CAAsCP,KAAtC,CAA4D,CAC1D,GAAIQ,YAAaC,YAAYT,KAAZ,CAAjB,CACA,MAAO,CAACQ,WAAa,GAAb,CAAmBR,MAAMU,IAA1B,EACJC,WADI,GAEJC,OAFI,CAEI,KAFJ,CAEW,GAFX,EAGJA,OAHI,CAGI,eAHJ,CAGqB,EAHrB,EAIJA,OAJI,CAII,UAJJ,CAIgB,EAJhB,CAAP,CAKD,CAED,QAASH,YAAT,CAAqBT,KAArB,CAA2C,CACzC,GAAIa,UAAWb,MAAMc,kBAArB,CACA,GAAID,SAAS,CAAT,IAAgB,GAApB,CAAyB,CACvBA,SAAWA,SAASE,MAAT,CAAgB,CAAhB,CAAX,CACD,CACD,MAAOF,SAAP,CACD,CAEDG,OAAOC,OAAP,CAAiB,CACfvB,sBAAuBA,qBADR,CAEfK,6BAA8BA,4BAFf,CAGfQ,6BAA8BA,4BAHf,CAIfE,YAAaA,WAJE,CAAjB","file":"assetPathUtils.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n'use strict';\n\nimport type {PackagerAsset} from '../../Libraries/Image/AssetRegistry';\n\n/**\n * FIXME: using number to represent discrete scale numbers is fragile in essence because of\n * floating point numbers imprecision.\n */\nfunction getAndroidAssetSuffix(scale: number): string {\n  switch (scale) {\n    case 0.75: return 'ldpi';\n    case 1: return 'mdpi';\n    case 1.5: return 'hdpi';\n    case 2: return 'xhdpi';\n    case 3: return 'xxhdpi';\n    case 4: return 'xxxhdpi';\n  }\n  throw new Error('no such scale');\n}\n\n// See https://developer.android.com/guide/topics/resources/drawable-resource.html\nconst drawableFileTypes = new Set([\n  'gif',\n  'jpeg',\n  'jpg',\n  'png',\n  'svg',\n  'webp',\n  'xml',\n]);\n\nfunction getAndroidResourceFolderName(asset: PackagerAsset, scale: number) {\n  if (!drawableFileTypes.has(asset.type)) {\n    return 'raw';\n  }\n  var suffix = getAndroidAssetSuffix(scale);\n  if (!suffix) {\n    throw new Error(\n      'Don\\'t know which android drawable suffix to use for asset: ' +\n      JSON.stringify(asset)\n    );\n  }\n  const androidFolder = 'drawable-' + suffix;\n  return androidFolder;\n}\n\nfunction getAndroidResourceIdentifier(asset: PackagerAsset) {\n  var folderPath = getBasePath(asset);\n  return (folderPath + '/' + asset.name)\n    .toLowerCase()\n    .replace(/\\//g, '_')           // Encode folder structure in file name\n    .replace(/([^a-z0-9_])/g, '')  // Remove illegal chars\n    .replace(/^assets_/, '');      // Remove \"assets_\" prefix\n}\n\nfunction getBasePath(asset: PackagerAsset) {\n  var basePath = asset.httpServerLocation;\n  if (basePath[0] === '/') {\n    basePath = basePath.substr(1);\n  }\n  return basePath;\n}\n\nmodule.exports = {\n  getAndroidAssetSuffix: getAndroidAssetSuffix,\n  getAndroidResourceFolderName: getAndroidResourceFolderName,\n  getAndroidResourceIdentifier: getAndroidResourceIdentifier,\n  getBasePath: getBasePath\n};\n"]}