{"version":3,"sources":["index.js"],"names":["Label","props","state","input","Animated","Value","inputState","focus","focusState","active","focused","errored","duration","animationDuration","toValue","timing","start","children","restricted","fontSize","activeFontSize","errorColor","baseColor","tintColor","baseSize","basePadding","style","color","interpolate","inputRange","outputRange","top","textStyle","containerStyle","position","PureComponent","defaultProps","numberOfLines","propTypes","PropTypes","bool","number","isRequired","string","Text","oneOfType","arrayOf","node"],"mappings":"uxBAAA,qC,mDACA,4B,2CACA,yC,ykCAEqBA,M,0DAmCnB,eAAYC,KAAZ,CAAmB,iIACXA,KADW,GAGjB,MAAKC,KAAL,CAAa,CACXC,MAAO,GAAIC,uBAASC,KAAb,CAAmB,MAAKC,UAAL,EAAnB,CADI,CAEXC,MAAO,GAAIH,uBAASC,KAAb,CAAmB,MAAKG,UAAL,EAAnB,CAFI,CAAb,CAHiB,aAOlB,C,8FAEyBP,K,CAAO,YACR,KAAKC,KADG,CACzBK,KADyB,QACzBA,KADyB,CAClBJ,KADkB,QAClBA,KADkB,YAEiC,KAAKF,KAFtC,CAEzBQ,MAFyB,QAEzBA,MAFyB,CAEjBC,OAFiB,QAEjBA,OAFiB,CAERC,OAFQ,QAERA,OAFQ,CAEoBC,QAFpB,QAECC,iBAFD,CAI/B,GAAIH,QAAUT,MAAMS,OAAhB,EAA2BD,OAASR,MAAMQ,MAA9C,CAAsD,CACpD,GAAIK,SAAU,KAAKR,UAAL,CAAgBL,KAAhB,CAAd,CAEAG,sBACGW,MADH,CACUZ,KADV,CACiB,CAAEW,eAAF,CAAWF,iBAAX,CADjB,EAEGI,KAFH,GAGD,CAED,GAAIN,QAAUT,MAAMS,OAAhB,EAA2BC,QAAUV,MAAMU,OAA/C,CAAwD,CACtD,GAAIG,UAAU,KAAKN,UAAL,CAAgBP,KAAhB,CAAd,CAEAG,sBACGW,MADH,CACUR,KADV,CACiB,CAAEO,gBAAF,CAAWF,iBAAX,CADjB,EAEGI,KAFH,GAGD,CACF,C,+CAE4C,oEAAZ,KAAKf,KAAO,CAAhCS,OAAgC,MAAhCA,OAAgC,CAAvBD,MAAuB,MAAvBA,MAAuB,CAC3C,MAAOA,SAAUC,OAAV,CAAmB,CAAnB,CAAuB,CAA9B,CACD,C,+CAE6C,qEAAZ,KAAKT,KAAO,CAAjCS,OAAiC,OAAjCA,OAAiC,CAAxBC,OAAwB,OAAxBA,OAAwB,CAC5C,MAAOA,SAAS,CAAC,CAAV,CAAeD,QAAS,CAAT,CAAa,CAAnC,CACD,C,uCAEQ,aACgB,KAAKR,KADrB,CACDK,KADC,SACDA,KADC,CACMJ,KADN,SACMA,KADN,aAkBH,KAAKF,KAlBF,CAGLgB,QAHK,SAGLA,QAHK,CAILC,UAJK,SAILA,UAJK,CAKLC,QALK,SAKLA,QALK,CAMLC,cANK,SAMLA,cANK,CAOLC,UAPK,SAOLA,UAPK,CAQLC,SARK,SAQLA,SARK,CASLC,SATK,SASLA,SATK,CAULC,QAVK,SAULA,QAVK,CAWLC,WAXK,SAWLA,WAXK,CAYLC,KAZK,SAYLA,KAZK,CAaLf,OAbK,SAaLA,OAbK,CAcLF,MAdK,SAcLA,MAdK,CAeLC,OAfK,SAeLA,OAfK,CAgBLG,iBAhBK,SAgBLA,iBAhBK,CAiBFZ,KAjBE,gNAoBP,GAAI0B,OAAQT,WACVG,UADU,CAEVd,MAAMqB,WAAN,CAAkB,CAChBC,WAAY,CAAC,CAAC,CAAF,CAAK,CAAL,CAAQ,CAAR,CADI,CAEhBC,YAAa,CAACT,UAAD,CAAaC,SAAb,CAAwBC,SAAxB,CAFG,CAAlB,CAFF,CAOA,GAAIQ,KAAM5B,MAAMyB,WAAN,CAAkB,CAC1BC,WAAY,CAAC,CAAD,CAAI,CAAJ,CADc,CAE1BC,YAAa,CACXN,SAAWL,SAAW,IADX,CAEXK,SAAWC,WAAX,CAAyBL,cAFd,CAFa,CAAlB,CAAV,CAQA,GAAIY,WAAY,CACdb,SAAUhB,MAAMyB,WAAN,CAAkB,CAC1BC,WAAY,CAAC,CAAD,CAAI,CAAJ,CADc,CAE1BC,YAAa,CAACX,QAAD,CAAWC,cAAX,CAFa,CAAlB,CADI,CAMdO,WANc,CAAhB,CASA,GAAIM,gBAAiB,CACnBC,SAAU,UADS,CAEnBH,OAFmB,CAArB,CAKA,MACE,+BAAC,qBAAD,CAAU,IAAV,EAAe,MAAOE,cAAtB,EACE,8BAAC,qBAAD,CAAU,IAAV,WAAe,MAAO,CAACP,KAAD,CAAQM,SAAR,CAAtB,EAA8C/B,KAA9C,EACGgB,QADH,CADF,CADF,CAOD,C,mBAjIgCkB,oB,EAAdnC,K,CACZoC,Y,CAAe,CACpBC,cAAe,CADK,CAGpB5B,OAAQ,KAHY,CAIpBC,QAAS,KAJW,CAKpBC,QAAS,KALW,CAMpBO,WAAY,KANQ,C,CADHlB,K,CAUZsC,S,CAAY,CACjB7B,OAAQ8B,oBAAUC,IADD,CAEjB9B,QAAS6B,oBAAUC,IAFF,CAGjB7B,QAAS4B,oBAAUC,IAHF,CAIjBtB,WAAYqB,oBAAUC,IAJL,CAMjBhB,SAAUe,oBAAUE,MAAV,CAAiBC,UANV,CAOjBvB,SAAUoB,oBAAUE,MAAV,CAAiBC,UAPV,CAQjBtB,eAAgBmB,oBAAUE,MAAV,CAAiBC,UARhB,CASjBjB,YAAac,oBAAUE,MAAV,CAAiBC,UATb,CAWjBnB,UAAWgB,oBAAUI,MAAV,CAAiBD,UAXX,CAYjBpB,UAAWiB,oBAAUI,MAAV,CAAiBD,UAZX,CAajBrB,WAAYkB,oBAAUI,MAAV,CAAiBD,UAbZ,CAejB7B,kBAAmB0B,oBAAUE,MAAV,CAAiBC,UAfnB,CAiBjBhB,MAAOtB,sBAASwC,IAAT,CAAcN,SAAd,CAAwBZ,KAjBd,CAmBjBT,SAAUsB,oBAAUM,SAAV,CAAoB,CAC5BN,oBAAUO,OAAV,CAAkBP,oBAAUQ,IAA5B,CAD4B,CAE5BR,oBAAUQ,IAFkB,CAApB,CAnBO,C,iBAVA/C,K","file":"index.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { Animated } from 'react-native';\n\nexport default class Label extends PureComponent {\n  static defaultProps = {\n    numberOfLines: 1,\n\n    active: false,\n    focused: false,\n    errored: false,\n    restricted: false,\n  };\n\n  static propTypes = {\n    active: PropTypes.bool,\n    focused: PropTypes.bool,\n    errored: PropTypes.bool,\n    restricted: PropTypes.bool,\n\n    baseSize: PropTypes.number.isRequired,\n    fontSize: PropTypes.number.isRequired,\n    activeFontSize: PropTypes.number.isRequired,\n    basePadding: PropTypes.number.isRequired,\n\n    tintColor: PropTypes.string.isRequired,\n    baseColor: PropTypes.string.isRequired,\n    errorColor: PropTypes.string.isRequired,\n\n    animationDuration: PropTypes.number.isRequired,\n\n    style: Animated.Text.propTypes.style,\n\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n    ]),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: new Animated.Value(this.inputState()),\n      focus: new Animated.Value(this.focusState()),\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    let { focus, input } = this.state;\n    let { active, focused, errored, animationDuration: duration } = this.props;\n\n    if (focused ^ props.focused || active ^ props.active) {\n      let toValue = this.inputState(props);\n\n      Animated\n        .timing(input, { toValue, duration })\n        .start();\n    }\n\n    if (focused ^ props.focused || errored ^ props.errored) {\n      let toValue = this.focusState(props);\n\n      Animated\n        .timing(focus, { toValue, duration })\n        .start();\n    }\n  }\n\n  inputState({ focused, active } = this.props) {\n    return active || focused? 1 : 0;\n  }\n\n  focusState({ focused, errored } = this.props) {\n    return errored? -1 : (focused? 1 : 0);\n  }\n\n  render() {\n    let { focus, input } = this.state;\n    let {\n      children,\n      restricted,\n      fontSize,\n      activeFontSize,\n      errorColor,\n      baseColor,\n      tintColor,\n      baseSize,\n      basePadding,\n      style,\n      errored,\n      active, \n      focused,\n      animationDuration,\n      ...props\n    } = this.props;\n\n    let color = restricted?\n      errorColor:\n      focus.interpolate({\n        inputRange: [-1, 0, 1],\n        outputRange: [errorColor, baseColor, tintColor],\n      });\n\n    let top = input.interpolate({\n      inputRange: [0, 1],\n      outputRange: [\n        baseSize + fontSize * 0.25,\n        baseSize - basePadding - activeFontSize,\n      ],\n    });\n\n    let textStyle = {\n      fontSize: input.interpolate({\n        inputRange: [0, 1],\n        outputRange: [fontSize, activeFontSize],\n      }),\n\n      color,\n    };\n\n    let containerStyle = {\n      position: 'absolute',\n      top,\n    };\n\n    return (\n      <Animated.View style={containerStyle}>\n        <Animated.Text style={[style, textStyle]} {...props}>\n          {children}\n        </Animated.Text>\n      </Animated.View>\n    );\n  }\n}\n"]}