{"version":3,"sources":["Function-test.js"],"names":["it","feedData","renderer","create","getInstance","getFeedInfo","expect","state","isLoading","toEqual","_onRefresh","refreshing"],"mappings":"AAAA,wBACA,4B,2CACA,uE,yCACA,sD,sJAEAA,GAAG,sBAAH,CAA2B,UAAM,CAC7B,GAAIC,UAAWC,4BAASC,MAAT,CAAgB,8BAAC,cAAD,MAAhB,EAAyBC,WAAzB,EAAf,CAEAH,SAASI,WAAT,GAEAC,OAAOL,SAASM,KAAT,CAAeC,SAAtB,EAAiCC,OAAjC,GACH,CAND,EAQAT,GAAG,uBAAH,CAA4B,UAAM,CAC9B,GAAIC,UAAWC,4BAASC,MAAT,CAAgB,8BAAC,cAAD,MAAhB,EAAyBC,WAAzB,EAAf,CAEAH,SAASI,WAAT,GAEAC,OAAOL,SAASI,WAAT,EAAP,EAA+BI,OAA/B,CAAuC,CAAC,MAAO,CAAR,CAAW,MAAO,IAAlB,CAAwB,MAAO,CAA/B,CAAkC,MAAO,IAAzC,CAAvC,EACH,CAND,EAQAT,GAAG,oBAAH,CAAyB,UAAM,CAC3B,GAAIC,UAAWC,4BAASC,MAAT,CAAgB,8BAAC,cAAD,MAAhB,EAAyBC,WAAzB,EAAf,CAEAH,SAASS,UAAT,GAEAJ,OAAOL,SAASS,UAAT,CAAoB,KAApB,CAAP,EAAmCD,OAAnC,GACAH,OAAOL,SAASM,KAAT,CAAeI,UAAtB,EAAkCF,OAAlC,CAA0C,KAA1C,EACH,CAPD,EASAT,GAAG,qBAAH,CAA0B,UAAM,CAC5B,GAAIC,UAAWC,4BAASC,MAAT,CAAgB,8BAAC,cAAD,MAAhB,EAAyBC,WAAzB,EAAf,CAEAH,SAASS,UAAT,GAEAJ,OAAOL,SAASM,KAAT,CAAeI,UAAtB,EAAkCF,OAAlC,CAA0C,KAA1C,EACH,CAND","file":"Function-test.js","sourcesContent":["import 'react-native'\nimport React from 'react'\nimport Feed from '../screens/tab_navigator/car_defense/screens/Feed'\nimport renderer from 'react-test-renderer'\n\nit('Function getFeedInfo', () => {\n    let feedData = renderer.create(<Feed/>).getInstance()\n\n    feedData.getFeedInfo()\n\n    expect(feedData.state.isLoading).toEqual()\n})\n\nit('Function getFeedInfo2', () => {\n    let feedData = renderer.create(<Feed/>).getInstance()\n\n    feedData.getFeedInfo()\n\n    expect(feedData.getFeedInfo()).toEqual({\"_40\": 0, \"_55\": null, \"_65\": 0, \"_72\": null})\n})\n\nit('Function onRefresh', () => {\n    let feedData = renderer.create(<Feed/>).getInstance()\n\n    feedData._onRefresh()\n\n    expect(feedData._onRefresh(false)).toEqual()\n    expect(feedData.state.refreshing).toEqual(false)\n})\n\nit('Function onRefresh2', () => {\n    let feedData = renderer.create(<Feed/>).getInstance()\n\n    feedData._onRefresh()\n\n    expect(feedData.state.refreshing).toEqual(false)\n})\n\n// it('Function get', () => {\n//     let feedData = renderer.create(<Feed/>).getInstance()\n\n//     feedData.componentDidMount()\n\n//     expect(feedData.componentDidMount(true)).toEqual()\n// })"]}